{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/shared.js","../src/App.html","../src/main.js"],"sourcesContent":["function noop() {}\n\nfunction assign(tar, src) {\n\tfor (var k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction assignTrue(tar, src) {\n\tfor (var k in src) tar[k] = 1;\n\treturn tar;\n}\n\nfunction isPromise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nfunction callAfter(fn, i) {\n\tif (i === 0) fn();\n\treturn () => {\n\t\tif (!--i) fn();\n\t};\n}\n\nfunction addLoc(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nfunction exclude(src, prop) {\n\tconst tar = {};\n\tfor (const k in src) k === prop || (tar[k] = src[k]);\n\treturn tar;\n}\n\nfunction run(fn) {\n\tfn();\n}\n\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor);\n}\n\nfunction detachNode(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detachBetween(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detachBefore(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detachAfter(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction reinsertBetween(before, after, target) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\ttarget.appendChild(before.parentNode.removeChild(before.nextSibling));\n\t}\n}\n\nfunction reinsertChildren(parent, target) {\n\twhile (parent.firstChild) target.appendChild(parent.firstChild);\n}\n\nfunction reinsertAfter(before, target) {\n\twhile (before.nextSibling) target.appendChild(before.nextSibling);\n}\n\nfunction reinsertBefore(after, target) {\n\tvar parent = after.parentNode;\n\twhile (parent.firstChild !== after) target.appendChild(parent.firstChild);\n}\n\nfunction destroyEach(iterations, detach) {\n\tfor (var i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detach);\n\t}\n}\n\nfunction createFragment() {\n\treturn document.createDocumentFragment();\n}\n\nfunction createElement(name) {\n\treturn document.createElement(name);\n}\n\nfunction createSvgElement(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction createText(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction createComment() {\n\treturn document.createComment('');\n}\n\nfunction addListener(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n}\n\nfunction removeListener(node, event, handler, options) {\n\tnode.removeEventListener(event, handler, options);\n}\n\nfunction setAttribute(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse node.setAttribute(attribute, value);\n}\n\nfunction setAttributes(node, attributes) {\n\tfor (var key in attributes) {\n\t\tif (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tsetAttribute(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction setCustomElementData(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = value;\n\t} else {\n\t\tsetAttribute(node, prop, value);\n\t}\n}\n\nfunction setXlinkAttribute(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction getBindingGroupValue(group) {\n\tvar value = [];\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction toNumber(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction timeRangesToArray(ranges) {\n\tvar array = [];\n\tfor (var i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children (element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claimElement (nodes, name, attributes, svg) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (var j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tvar attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? createSvgElement(name) : createElement(name);\n}\n\nfunction claimText (nodes, data) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn createText(data);\n}\n\nfunction setData(text, data) {\n\ttext.data = '' + data;\n}\n\nfunction setInputType(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {}\n}\n\nfunction setStyle(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction selectOption(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction selectOptions(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction selectValue(select) {\n\tvar selectedOption = select.querySelector(':checked') || select.options[0];\n\treturn selectedOption && selectedOption.__value;\n}\n\nfunction selectMultipleValue(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), function(option) {\n\t\treturn option.__value;\n\t});\n}\n\nfunction addResizeListener(element, fn) {\n\tif (getComputedStyle(element).position === 'static') {\n\t\telement.style.position = 'relative';\n\t}\n\n\tconst object = document.createElement('object');\n\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\tobject.type = 'text/html';\n\n\tlet win;\n\n\tobject.onload = () => {\n\t\twin = object.contentDocument.defaultView;\n\t\twin.addEventListener('resize', fn);\n\t};\n\n\tif (/Trident/.test(navigator.userAgent)) {\n\t\telement.appendChild(object);\n\t\tobject.data = 'about:blank';\n\t} else {\n\t\tobject.data = 'about:blank';\n\t\telement.appendChild(object);\n\t}\n\n\treturn {\n\t\tcancel: () => {\n\t\t\twin && win.removeEventListener && win.removeEventListener('resize', fn);\n\t\t\telement.removeChild(object);\n\t\t}\n\t};\n}\n\nfunction toggleClass(element, name, toggle) {\n\telement.classList[toggle ? 'add' : 'remove'](name);\n}\n\nfunction linear(t) {\n\treturn t;\n}\n\nfunction generateRule({ a, b, delta, duration }, ease, fn) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + delta * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\n\treturn keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n}\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction wrapTransition(component, node, fn, params, intro) {\n\tlet obj = fn.call(component, node, params);\n\tlet duration;\n\tlet ease;\n\tlet cssText;\n\n\tlet initialised = false;\n\n\treturn {\n\t\tt: intro ? 0 : 1,\n\t\trunning: false,\n\t\tprogram: null,\n\t\tpending: null,\n\n\t\trun(b, callback) {\n\t\t\tif (typeof obj === 'function') {\n\t\t\t\ttransitionManager.wait().then(() => {\n\t\t\t\t\tobj = obj();\n\t\t\t\t\tthis._run(b, callback);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._run(b, callback);\n\t\t\t}\n\t\t},\n\n\t\t_run(b, callback) {\n\t\t\tduration = obj.duration || 300;\n\t\t\tease = obj.easing || linear;\n\n\t\t\tconst program = {\n\t\t\t\tstart: window.performance.now() + (obj.delay || 0),\n\t\t\t\tb,\n\t\t\t\tcallback: callback || noop\n\t\t\t};\n\n\t\t\tif (intro && !initialised) {\n\t\t\t\tif (obj.css && obj.delay) {\n\t\t\t\t\tcssText = node.style.cssText;\n\t\t\t\t\tnode.style.cssText += obj.css(0, 1);\n\t\t\t\t}\n\n\t\t\t\tif (obj.tick) obj.tick(0, 1);\n\t\t\t\tinitialised = true;\n\t\t\t}\n\n\t\t\tif (!b) {\n\t\t\t\tprogram.group = outros.current;\n\t\t\t\toutros.current.remaining += 1;\n\t\t\t}\n\n\t\t\tif (obj.delay) {\n\t\t\t\tthis.pending = program;\n\t\t\t} else {\n\t\t\t\tthis.start(program);\n\t\t\t}\n\n\t\t\tif (!this.running) {\n\t\t\t\tthis.running = true;\n\t\t\t\ttransitionManager.add(this);\n\t\t\t}\n\t\t},\n\n\t\tstart(program) {\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.start`, { node });\n\n\t\t\tprogram.a = this.t;\n\t\t\tprogram.delta = program.b - program.a;\n\t\t\tprogram.duration = duration * Math.abs(program.b - program.a);\n\t\t\tprogram.end = program.start + program.duration;\n\n\t\t\tif (obj.css) {\n\t\t\t\tif (obj.delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, obj.css);\n\t\t\t\ttransitionManager.addRule(rule, program.name = '__svelte_' + hash(rule));\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tthis.program = program;\n\t\t\tthis.pending = null;\n\t\t},\n\n\t\tupdate(now) {\n\t\t\tconst program = this.program;\n\t\t\tif (!program) return;\n\n\t\t\tconst p = now - program.start;\n\t\t\tthis.t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\t\t},\n\n\t\tdone() {\n\t\t\tconst program = this.program;\n\t\t\tthis.t = program.b;\n\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.end`, { node });\n\n\t\t\tif (!program.b && !program.invalidated) {\n\t\t\t\tprogram.group.callbacks.push(() => {\n\t\t\t\t\tprogram.callback();\n\t\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t\t});\n\n\t\t\t\tif (--program.group.remaining === 0) {\n\t\t\t\t\tprogram.group.callbacks.forEach(run);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t}\n\n\t\t\tthis.running = !!this.pending;\n\t\t},\n\n\t\tabort(reset) {\n\t\t\tif (this.program) {\n\t\t\t\tif (reset && obj.tick) obj.tick(1, 0);\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, this.program.name);\n\t\t\t\tthis.program = this.pending = null;\n\t\t\t\tthis.running = false;\n\t\t\t}\n\t\t},\n\n\t\tinvalidate() {\n\t\t\tif (this.program) {\n\t\t\t\tthis.program.invalidated = true;\n\t\t\t}\n\t\t}\n\t};\n}\n\nlet outros = {};\n\nfunction groupOutros() {\n\toutros.current = {\n\t\tremaining: 0,\n\t\tcallbacks: []\n\t};\n}\n\nvar transitionManager = {\n\trunning: false,\n\ttransitions: [],\n\tbound: null,\n\tstylesheet: null,\n\tactiveRules: {},\n\tpromise: null,\n\n\tadd(transition) {\n\t\tthis.transitions.push(transition);\n\n\t\tif (!this.running) {\n\t\t\tthis.running = true;\n\t\t\trequestAnimationFrame(this.bound || (this.bound = this.next.bind(this)));\n\t\t}\n\t},\n\n\taddRule(rule, name) {\n\t\tif (!this.stylesheet) {\n\t\t\tconst style = createElement('style');\n\t\t\tdocument.head.appendChild(style);\n\t\t\ttransitionManager.stylesheet = style.sheet;\n\t\t}\n\n\t\tif (!this.activeRules[name]) {\n\t\t\tthis.activeRules[name] = true;\n\t\t\tthis.stylesheet.insertRule(`@keyframes ${name} ${rule}`, this.stylesheet.cssRules.length);\n\t\t}\n\t},\n\n\tnext() {\n\t\tthis.running = false;\n\n\t\tconst now = window.performance.now();\n\t\tlet i = this.transitions.length;\n\n\t\twhile (i--) {\n\t\t\tconst transition = this.transitions[i];\n\n\t\t\tif (transition.program && now >= transition.program.end) {\n\t\t\t\ttransition.done();\n\t\t\t}\n\n\t\t\tif (transition.pending && now >= transition.pending.start) {\n\t\t\t\ttransition.start(transition.pending);\n\t\t\t}\n\n\t\t\tif (transition.running) {\n\t\t\t\ttransition.update(now);\n\t\t\t\tthis.running = true;\n\t\t\t} else if (!transition.pending) {\n\t\t\t\tthis.transitions.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (this.running) {\n\t\t\trequestAnimationFrame(this.bound);\n\t\t} else if (this.stylesheet) {\n\t\t\tlet i = this.stylesheet.cssRules.length;\n\t\t\twhile (i--) this.stylesheet.deleteRule(i);\n\t\t\tthis.activeRules = {};\n\t\t}\n\t},\n\n\tdeleteRule(node, name) {\n\t\tnode.style.animation = node.style.animation\n\t\t\t.split(', ')\n\t\t\t.filter(anim => anim && anim.indexOf(name) === -1)\n\t\t\t.join(', ');\n\t},\n\n\twait() {\n\t\tif (!transitionManager.promise) {\n\t\t\ttransitionManager.promise = Promise.resolve();\n\t\t\ttransitionManager.promise.then(() => {\n\t\t\t\ttransitionManager.promise = null;\n\t\t\t});\n\t\t}\n\n\t\treturn transitionManager.promise;\n\t}\n};\n\nfunction wrapAnimation(node, from, fn, params) {\n\tif (!from) return;\n\n\tconst to = node.getBoundingClientRect();\n\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return;\n\n\tconst info = fn(node, { from, to }, params);\n\n\tconst duration = 'duration' in info ? info.duration : 300;\n\tconst delay = 'delay' in info ? info.delay : 0;\n\tconst ease = info.easing || linear;\n\tconst start = window.performance.now() + delay;\n\tconst end = start + duration;\n\n\tconst program = {\n\t\ta: 0,\n\t\tt: 0,\n\t\tb: 1,\n\t\tdelta: 1,\n\t\tduration,\n\t\tstart,\n\t\tend\n\t};\n\n\tconst cssText = node.style.cssText;\n\n\tconst animation = {\n\t\tpending: delay ? program : null,\n\t\tprogram: delay ? null : program,\n\t\trunning: true,\n\n\t\tstart() {\n\t\t\tif (info.css) {\n\t\t\t\tif (delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, info.css);\n\t\t\t\tprogram.name = `__svelte_${hash(rule)}`;\n\n\t\t\t\ttransitionManager.addRule(rule, program.name);\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tanimation.program = program;\n\t\t\tanimation.pending = null;\n\t\t},\n\n\t\tupdate: now => {\n\t\t\tconst p = now - program.start;\n\t\t\tconst t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (info.tick) info.tick(t, 1 - t);\n\t\t},\n\n\t\tdone() {\n\t\t\tif (info.tick) info.tick(1, 0);\n\t\t\tanimation.stop();\n\t\t},\n\n\t\tstop() {\n\t\t\tif (info.css) transitionManager.deleteRule(node, program.name);\n\t\t\tanimation.running = false;\n\t\t}\n\t};\n\n\ttransitionManager.add(animation);\n\n\tif (info.tick) info.tick(0, 1);\n\n\tif (delay) {\n\t\tif (info.css) node.style.cssText += info.css(0, 1);\n\t} else {\n\t\tanimation.start();\n\t}\n\n\treturn animation;\n}\n\nfunction fixPosition(node) {\n\tconst style = getComputedStyle(node);\n\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tconst b = node.getBoundingClientRect();\n\n\t\tif (a.left !== b.left || a.top !== b.top) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t\t}\n\t}\n}\n\nfunction handlePromise(promise, info) {\n\tvar token = info.token = {};\n\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\n\t\tinfo.resolved = key && { [key]: value };\n\n\t\tconst child_ctx = assign(assign({}, info.ctx), info.resolved);\n\t\tconst block = type && (info.current = type)(info.component, child_ctx);\n\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroupOutros();\n\t\t\t\t\t\tblock.o(() => {\n\t\t\t\t\t\t\tblock.d(1);\n\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\n\t\t\tblock.c();\n\t\t\tblock[block.i ? 'i' : 'm'](info.mount(), info.anchor);\n\n\t\t\tinfo.component.root.set({}); // flush any handlers that were created\n\t\t}\n\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t}\n\n\tif (isPromise(promise)) {\n\t\tpromise.then(value => {\n\t\t\tupdate(info.then, 1, info.value, value);\n\t\t}, error => {\n\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t});\n\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\n\t\tinfo.resolved = { [info.value]: promise };\n\t}\n}\n\nfunction destroyBlock(block, lookup) {\n\tblock.d(1);\n\tlookup[block.key] = null;\n}\n\nfunction outroAndDestroyBlock(block, lookup) {\n\tblock.o(function() {\n\t\tdestroyBlock(block, lookup);\n\t});\n}\n\nfunction fixAndOutroAndDestroyBlock(block, lookup) {\n\tblock.f();\n\toutroAndDestroyBlock(block, lookup);\n}\n\nfunction updateKeyedEach(old_blocks, component, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, intro_method, next, get_context) {\n\tvar o = old_blocks.length;\n\tvar n = list.length;\n\n\tvar i = o;\n\tvar old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tvar new_blocks = [];\n\tvar new_lookup = {};\n\tvar deltas = {};\n\n\tvar i = n;\n\twhile (i--) {\n\t\tvar child_ctx = get_context(ctx, list, i);\n\t\tvar key = get_key(child_ctx);\n\t\tvar block = lookup[key];\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(component, key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, child_ctx);\n\t\t}\n\n\t\tnew_blocks[i] = new_lookup[key] = block;\n\n\t\tif (key in old_indexes) deltas[key] = Math.abs(i - old_indexes[key]);\n\t}\n\n\tvar will_move = {};\n\tvar did_move = {};\n\n\tfunction insert(block) {\n\t\tblock[intro_method](node, next);\n\t\tlookup[block.key] = block;\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tvar new_block = new_blocks[n - 1];\n\t\tvar old_block = old_blocks[o - 1];\n\t\tvar new_key = new_block.key;\n\t\tvar old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup[old_key]) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup[new_key] || will_move[new_key]) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move[old_key]) {\n\t\t\to--;\n\n\t\t} else if (deltas[new_key] > deltas[old_key]) {\n\t\t\tdid_move[new_key] = true;\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move[old_key] = true;\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tvar old_block = old_blocks[o];\n\t\tif (!new_lookup[old_block.key]) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction measure(blocks) {\n\tconst rects = {};\n\tlet i = blocks.length;\n\twhile (i--) rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n\treturn rects;\n}\n\nfunction animate(blocks, rects, fn, params) {\n\tlet i = blocks.length;\n\twhile (i--) {\n\t\tconst block = blocks[i];\n\t\tconst from = rects[block.key];\n\n\t\tif (!from) continue;\n\t\tconst to = block.node.getBoundingClientRect();\n\n\t\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) continue;\n\n\n\t}\n}\n\nfunction getSpreadUpdate(levels, updates) {\n\tvar update = {};\n\n\tvar to_null_out = {};\n\tvar accounted_for = {};\n\n\tvar i = levels.length;\n\twhile (i--) {\n\t\tvar o = levels[i];\n\t\tvar n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (var key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (var key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (var key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nconst invalidAttributeNameCharacter = /[\\s'\">\\/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n\nfunction spread(args) {\n\tconst attributes = Object.assign({}, ...args);\n\tlet str = '';\n\n\tObject.keys(attributes).forEach(name => {\n\t\tif (invalidAttributeNameCharacter.test(name)) return;\n\n\t\tconst value = attributes[name];\n\t\tif (value === undefined) return;\n\t\tif (value === true) str += \" \" + name;\n\n\t\tconst escaped = String(value)\n\t\t\t.replace(/\"/g, '&#34;')\n\t\t\t.replace(/'/g, '&#39;');\n\n\t\tstr += \" \" + name + \"=\" + JSON.stringify(escaped);\n\t});\n\n\treturn str;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;'\n};\n\nfunction escape(html) {\n\treturn String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\n\nfunction each(items, assign, fn) {\n\tlet str = '';\n\tfor (let i = 0; i < items.length; i += 1) {\n\t\tstr += fn(assign(items[i], i));\n\t}\n\treturn str;\n}\n\nconst missingComponent = {\n\t_render: () => ''\n};\n\nfunction validateSsrComponent(component, name) {\n\tif (!component || !component._render) {\n\t\tif (name === 'svelte:component') name += ' this={...}';\n\t\tthrow new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n\t}\n\n\treturn component;\n}\n\nfunction debug(file, line, column, values) {\n\tconsole.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`);\n\tconsole.log(values);\n\treturn '';\n}\n\nfunction blankObject() {\n\treturn Object.create(null);\n}\n\nfunction destroy(detach) {\n\tthis.destroy = noop;\n\tthis.fire('destroy');\n\tthis.set = noop;\n\n\tthis._fragment.d(detach !== false);\n\tthis._fragment = null;\n\tthis._state = {};\n}\n\nfunction destroyDev(detach) {\n\tdestroy.call(this, detach);\n\tthis.destroy = function() {\n\t\tconsole.warn('Component was already destroyed');\n\t};\n}\n\nfunction _differs(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction _differsImmutable(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction fire(eventName, data) {\n\tvar handlers =\n\t\teventName in this._handlers && this._handlers[eventName].slice();\n\tif (!handlers) return;\n\n\tfor (var i = 0; i < handlers.length; i += 1) {\n\t\tvar handler = handlers[i];\n\n\t\tif (!handler.__calling) {\n\t\t\ttry {\n\t\t\t\thandler.__calling = true;\n\t\t\t\thandler.call(this, data);\n\t\t\t} finally {\n\t\t\t\thandler.__calling = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction flush(component) {\n\tcomponent._lock = true;\n\tcallAll(component._beforecreate);\n\tcallAll(component._oncreate);\n\tcallAll(component._aftercreate);\n\tcomponent._lock = false;\n}\n\nfunction get() {\n\treturn this._state;\n}\n\nfunction init(component, options) {\n\tcomponent._handlers = blankObject();\n\tcomponent._slots = blankObject();\n\tcomponent._bind = options._bind;\n\tcomponent._staged = {};\n\n\tcomponent.options = options;\n\tcomponent.root = options.root || component;\n\tcomponent.store = options.store || component.root.store;\n\n\tif (!options.root) {\n\t\tcomponent._beforecreate = [];\n\t\tcomponent._oncreate = [];\n\t\tcomponent._aftercreate = [];\n\t}\n}\n\nfunction on(eventName, handler) {\n\tvar handlers = this._handlers[eventName] || (this._handlers[eventName] = []);\n\thandlers.push(handler);\n\n\treturn {\n\t\tcancel: function() {\n\t\t\tvar index = handlers.indexOf(handler);\n\t\t\tif (~index) handlers.splice(index, 1);\n\t\t}\n\t};\n}\n\nfunction set(newState) {\n\tthis._set(assign({}, newState));\n\tif (this.root._lock) return;\n\tflush(this.root);\n}\n\nfunction _set(newState) {\n\tvar oldState = this._state,\n\t\tchanged = {},\n\t\tdirty = false;\n\n\tnewState = assign(this._staged, newState);\n\tthis._staged = {};\n\n\tfor (var key in newState) {\n\t\tif (this._differs(newState[key], oldState[key])) changed[key] = dirty = true;\n\t}\n\tif (!dirty) return;\n\n\tthis._state = assign(assign({}, oldState), newState);\n\tthis._recompute(changed, this._state);\n\tif (this._bind) this._bind(changed, this._state);\n\n\tif (this._fragment) {\n\t\tthis.fire(\"state\", { changed: changed, current: this._state, previous: oldState });\n\t\tthis._fragment.p(changed, this._state);\n\t\tthis.fire(\"update\", { changed: changed, current: this._state, previous: oldState });\n\t}\n}\n\nfunction _stage(newState) {\n\tassign(this._staged, newState);\n}\n\nfunction setDev(newState) {\n\tif (typeof newState !== 'object') {\n\t\tthrow new Error(\n\t\t\tthis._debugName + '.set was called without an object of data key-values to update.'\n\t\t);\n\t}\n\n\tthis._checkReadOnly(newState);\n\tset.call(this, newState);\n}\n\nfunction callAll(fns) {\n\twhile (fns && fns.length) fns.shift()();\n}\n\nfunction _mount(target, anchor) {\n\tthis._fragment[this._fragment.i ? 'i' : 'm'](target, anchor || null);\n}\n\nvar PENDING = {};\nvar SUCCESS = {};\nvar FAILURE = {};\n\nfunction removeFromStore() {\n\tthis.store._remove(this);\n}\n\nvar proto = {\n\tdestroy,\n\tget,\n\tfire,\n\ton,\n\tset,\n\t_recompute: noop,\n\t_set,\n\t_stage,\n\t_mount,\n\t_differs\n};\n\nvar protoDev = {\n\tdestroy: destroyDev,\n\tget,\n\tfire,\n\ton,\n\tset: setDev,\n\t_recompute: noop,\n\t_set,\n\t_stage,\n\t_mount,\n\t_differs\n};\n\nexport { blankObject, destroy, destroyDev, _differs, _differsImmutable, fire, flush, get, init, on, set, _set, _stage, setDev, callAll, _mount, PENDING, SUCCESS, FAILURE, removeFromStore, proto, protoDev, wrapAnimation, fixPosition, handlePromise, append, insert, detachNode, detachBetween, detachBefore, detachAfter, reinsertBetween, reinsertChildren, reinsertAfter, reinsertBefore, destroyEach, createFragment, createElement, createSvgElement, createText, createComment, addListener, removeListener, setAttribute, setAttributes, setCustomElementData, setXlinkAttribute, getBindingGroupValue, toNumber, timeRangesToArray, children, claimElement, claimText, setData, setInputType, setStyle, selectOption, selectOptions, selectValue, selectMultipleValue, addResizeListener, toggleClass, destroyBlock, outroAndDestroyBlock, fixAndOutroAndDestroyBlock, updateKeyedEach, measure, animate, getSpreadUpdate, invalidAttributeNameCharacter, spread, escaped, escape, each, missingComponent, validateSsrComponent, debug, linear, generateRule, hash, wrapTransition, outros, groupOutros, transitionManager, noop, assign, assignTrue, isPromise, callAfter, addLoc, exclude, run };\n","<!-- ^   Opposing  Players   ^  -->\n<!-- [R][R][R] [Rinf] [M][Inf]  --><!--[ player.planets ]-->\n<!--  [S] [C] [P/T] [W] [R]     -->\n<!-- [      player.limbo     ] [pass] -->\n<!-- [De] [ player.hand ] [Di]  -->\n<!-- -->\n\n{#if game.currentphase==-4}\n<div class=\"playercountselector\">\n\t<p on:click=\"phaseincrement()\" on:tap=\"phaseincrement()\">Start a New Online Game</p>\n\t<p on:click=\"fetchexistinggames()\" on:tap=\"fetchexistinggames()\">Join an Existing Online Game</p>\n\t<p on:click=\"newoffline()\" on:tap=\"newoffline()\">Start a New Offline Game</p>\n</div>\n{:elseif game.currentphase==-3}\n<div class=\"playercountselector\">\n\t<p> Choose your Game's number of Players</p>\n\t<p on:click=\"newgame(2)\" on:tap=\"newgame(2)\">2</p>\n\t<p on:click=\"newgame(3)\" on:tap=\"newgame(3)\">3</p>\n\t<p on:click=\"newgame(4)\" on:tap=\"newgame(4)\">4</p>\n</div>\n{:elseif game.currentphase==-2}\n<div class=\"playercountselector\">\n\t<p> Choose your Screen Name</p>\t\n\t<input type=\"text\" bind:value=lobby.screenname>\n\t<p on:click=\"setplayername(lobby.screenname)\" on:tap=\"setplayername(lobby.screenname)\">Finished</p>\n</div>\n{:elseif game.currentphase==-1}\n\t<div class=\"playercountselector\">\n\t\t<p>Choose a Game to Join</p>\n\t\t{#each lobby.existinggames as g}\n        \t<p on:click=\"enterexistinggame(g)\" on:tap=\"enterexistinggame(g.game_id)\">{g.game_id}</p>\n\t\t{/each}\n\t</div>\n{:elseif game.passtoplayer && !lobby.online}\n    <div class='passtoplayer' on:click=\"togglepasstoplayer()\" on:tap=\"togglepasstoplayer()\">\n    \tpass to next player\n\t</div>\n{:elseif !!game.winner}\n\t<div class='passtoplayer'>\n\t\t{game.winner} WON!!!!\n\t</div>\n{:else}\n\t<div id=\"screen\" style=\"height:100%;width:100%;\" class=\"flex\">\n\t\t{#each game.players as player}\n\t\t\t{#if game.players[game.acting_player_index]!==undefined && ((lobby.screenname==player.name && lobby.online) || (game.players[game.acting_player_index].id==player.id && !lobby.online)) }\n\t\t\t\t<div class=\"bordered playingfield\">\n\t\t\t\t\t<div id='dragged'></div>\n\t\t\t\t\t<div class=\"playerinfo bordered\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t{#each game.players as p}\n\t\t\t\t\t\t\t<div style=\"width:{100/game.number_of_players}%\" class=\"flex {(game.players[game.acting_player_index] !== undefined && p.name == game.players[game.acting_player_index].name) ? 'selectable' : 'bordered'}\">\n\t\t\t\t\t\t\t\t<div style=\"width:33%; text-align: center;\" class=\"bordered\"> Military Might {p.starfighters.small}</div>\n\t\t\t\t\t\t\t\t<div style=\"width:33%; text-align: center;\" class=\"bordered\"> Galactic Influence {p.influence.length}</div>\n\t\t\t\t\t\t\t\t<div style=\"width:33%; text-align: center;\" class=\"bordered\"> {p.name}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t<!-- <div style=\"width:100%; text-align: center;\" class=\"bordered\"> Remaining Influence throughout the Galaxy {game.influence.length}</div> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- stacks / planets toggle -->\n\t\t\t\t\t<div on:click=\"toggle_center_or_planets()\" on:tap=\"toggle_center_or_planets()\">\n\t\t\t\t\t\tshow {(game.displayinfo.center_or_planets) ? \"planets\" : \"center row\"}\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- stacks -->\n\t\t\t\t\t{#if game.displayinfo.selectionzone=='research'}\n                        <div class=\"zone researchrow\">\n\t\t\t\t\t\t\t{#each game.research_deck as card}\n\t\t\t\t\t\t\t<div>\n                                <img src=\"{card.imgurl}\" on:click=\"choosewrapper(card,'research')\" on:tap=\"choosewrapper(card,'research')\" class=\"{(game.displayinfo.selectionzone=='research') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\" alt=\"{card.name}\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/each}\n                        </div>\n\t\t\t\t\t{:elseif game.displayinfo.center_or_planets}\n\t\t\t\t\t\t<div class=\"flex zone centerrow\">\n\t\t\t\t\t\t\t{#if game.displayinfo.selectionzone=='rolecards'}\n\t\t\t\t\t\t\t\t{#each game.stacks.rolecards as card}\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<img on:click=\"choosewrapper(card,'rolecards')\" on:tap=\"choosewrapper(card,'rolecards')\" on:touchmove=\"move(event, './images/'+card.type+'100.png','rolecards')\" on:touchstart=\"drag(event,card,'rolecards')\" on:touchend=\"drop(event,'rolecards')\" class=\"{(game.displayinfo.selectionzone=='rolecards') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\" src=\"./images/{card.type}100.png\" alt=\"{card.name}\">\n\t\t\t\t\t\t\t\t\t<div class=\"pilecount\"> {game.stacks.pilecount[card.type]}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t{#each game.stacks.rolecards as card}\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<img class=\"{(game.displayinfo.selectionzone=='rolecards') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\" src=\"./images/{card.type}100.png\" alt=\"{card.name}\">\n\t\t\t\t\t\t\t\t\t<div class=\"pilecount\"> {game.stacks.pilecount[card.type]}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#if !game.displayinfo.center_or_planets}\n\t\t\t\t\t\t<div class=\"flex zone centerrow\">\n\t\t\t\t\t\t\t{#each player.unsettled_planets as planet}\n                                <div on:click=\"choosewrapper(planet,'unsettled_planets')\" on:tap=\"choosewrapper(planet,'unsettled_planets')\" class=\" unsettled {(game.displayinfo.selectionzone=='unsettled_planets') ? ( (planet.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t<img src=\"./images/{planet.type}back100.png\" alt='{planet.settle_cost} {planet.type} {planet.conquer_cost}'>\n                                    <div class=\"settle_cost\"> {planet.settle_cost}</div>\n                                    <div class=\"conquer_cost\"> {planet.conquer_cost}</div>\n\t\t\t\t\t\t\t\t\t<div class=\"hosted_colonies\"> {planet.hosted_colonies.length} colonies</div>\n                                </div>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t{#each [...player.settled_planets, ...player.conquered_planets] as planet}\n\t\t\t\t\t\t\t<!-- if actingplayer.activerole or activeaction == trade and has weapons emporium as a permanent-->\n\t\t\t\t\t\t\t<!-- display psudeo planets that host a fighter resource that can be traded -->\n\t\t\t\t\t\t\t\t<div on:click=\"choosewrapper(planet,'settled_&_conquered_planets')\" on:tap=\"choosewrapper(planet,'settled_&_conquered_planets')\" class=\"{(game.displayinfo.selectionzone=='settled_&_conquered_planets') ? ( (planet.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t<div  class=\"planetfront\" style=\"font-size: 160%\" >\n\t\t\t\t\t\t\t\t\t\t<img src=\"./images/{planet.type}100.png\" alt='{planet.settle_cost} {planet.type} {planet.conquer_cost}'>\t\n\t\t\t\t\t\t\t\t\t\t<!-- style=\"background-image: url('./images/{option.type}100.png')\" -->\n\t\t\t\t\t\t\t\t\t\t<!-- icons -->\n\t\t\t\t\t\t\t\t\t\t<div class=\"planetfrontinfo\">\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.survey > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/surveyicon100.png\"  alt=\"survey\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.warfare > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/warfareicon100.png\"  alt=\"warfare\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.colonize > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/colonizeicon100.png\"  alt=\"colonize\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.research > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/researchicon100.png\"  alt=\"research\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.trade > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/tradeicon100.png\"  alt=\"trade\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.produce > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/produceicon100.png\"  alt=\"produce\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t<!-- production zones -->\n\t\t\t\t\t\t\t\t\t\t\t{#each planet.production_zones as zone}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/{zone.type}productionzoneicon.png\"  alt=\"{zone.type} zone\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t\t<!-- hand size mods -->\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.handsize_modifier > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/handsizeicon100.png\"  alt=\"produce\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t<!-- influence value -->\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{planet.influence_value}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/influenceicon.png\"  alt=\"influence\">\n\t\t\t\t\t\t\t\t\t\t\t<!-- name  -->\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{planet.name}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n                            {/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<!-- played cards-->\n\t\t\t\t\t<div id=\"playedcards\" class=\"flex zone playedcards\" >\n\t\t\t\t\t\t{#if game.displayinfo.showoptiontoskip}\n\t\t\t\t\t\t\t<div style=\"margin-right:auto\" class=\"selectable pass\" on:click=\"choose([{name:'Skip'}])\" on:tap=\"choose([{name:'Skip'}])\">[Choose None]</div>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<div style=\"margin-right:auto\" class=\"bordered pass\">[____]</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#each game.players[game.acting_player_index].limbo as card}\n\t\t\t\t\t\t\t\t{#if card.research_cost !== undefined}\n\t\t\t\t\t\t\t\t<div class=\"bordered\">\n\t\t\t\t\t\t\t\t\t<img class=\"minicard\" src=\"{card.imgurl}\"  alt=\"{card.name}\" on:click=\"unchoose(card)\" on:tap=\"unchoose(card)\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{:elseif card.type != \"advanced\" && card.type != \"fertile\" && card.type != \"metallic\"}\n\t\t\t\t\t\t\t\t\t<div class=\"bordered\">\n\t\t\t\t\t\t\t\t\t\t<img class=\"minicard\" src=\"./images/{card.type}100.png\"  alt=\"{card.name}\" on:click=\"unchoose(card)\" on:tap=\"unchoose(card)\">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t<!-- {/if} -->\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t{#if game.passp }\n\t\t\t\t\t\t\t<div style=\"margin-left:auto\" class=\"selectable pass\" on:click=\"pass_priority()\"on:tap=\"pass_priority()\">[Pass to <br> Next Player]</div>\n\t\t\t\t\t\t{:elseif game.passt}\n\t\t\t\t\t\t\t<div style=\"margin-left:auto\" class=\"selectable pass\" on:click=\"pass_turn()\" on:tap=\"pass_turn()\">[End Turn]</div>\n\t\t\t\t\t\t{:elseif game.displayinfo.allowformultipleselections && game.choices.length>0}\n\t\t\t\t\t\t\t<div style=\"margin-left:auto\" class=\"selectable pass\" on:click=\"choose(game[game.displayinfo.choicelabel])\" on:tap=\"choose(game[game.displayinfo.choicelabel])\">[Choose Selected]</div>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<div class=\"bordered pass\" >[______]</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"messagetoplayer bordered\">{game.messagetoplayer[game.messagetoplayer.length-1]}</div>\n\t\t\t\t\t<!-- hand -->\n\t\t\t\t\t<div class=\"flex zone ownedcards\">\n\t\t\t\t\t\t<div class='bordered deck'> cards remaining in deck: {player.deck.length}</div>\n                        <div class='hand'>\n\t\t\t\t\t\t\t{#each player.hand as card}\n\t\t\t\t\t\t\t\t{#if game.displayinfo.selectionzone=='hand'}\n\t\t\t\t\t\t\t\t\t{#if card.research_cost !== undefined}\n\t\t\t\t\t\t\t\t\t\t<img src=\"{card.imgurl}\"  alt=\"{card.name}\" on:touchstart=\"drag(event, card,'hand')\" on:touchend=\"drop(event,'hand')\" on:touchmove=\"move(event, card.imgurl,'hand')\" on:click=\"choosewrapper(card,'hand')\" on:tap=\"choosewrapper(card,'hand')\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'hidden' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<img src=\"./images/{card.type}100.png\" alt=\"{card.name}\" on:touchstart=\"drag(event,card,'hand')\" on:touchend=\"drop(event,'hand')\" on:click=\"choosewrapper(card,'hand')\" on:touchmove=\"move(event, './images/'+card.type+'100.png','hand')\" on:tap=\"choosewrapper(card,'hand')\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'hidden' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t{#if card.research_cost !== undefined}\n\t\t\t\t\t\t\t\t\t\t<img src=\"{card.imgurl}\" alt=\"{card.name}\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<img src=\"./images/{card.type}100.png\" alt=\"{card.name}\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{/if}\t\n\t\t\t\t\t\t\t{/each}\n                        </div>\n\t\t\t\t\t\t<div class=\"bordered discard\"> cards in discard pile: {player.discard.length}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t{/each}\n\t\t<!-- game.options -->\n\t\t{#if game.displayinfo.selectionzone=='options'}\n\t\t\t<div class=\"{( game.options[0] !== undefined && game.options[0].type !== undefined) ? 'talloptions' : 'options'}\">\n\t\t\t\t{#each game.options as option}\n\t\t\t\t\t{#if option.type !== undefined}\n\t\t\t\t\t\t\n\t\t\t\t\t<div class=\"bordered flex {(game.displayinfo.selectionzone=='options') ? ( (option.selected) ? 'selected' : 'selectable' ): 'bordered'}\" on:click=\"choosewrapper(option,'options')\" on:tap=\"choosewrapper(option,'options')\" >\n\t\t\t\t\t\t<div  class=\"planetfront\" >\n\t\t\t\t\t\t\t<img src=\"./images/{option.type}100.png\" alt='{option.settle_cost} {option.type} {option.conquer_cost}'>\t\n\t\t\t\t\t\t\t<!-- style=\"background-image: url('./images/{option.type}100.png')\" -->\n\t\t\t\t\t\t\t<!-- icons -->\n\t\t\t\t\t\t\t<div class=\"planetfrontinfo\">\n\t\t\t\t\t\t\t\t{#if option.icons.survey > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/surveyicon100.png\"  alt=\"survey\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.warfare > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/warfareicon100.png\"  alt=\"warfare\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.colonize > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/colonizeicon100.png\"  alt=\"colonize\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.research > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/researchicon100.png\"  alt=\"research\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.trade > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/tradeicon100.png\"  alt=\"trade\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.produce > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/produceicon100.png\"  alt=\"produce\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t<!-- production zones -->\n\t\t\t\t\t\t\t\t{#each option.production_zones as zone}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/{zone.type}productionzoneicon.png\"  alt=\"{zone.type} zone\"><br>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t<!-- hand size mods -->\n\t\t\t\t\t\t\t\t{#if option.handsize_modifier > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/handsizeicon100.png\"  alt=\"produce\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t<!-- influence value -->\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{option.influence_value}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<img src=\"./images/influenceicon.png\"  alt=\"influence\">\n\t\t\t\t\t\t\t\t<!-- name  -->\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{option.name}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<!-- colonize cost -->\n\t\t\t\t\t\t\t<!-- conquer cost -->\n\t\t\t\t\t\t\t<div class=\"mini_unsettled\">\n\t\t\t\t\t\t\t\t<img src=\"./images/{option.type}back100.png\" alt='{option.settle_cost} {option.type} {option.conquer_cost}'>\n\t\t\t\t\t\t\t\t<div class=\"unsettled_costs\">\n\t\t\t\t\t\t\t\t\t<span class=\"mini_settle_cost\"> {option.settle_cost}</span>\n\t\t\t\t\t\t\t\t\t<span class=\"mini_conquer_cost\"> {option.conquer_cost}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div class=\"pass {(game.displayinfo.selectionzone=='options') ? ( (option.selected) ? 'selected' : 'selectable' ): 'bordered'}\" on:click=\"choosewrapper(option,'options')\" on:tap=\"choosewrapper(option,'options')\">\n\t\t\t\t\t\t\t{option.name}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n{/if}\n<script>\n\texport default {\n\t\tmethods:{\n\t\t\tchoosewrapper(c,zone){\n\t\t\t\tif ((app.get().game.displayinfo.selectionzone == zone) && (app.get().lobby.screenname == app.get().game.players[app.get().game.acting_player_index].name || !app.get().lobby.online)){\n\t\t\t\t\tif (app.get().game.displayinfo.allowformultipleselections){\n\t\t\t\t\t\tapp.multiplechoose(c);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tapp.choose([c]);\n\t\t\t\t\t}\n\t\t\t\t}\n            },\n            multiplechoose(choice){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tif ((app.get().lobby.screenname == app.get().game.players[app.get().game.acting_player_index].name || !app.get().lobby.online)){\t\t\n\t\t\t\t\tif ( !game[game.displayinfo.choicelabel].includes(choice) ) {\n\t\t\t\t\t\tgame[game.displayinfo.choicelabel].push(choice);\n\t\t\t\t\t\tchoice.selected=true;\n\t\t\t\t\t\tif (choice.type!=='planet' && choice.type!=='fertile' && choice.type!=='metallic' && choice.type!=='advanced' && choice.name != 'Skip'){\n\t\t\t\t\t\t\tchoice.final_destination_label='discard';\n\t\t\t\t\t\t\tgame.players[game.acting_player_index].limbo.push(choice);\n\t\t\t\t\t\t\tgame.players[game.acting_player_index].hand = game.players[game.acting_player_index].hand.filter(\n\t\t\t\t\t\t\t\t(el)=>{ return el.identifier != choice.identifier}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//let i = game[game.displayinfo.choicelabel].indexOf(choice);\n\t\t\t\t\t\tchoice.selected=false;\n\t\t\t\t\t\t//game[game.displayinfo.choicelabel].splice(i,1);\n\t\t\t\t\t\tif (choice.type!=='planet' && choice.type!=='fertile' && choice.type!=='metallic' && choice.type!=='advanced' && choice.name != 'Skip'){\n\t\t\t\t\t\t\tgame[game.displayinfo.choicelabel]  = game[game.displayinfo.choicelabel].filter(\n\t\t\t\t\t\t\t\t(el)=>{ return el.identifier != choice.identifier}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tgame.players[app.get().game.acting_player_index].hand.push(choice);\n\t\t\t\t\t\t\tgame.players[app.get().game.acting_player_index].limbo = game.players[game.acting_player_index].limbo.filter(\n\t\t\t\t\t\t\t\t(el)=>{ return el.identifier != choice.identifier}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tapp.set({\n\t\t\t\t\t\t'game':game\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n            choose(choices){\n\t\t\t\tif ((app.get().lobby.screenname == app.get().game.players[app.get().game.acting_player_index].name || !app.get().lobby.online)){\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tgame.options=[];\n\t\t\t\t\tfor (let i in choices){\n\t\t\t\t\t\tchoices[i].selected=false;\n\t\t\t\t\t}\n\t\t\t\t\tgame[game.displayinfo.choicelabel]=choices;\n\t\t\t\t\tapp.set({\n\t\t\t\t\t\t'game':game\n\t\t\t\t\t});\n\t\t\t\t\tapp.phasefinishfunction();\n\t\t\t\t}\n\t\t\t},\n\t\t\tunchoose(choice){\n\t\t\t\tif ((app.get().lobby.screenname == app.get().game.players[app.get().game.acting_player_index].name || !app.get().lobby.online)){\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tif ( game[game.displayinfo.choicelabel].includes(choice) ) {\n\t\t\t\t\t\tchoice.selected=false;\n\t\t\t\t\t\tgame.players[game.acting_player_index].limbo = game.players[game.acting_player_index].limbo.filter( (el) => {return el.identifier != choice.identifier});\n\t\t\t\t\t\tgame[game.displayinfo.choicelabel] = game[game.displayinfo.choicelabel].filter( (el) => {return el.identifier != choice.identifier});\n\t\t\t\t\t\tchoice.final_destination_label='';\n\t\t\t\t\t\tgame.players[game.acting_player_index].hand.push(choice);\n\t\t\t\t\t\tapp.set({game:game});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n            offer (\n                skippable /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                multiple /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                [field_label, choices] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                choice_label /* label for where the choice is stored | set with game[label]=*/,\n                callback /*callback that handles the choice or finishes the phase*/, \n            ) {\n                let game = app.get().game;\n                game.displayinfo.selectionzone=field_label;\n                game.displayinfo.allowformultipleselections=multiple;\n                game.displayinfo.showoptiontoskip=skippable;\n                game.displayinfo.choicelabel=choice_label;\n\t\t\t\t//game.displayinfo.callback=callback;\n                if (field_label == 'hand'){\n                    choices = app.get().game.players[app.get().game.acting_player_index].hand;\n                } else if (field_label == 'research') {\n                    choices = app.get().game.research_deck;\n                } else if (field_label == 'discard'){\n                    choices = app.get().game.players[app.get().game.acting_player_index].discard;\n                } else if (field_label == 'planets') {\n                    choices = app.get().game.planet_deck;\n                } else if (field_label == 'rolecards'){\n\t\t\t\t\tchoices = app.get().game.stacks.rolecards;\n\t\t\t\t\tgame.displayinfo.center_or_planets = true;\n                } else if (field_label == 'unsettled_planets') {\n\t\t\t\t\tchoices = app.get().game.players[app.get().game.acting_player_index].unsettled_planets;\n\t\t\t\t\tgame.displayinfo.center_or_planets = false;\n                } else if (field_label == 'settled_planets'){\n                    choices = app.get().game.players[app.get().game.acting_player_index].settled_planets;\n\t\t\t\t\tgame.displayinfo.center_or_planets = false;\n                } else if (field_label == 'conquered_planets'){\n                    choices = app.get().game.players[app.get().game.acting_player_index].conquered_planets;\n\t\t\t\t\tgame.displayinfo.center_or_planets = false;\n                } else if (field_label == 'settled_&_conquered_planets'){\n                    choices = [...app.get().game.players[app.get().game.acting_player_index].settled_planets, ...app.get().game.players[app.get().game.acting_player_index].conquered_planets];\n\t\t\t\t\tgame.displayinfo.center_or_planets = false;\n\n                } else if (field_label == 'options') {\n\t\t\t\t}\n\t\t\t\tgame[choice_label] = [];\n\t\t\t\tapp.set({'game':game});\n\t\t\t\t//if (skippable) {choices.push({'name':\"Skip\"})};\n\t\t\t\t//if (multiple) {choices.push({'name':\"Choose All Selected\"})};\n\t\t\t\tapp.present_as_choice(choices);\n\n            },\n\t\t\tdiscard(source_array, destination_array, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tfor (let i in source_array){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) { \n\t\t\t\t\t\tdestination_array.push(elem);\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(totstemp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//draw deck->hand\n\t\t\ttotalinfluence(){\n\t\t\t\tlet players = app.get().game.players;\n\t\t\t\tfor (let i in players){\n\t\t\t\t\tlet arr = [...players[i].deck,...players[i].discard, ...players[i].limbo, ...players[i].hand];\n\t\t\t\t\tfor (let j in arr){\n\t\t\t\t\t\tif (arr[j].influence >= 1){\n\t\t\t\t\t\t\tplayers[i].influence.push(arr[j].influence);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet inf = 0;\n\t\t\t\t\tfor (let l in players[i].influence){\n\t\t\t\t\t\tinf += players[i].influence[l];\n\t\t\t\t\t}\n\t\t\t\t\tplayers[i].influence = inf;\n\t\t\t\t}\n\t\t\t\tapp.set({'game':{...app.get().game, 'players':players}});\n\t\t\t},\n\t\t\tendgame(){\n\t\t\t\t//display victor\n\t\t\t\tlet scores = app.get().game.players.map(e => e.influence);\n\t\t\t\tlet winner = '';\n\t\t\t\tlet highest = scores[0];\n\t\t\t\tapp.get().game.players.map((e) => { if ( highest < e.influence ) { winner = e.name; highest = e.influence; } } );\n\t\t\t\tapp.send({'game':{...app.get().game, 'winner':winner }});\n\t\t\t\tapp.get().ws.send(JSON.stringify({...app.get().game,header:'remove'}));\n\t\t\t},\n\t\t\tcheckforendgame(){\n\t\t\t\tlet depletedstacks = 0;\n\t\t\t\tfor (let el in app.get().game.stacks.pilecount){\n\t\t\t\t\tif (app.get().game.stacks.pilecount[el] < 1){\n\t\t\t\t\t\tdepletedstacks++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet stacklimit = 0;\n\t\t\t\tif (app.get().game.number_of_players == 1 || app.get().game.number_of_players == 2){\n\t\t\t\t\tstacklimit = 1;\n\t\t\t\t}else if (app.get().game.number_of_players == 3 || app.get().game.number_of_players == 4){\n\t\t\t\t\tstacklimit = 2;\n\t\t\t\t}\n\t\t\t\tif ( stacklimit <= depletedstacks || app.get().game.influence.length == 0){\n\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw(player, quantity=1){\n\t\t\t\tfor ( let i = 0; i < quantity; i++){\n\t\t\t\t\tif(player.deck.length!=0){\n\t\t\t\t\t\tplayer.hand.push(player.deck.pop());\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfor(let j in player.discard){\n\t\t\t\t\t\t\tplayer.deck.push(player.discard.pop());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tplayer.deck=app.knuthshuffle(player.deck);\n\t\t\t\t\t\tplayer.hand.push(player.deck.pop());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn player;\n\t\t\t},\n\t\t\tplay(source_array, destination_array, final_destination_label, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet filtered_item = null\n\t\t\t\tlet iterations = source_array.length;\n\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) {\n\t\t\t\t\t\telem.final_destination_label=final_destination_label; \n\t\t\t\t\t\tdestination_array.push(elem);\n\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsend(state){\n\t\t\t\tapp.set(state);\n\t\t\t\tif (app.get().ws!==undefined){\n\t\t\t\t\tapp.sendstate();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgenerate_research_card(name){\n\t\t\t\tlet _card={\n\t\t\t\t\tname:name,\n\t\t\t\t\ttype:name,\n\t\t\t\t\tidentifier:app.generate_unique_identifier(),\n\t\t\t\t\ticons:{'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0},\n\t\t\t\t\tplanet_requirements:{'advanced':0, 'metallic':0, 'fertile':0},\n\t\t\t\t\tresearch_cost:0,\n\t\t\t\t\taction:()=>{},\n\t\t\t\t\tis_permanent:false,\n\t\t\t\t\tis_doublesided:false,\n\t\t\t\t\timgurl:\"./images/\",\n\t\t\t\t\tInfluence_value:0,\n\t\t\t\t\timg:function(im){this.imgurl+=im;return this;},\n\t\t\t\t\tinfluence:function(inf){this.influence_value = inf ; return this;},\n\t\t\t\t\tmetallic:function(met){this.planet_requirements.metallic = met ; return this;},\n\t\t\t\t\tadvanced:function(adv){this.planet_requirements.advanced = adv; return this;},\n\t\t\t\t\tfertile:function(fer){this.planet_requirements.fertile = fer; return this;},\n\t\t\t\t\tresearch:function(res){this.research_cost = res; return this;},\n\t\t\t\t\tpermanent:function(){this.is_permanent = true; return this;},\n\t\t\t\t\tdoubleside:function(){this.is_doublesided = true; return this;},\n\t\t\t\t\ticons:function(icons){this.icons = Object.assign(this.icons, icons); return this;},\n\t\t\t\t\timproved_colonize:function(){this.research(3);this.imgurl+=\"improvedcolonize\";return this;},\n\t\t\t\t\timproved_survey:  function(){this.research(3);this.imgurl+=\"improvedsurvey\";return this;},\n\t\t\t\t\timproved_research:function(){this.research(3);this.imgurl+=\"improvedresearch\";return this;},\n\t\t\t\t\timproved_warfare: function(){this.research(3);this.imgurl+=\"improvedwarfare\";return this;},\n\t\t\t\t\timproved_production:function(){this.research(3);this.imgurl+=\"improvedproduction\";return this;},\n\t\t\t\t\timproved_trade:  \t\tfunction(){this.research(3);this.imgurl+=\"improvedtrade\";return this;},\n\t\t\t\t\tsurveyteam:\t\t\tfunction(){return this.research(5).metallic(2).influence(2).icons({'survey':2}).img('surveyteam');},\n\t\t\t\t\twarpath:\t\t\t\tfunction(){return this.research(5).metallic(2).influence(2).icons({'warfare':2}).img('warpath');},\n\t\t\t\t\tterraforming:\t\t\tfunction(){return this.research(5).fertile(2).influence(2).icons({'colonize':2}).img('terraforming');},\n\t\t\t\t\tgeneticengineering:\tfunction(){return this.research(5).fertile(2).influence(2).icons({'produce':2}).img('geneticengineering');},\n\t\t\t\t\tartificialintelligence:\tfunction(){return this.research(5).fertile(2).influence(2).icons({'colonize':1,'produce':1}).img('artificialintelligence');},\n\t\t\t\t\tdiversemarkets:\t\tfunction(){return this.research(5).advanced(2).influence(2).icons({'research':1,'trade':1}).img('diversemarkets');},\n\t\t\t\t\tspecialization:\t\t\tfunction(){return this.research(5).advanced(2).influence(2).icons({'trade':2}).img('specialization');},\n\t\t\t\t\tmobilization:\t\t\tfunction(){return this.research(5).metallic(2).influence(2).icons({'survey':1,'warfare':1}).img('mobilization');},\n\t\t\t\t\tdatanetwork:\t\t\tfunction(){return this.research(5).advanced(2).influence(2).icons({'research':2}).img('datanetwork');},\n\t\t\t\t\tabundance:   \t\t\tfunction(){this.research(5);this.imgurl+=\"abundance\"; this.is_doublesided=true; this.is_permanent=true; return this.fertile(2).influence(2);},\n\t\t\t\t\tadaptability:\t\t   \tfunction(){this.research(7);this.imgurl+=\"adaptability\"; this.is_doublesided=true; this.is_permanent=true; return this.advanced(3).influence(5);},\n\t\t\t\t\tbureaucracy:  \t\t\tfunction(){this.research(7);this.imgurl+=\"bureaucracy\"; this.is_doublesided=true; this.is_permanent=true; return this.fertile(3).influence(5);},\n\t\t\t\t\tdissension:\t\t\t\tfunction(){return this.research(7).fertile(3).influence(5).permanent().doubleside().img('dissension');},\n\t\t\t\t\thyperefficiency:\t\tfunction(){return this.research(7).advanced(3).influence(5).permanent().doubleside().img('hyperefficiency');},\n\t\t\t\t\timperialism:\t\t\tfunction(){return this.research(5).metallic(2).influence(2).permanent().doubleside().img('imperialism').icons({'survey':1,'trade':1,'warfare':1,});},\n\t\t\t\t\tlogistics:\t\t\t\tfunction(){return this.research(7).metallic(3).influence(5).permanent().doubleside().img('logistics');},\n\t\t\t\t\tproductivity:\t\t\tfunction(){return this.research(7).metallic(3).influence(5).permanent().doubleside().img('productivity');},\n\t\t\t\t\tscorchedearthpolicy:\tfunction(){return this.research(5).metallic(2).influence(2).permanent().doubleside().img('scorchedearthpolicy');},\n\t\t\t\t\tstreamlining:\t\t\tfunction(){return this.research(5).advanced(2).influence(2).permanent().doubleside().img('streamlining');},\n\t\t\t\t\tweaponsemporium:\t\tfunction(){return this.research(5).advanced(2).influence(2).permanent().doubleside().img('weaponemporium');},\n\t\t\t\t\tfertilegrounds:\t\t\tfunction(){return this.research(5).fertile(2).influence(2).permanent().doubleside().img('fertilegrounds').icons({'research':1,'colonize':1,'produce':1,});},\n\t\t\t\t}\n\t\t\t\treturn _card;\n\t\t\t},\n\t\t\tgenerate_research_deck(){\n\t\t\t\tlet _deck =[\n\t\t\t\t\tapp.generate_research_card('improved_production').metallic(1).icons({'warfare':1,'produce':1}).improved_production().img(\"wp100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_production').metallic(1).icons({'survey':1,'produce':1}).improved_production().img(\"sp100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_trade')     .metallic(1).icons({'survey':1,'trade':1}).improved_trade().img(\"st100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_trade')     .metallic(1).icons({'warfare':1,'trade':1}).improved_trade().img(\"wt100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_research')  .metallic(1).icons({'warfare':1,'research':1}).improved_research().img(\"wr100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_research')  .metallic(1).icons({'survey':1,'research':1}).improved_research().img(\"sr100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_colonize')  .metallic(1).icons({'warfare':1,'colonize':1}).improved_colonize().img(\"wc100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_colonize')  .metallic(1).icons({'survey':1,'colonize':1}).improved_colonize().img(\"sc100.png\"),\n\t\t\t\t\n\t\t\t\t\tapp.generate_research_card('improved_warfare')   .fertile(1).icons({'produce':1,'warfare':1}).improved_warfare().img(\"pw100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_warfare')   .fertile(1).icons({'colonize':1,'warfare':1}).improved_warfare().img(\"cw100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_trade')     .fertile(1).icons({'produce':1,'trade':1}).improved_trade().img(\"pt100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_trade')     .fertile(1).icons({'colonize':1,'trade':1}).improved_trade().img(\"ct100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_research')  .fertile(1).icons({'produce':1,'research':1}).improved_research().img(\"pr100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_research')  .fertile(1).icons({'colonize':1,'research':1}).improved_research().img(\"cr100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_survey')    .fertile(1).icons({'produce':1,'survey':1}).improved_survey().img(\"ps100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_survey')    .fertile(1).icons({'colonize':1,'survey':1}).improved_survey().img(\"cs100.png\"),\n\t\t\t\t\n\t\t\t\t\tapp.generate_research_card('improved_production').advanced(1).icons({'research':1,'produce':1}).improved_production().img(\"rp100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_production').advanced(1).icons({'trade':1,'produce':1}).improved_production().img(\"tp100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_warfare')   .advanced(1).icons({'warfare':1,'trade':1}).improved_warfare().img(\"tw100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_warfare')   .advanced(1).icons({'research':1,'warfare':1}).improved_warfare().img(\"rw100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_colonize')  .advanced(1).icons({'colonize':1,'trade':1}).improved_colonize().img(\"tc100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_colonize')  .advanced(1).icons({'research':1,'colonize':1}).improved_colonize().img(\"rc100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_survey')    .advanced(1).icons({'trade':1,'survey':1}).improved_survey().img(\"ts100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_survey')    .advanced(1).icons({'research':1,'survey':1}).improved_survey().img(\"rs100.png\"),\n\n\t\t\t\t\tapp.generate_research_card('survey_team').surveyteam().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('war_path').warpath().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('terraforming').terraforming().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('genetic_engineering').geneticengineering().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('artificial_intelligence').artificialintelligence().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('diverse_markets').diversemarkets().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('specialization').specialization().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('mobilization').\tmobilization().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('data_network').datanetwork().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('abundance').abundance().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('adaptability').adaptability().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('bureaucracy').bureaucracy().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('dissension').dissension().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('hyperefficiency').hyperefficiency().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('imperialism').imperialism().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('logistics').logistics().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('productivity').productivity().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('scorched_earth_policy').scorchedearthpolicy().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('streamlining').streamlining().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('weapons_emporium').weaponsemporium().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('fertile_grounds').fertilegrounds().img(\"100.png\"),\n\n\t\t\t\t];\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.research_deck = _deck;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tgenerateplayer(_id){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet _player = {\n\t\t\t\t\t'id':_id,\n\t\t\t\t\t'actionrolesequence':'ar', //can be ar. ra, aar, ara, raa\n\t\t\t\t\t'specialization':'',\n\t\t\t\t\t'available':true,\n\t\t\t\t\t'rounds':0,\n\t\t\t\t\t'limbo': [],\n\t\t\t\t\t'deck' : [],\n\t\t\t\t\t'hand' : [],\n\t\t\t\t\t'permanents' : [] ,\n\t\t\t\t\t'discard' : [],\n\t\t\t\t\t'handsize':5,\n\t\t\t\t\t'activeaction' : null,\n\t\t\t\t\t'activerole' : '',\n\t\t\t\t\t'handsize' : 5,\n\t\t\t\t\t'boostingicons' : {'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0},\n\t\t\t\t\t'unsettled_planets' : [],\n\t\t\t\t\t'settled_planets' : [],\n\t\t\t\t\t'conquered_planets' : [],\n\t\t\t\t\t'starfighters' : {'small':0,'medium':0,'large':0},\n\t\t\t\t\t'combatvalue' : 0,\n\t\t\t\t\t'influence':[],\n\t\t\t\t};\n\t\t\t\t_player.deck = app.generatenewdeck();\n\t\t\t\t_player.deck = app.knuthshuffle(_player.deck);\n\t\t\t\t_player = app.draw(_player,_player.handsize);\n\t\t\t\t_player.unsettled_planets.push(game.stacks.startingplanets.pop());\n\t\t\t\tgame.players.push(_player);\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tgenerateplanet(name_in){\t\n\t\t\t\tlet _planet = {\n\t\t\t\t\tidentifier:app.generate_unique_identifier(),\n\t\t\t\t\tname:name_in,\n\t\t\t\t\ttype:'planet',\n\t\t\t\t\tsettle_cost:2,\n\t\t\t\t\tsettled:false,\n\t\t\t\t\tconquer_cost:2,\n\t\t\t\t\tproduction_zones:[],\n\t\t\t\t\tinfluence_value:2,\n\t\t\t\t\ticons:{'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0,},\n\t\t\t\t\thandsize_modifier:0,\n\t\t\t\t\thosted_colonies:[],\n\t\t\t\t\tmetallic:function(){this.type='metallic';return this;},\n\t\t\t\t\tadvanced:function(){this.type='advanced';return this;},\n\t\t\t\t\tfertile:function(){this.type='fertile';return this;},\n\t\t\t\t\ticon:function(icon_name){this.icons[icon_name]++;return this;},\n\t\t\t\t\thandsize:function(modifier){this.handsize_modifier=modifier;return this;},\n\t\t\t\t\tinfluence:function(influence){this.influence_value = influence;return this;},\n\t\t\t\t\tsettle:function(cost){this.settle_cost=cost;return this;},\n\t\t\t\t\tconquer:function(cost){this.conquer_cost=cost;return this;},\n\t\t\t\t\tzone:function(zone){this.production_zones.push({type:zone, filled:false});return this;},\n\t\t\t\t};\n\t\t\t\treturn _planet;\n\t\t\t},\n\t\t\tgenerateplanetdeck(){ \n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.planet_deck = [\n\t\t\t\t//fertile planets\n\t\t\t\tapp.generateplanet('MISHBURR ITO-A').fertile().settle(5).conquer(4).zone('green')              .influence(3).icon('produce')   ,\n\t\t\t\tapp.generateplanet('STYKU').fertile().settle(4).conquer(5).zone('blue')               .influence(3).icon('colonize')  ,\n\t\t\t\tapp.generateplanet('ANGUS DUFFY').fertile().settle(3).conquer(6).zone('green').zone('blue') .influence(3)                   ,\n\t\t\t\tapp.generateplanet('GERDLAND').fertile().settle(4).conquer(5).zone('blue')               .influence(3).icon('produce')   ,\n\t\t\t\tapp.generateplanet('MIK-MIK').fertile().settle(5).conquer(4).zone('green')              .influence(3).icon('colonize')  ,\n\t\t\t\tapp.generateplanet('NELOS IV').fertile().settle(5).conquer(4).zone('green')              .influence(2)      .handsize(1) ,\n\t\t\t\tapp.generateplanet('SPIELBANY VI').fertile().settle(4).conquer(5).zone('blue')               .influence(2)      .handsize(1) ,\n\t\t\t\tapp.generateplanet('NEW TEXAS').fertile().settle(3).conquer(6).zone('green').zone('blue') .influence(2).icon('colonize')  ,\n\t\t\t\tapp.generateplanet('ARTIGAS GNS-111').fertile().settle(3).conquer(6).zone('green').zone('blue') .influence(2).icon('produce')   ,\n\t\t\t\t//advanced planets\n\t\t\t\tapp.generateplanet('HANOJ - T').advanced().settle(5).conquer(4).influence(3).zone('purple').icon('trade'),\n\t\t\t\tapp.generateplanet('OKNOW').advanced().settle(4).conquer(5).influence(2).zone('purple')                              .handsize(1),\n\t\t\t\tapp.generateplanet('SROD AVEIN N2').advanced().settle(3).conquer(6).influence(4)                             .icon('research'),\n\t\t\t\tapp.generateplanet(\"RAL GAI'GAW\").advanced().settle(4).conquer(5).influence(3).zone('purple').icon('trade'),\n\t\t\t\tapp.generateplanet('ECHO ROSE').advanced().settle(5).conquer(4).influence(3).zone('purple')              .icon('research'),\n\t\t\t\tapp.generateplanet('SHOLMICAN').advanced().settle(3).conquer(6).influence(4).zone('purple'),\n\t\t\t\tapp.generateplanet('ZEPHAN').advanced().settle(3).conquer(6).influence(4)               .icon('trade'),\n\t\t\t\tapp.generateplanet('SIMA-07C').advanced().settle(5).conquer(4).influence(2).zone('purple')                              .handsize(1),\n\t\t\t\tapp.generateplanet('LYTTLE').advanced().settle(4).conquer(5).influence(3).zone('purple')              .icon('research'),\n\t\t\t\t//mettalic planets\n\t\t\t\tapp.generateplanet('KYRIE & JUNO').metallic().settle(3).conquer(6).influence(4)            .icon('survey'),\n\t\t\t\tapp.generateplanet('MARGHANNAH PRIME').metallic().settle(4).conquer(5).influence(3)                           .handsize(1),\n\t\t\t\tapp.generateplanet('TANKAHSHIN').metallic().settle(4).conquer(5).influence(3).zone('red').icon('warfare'),\n\t\t\t\tapp.generateplanet('VOSON').metallic().settle(4).conquer(5).influence(3).zone('red').icon('survey'),\n\t\t\t\tapp.generateplanet('PINK SONAR').metallic().settle(5).conquer(4).influence(3).zone('red').icon('survey'),\n\t\t\t\tapp.generateplanet(\"OVERLORD BETZEL'S DOMAIN\").metallic().settle(3).conquer(6).influence(4)            .icon('warfare'),\n\t\t\t\tapp.generateplanet('8910 SPIELEN').metallic().settle(4).conquer(5).influence(2).zone('red')               .handsize(1),\n\t\t\t\tapp.generateplanet('IDROYOS').metallic().settle(3).conquer(6).influence(5),\n\t\t\t\tapp.generateplanet('ERKAM-W').metallic().settle(5).conquer(4).influence(3).zone('red').icon('warfare')\n\t\t\t];\n\t\t\tgame.planet_deck = app.knuthshuffle(game.planet_deck);\n\t\t\tgame.stacks.startingplanets=[\n\t\t\t\tapp.generateplanet('MESIA SEDNIM').fertile().settle(2).conquer(2).influence(2).zone('blue'),\n\t\t\t\tapp.generateplanet('DRAWDE').fertile().settle(2).conquer(2).influence(2).zone('green'),\n\t\t\t\tapp.generateplanet('LIAGIBA').advanced().settle(2).conquer(2).influence(2).zone('purple'),\n\t\t\t\tapp.generateplanet('POMERENE').advanced().settle(2).conquer(2).influence(2).zone('purple'),\n\t\t\t\tapp.generateplanet('CHRISPEN').metallic().settle(2).conquer(2).influence(2).zone('red'),\n\t\t\t\tapp.generateplanet('PIEDRA SECA').metallic().settle(2).conquer(2).influence(2).zone('red'),\n\t\t\t],   \n\t\t\tgame.stacks.startingplanets = app.knuthshuffle(game.stacks.startingplanets);\n\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tcleanup(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet source_array = game.players[app.get().game.acting_player_index].limbo;\n\t\t\t\tlet destinations_host = game.players[app.get().game.acting_player_index];\n\t\t\t\tlet iterations = source_array.length;\n\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tdestinations_host[elem.final_destination_label].push(elem); \n\t\t\t\t}\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tpurchase(source_array, destination_array, final_destination_label, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet filtered_item = null\n\t\t\t\tfor (let i = 0; i < source_array.length; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) {\n\t\t\t\t\t\telem.final_destination_label=final_destination_label; \n\t\t\t\t\t\tdestination_array.push(elem);\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//remove_from_game hand->exile\n\t\t\tremove_from_game(source_array, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet filtered_item = null\n\t\t\t\tfor (let i = 0; i < source_array.length; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) {\n\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tpresent_as_choice(options){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.options=options;\n\t\t\t\tapp.send({'game':game});\n\t\t\t},\n\t\t\tsettle_colonies (planet, possessing_player){\n\t\t\t\tlet planets = [...possessing_player.settled_planets,...possessing_player.conquered_planets];\n\t\t\t\tlet reduction = 0;\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tfor (let p in planets){\n\t\t\t\t\treduction+= planets[p].icons.colonize;\n\t\t\t\t}\n\t\t\t\tfor (let p in game.players[game.leading_player_index].permanents){\n\t\t\t\t\treduction+= permanents[p].icons.colonize;\n\t\t\t\t}\n\t\t\t\tif (planet.settle_cost - reduction <= planet.hosted_colonies.length){\n\t\t\t\t\tif (app.get().game.players[app.get().game.acting_player_index].permanents.filter( (el)=>{return el.type=='abundance'} ).length != 0){\n\t\t\t\t\t\tif (planet.production_zones.length != 0){\n\t\t\t\t\t\t\tplanet.production_zones = planet.production_zones.map((pz)=>{return {type:pz.type,filled:true};})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i in planet.hosted_colonies){\n\t\t\t\t\t\tpossessing_player.discard.push(planet.hosted_colonies.pop());\n\t\t\t\t\t}\n\t\t\t\t\tlet temp_array = [];\n\t\t\t\t\tlet removed = false;\n\t\t\t\t\tlet filtered_item = null\n\t\t\t\t\tfor (let i = 0; i < possessing_player.unsettled_planets.length; i++){\n\t\t\t\t\t\tlet elem = possessing_player.unsettled_planets.pop();\n\t\t\t\t\t\tif (planet.identifier == elem.identifier && !removed) {\n\t\t\t\t\t\t\telem.settled=true;\n\t\t\t\t\t\t\tpossessing_player.settled_planets.push(elem);\n\t\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t\t}\n\t\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\t\tpossesing_player.unsettled_planets.push(temp_array[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t//pass_turn leadingplayer->nextplayer\n\t\t\tpass_turn(){\n\t\t\t\tif (!app.get().lobby.online || app.get().lobby.screenname == app.get().game.players[app.get().game.acting_player_index].name ){\n\t\t\t\t\t//app.togglepasstoplayer();\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tgame.passt=false;\n\t\t\t\t\tgame.leading_player_index = (game.leading_player_index+1)%game.number_of_players;\n\t\t\t\t\tgame.acting_player_index=game.leading_player_index;\n\t\t\t\t\tgame.leadingplayer = game.players[game.leading_player_index];\n\t\t\t\t\tgame.acting_player = game.players[game.leading_player_index];\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\tapp.phasefinishfunction();\n\t\t\t\t}\n\t\t\t},\n\t\t\t//pass_priority actingplayer->nextplayer\n\t\t\tpass_priority(){\n\t\t\t\tif (!app.get().lobby.online || app.get().lobby.screenname == app.get().game.players[app.get().game.acting_player_index].name ){\n\t\t\t\t\t//app.togglepasstoplayer();\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tgame.passp=false;\n\t\t\t\t\tgame.acting_player_index = (game.acting_player_index+1)%game.number_of_players;\n\t\t\t\t\tgame.acting_player = game.players[game.acting_player_index];\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\tapp.phasefinishfunction();\n\t\t\t\t}\n\t\t\t},\n\t\t\t//determine_number_of_players logic->options->choice->number_of_players\n\t\t\tdetermine_number_of_players(callback){\n\t\t\t\t\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.minimum_number_of_players = 2;\n\t\t\t\tgame.maximum_number_of_players = 4;\n\t\t\t\tlet options=[];\n\t\t\t\tfor (let i = game.minimum_number_of_players; i <= game.maximum_number_of_players; i++ ){\n\t\t\t\t\toptions.push(i);\n\t\t\t\t}\n\t\t\t\tlet callbackwrapper = ()=>{ \n\t\t\t\t\t\tlet game=app.get().game;\n\t\t\t\t\t\tgame.number_of_players = game.choices;\n\t\t\t\t\t\tdocument.removeEventListener('choicemade',callbackwrapper); \t\t\n\t\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t};\n\t\t\t\tdocument.addEventListener('choicemade',callbackwrapper);\n\t\t\t\tapp.present_as_choice(options);\n\t\t\t},\n\t\t\t//produce poduction_pile->host\n\t\t\tproduce(planets, resources=1){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet prd = {blue:0,green:0,purple:0,red:0};\n\t\t\t\tfor (let j in planets){\n\t\t\t\t\tif (resources>0){\n\t\t\t\t\t\tfor ( let i = 0; i < planets[j].production_zones.length; i++){\n\t\t\t\t\t\t\tif (!planets[j].production_zones[i].filled){\n\t\t\t\t\t\t\t\tplanets[j].production_zones[i].filled=true;\n\t\t\t\t\t\t\t\tprd[planets[j].production_zones[i].type]++;\n\t\t\t\t\t\t\t\tresources--;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//loop through planet in acting player thing and set it\n\t\t\t\t// for planet in args\n\t\t\t\t// playerplanets.filter where id not equal id\n\t\t\t\t// afterloop, append arg planets\n\t\t\t\tfor (let i in planets){\n\t\t\t\t\tlet p = planets[i];\n\t\t\t\t\tgame.players[game.acting_player_index].settled_planets = game.players[game.acting_player_index].settled_planets.filter((e)=>{return e.identifier!=p.identifier}); \n\t\t\t\t\tgame.players[game.acting_player_index].conquered_planets = game.players[game.acting_player_index].conquered_planets.filter((e)=>{return e.identifier!=p.identifier}); \n\t\t\t\t}\n\t\t\t\tgame.players[game.acting_player_index].settled_planets = [...game.players[game.acting_player_index].settled_planets,...planets];\n\t\t\t\tgame.players[game.acting_player_index].conquered_planets = [...game.players[game.acting_player_index].conquered_planets,...planets];\n\t\t\t\tapp.set({'game':game});\n\t\t\t\treturn prd;\n\t\t\t},\n\t\t\t//trade host->production_pile, influence_pile->player_influence\n\t\t\ttrade(planets, player, resources=1){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet prd = {blue:0,green:0,purple:0,red:0};\n\t\t\t\tfor (let j in planets){\n\t\t\t\t\tif (resources>0){\n\t\t\t\t\t\tfor ( let i = 0; i < planets[j].production_zones.length; i++){\n\t\t\t\t\t\t\tif (planets[j].production_zones[i].filled){\n\t\t\t\t\t\t\t\tplanets[j].production_zones[i].filled=false;\n\t\t\t\t\t\t\t\tprd[planets[j].production_zones[i].type]++;\n\t\t\t\t\t\t\t\tplayers[j].influence.push(game.influence.pop());\n\t\t\t\t\t\t\t\tresources--;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i in planets){\n\t\t\t\t\tlet p = planets[i];\n\t\t\t\t\tgame.players[game.acting_player_index].planets = game.players[game.acting_player_index].planets.filter((e)=>{return e.identifier!=p.identifier}); \n\t\t\t\t}\n\t\t\t\tgame.players[game.acting_player_index].planets = [...game.players[game.acting_player_index].planets,...planets];\n\t\t\t\tapp.set({'game':game});\n\t\t\t\treturn prd;\n\t\t\t},\n\t\t\t//politics hand->limbo->exile, stacks->hand\n\t\t\tpolitics(politics_card, selected_center_card, player){\n\t\t\t\tapp.play(player.hand,player.limbo,'exile',politics_card.identifier);\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tif (game.stacks.pilecount[selected_center_card.type] >= 1){\n\t\t\t\t\tplayer.hand.push(Object.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks[selected_center_card.type]]));\n\t\t\t\t\tgame.stacks.pilecount[selected_center_card.type]--;\n\t\t\t\t}\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\t//research hand->exile\n\t\t\tresearch(cards, player, limit=2){\n\t\t\t\tfor (let i = 0; (i < cards.length && i < limit); i++){\n\t\t\t\t\tapp.remove_from_game(player.limbo, cards[i].identifier);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//boost logic->player_icons\n\t\t\tboost(cards, player){\n\t\t\t\tfor (let i = 0; i < cards.length; i++){\n\t\t\t\t\tfor (let j = 0; j < cards[i].icons.length; j++){\n\t\t\t\t\t\tlet [key,value] = cards[i].icons[j];\n\t\t\t\t\t\tplayer.boostingicons[key]+=value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t//survey deck->hand\n\t\t\tsurvey(player){\n\t\t\t\tplayer = app.draw(player,2);\n\t\t\t},\n\t\t\t//colonize hand/limbo->host\n\t\t\tcolonize(planet, source_array, card, isRole=false){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet filtered_item = null;\n\t\t\t\tlet totalIteration = 1;\n\t\t\t\tif (isRole){ totalIteration = app.get().game.players[app.get().game.acting_player_index].boostingicons.colonize; }\n\t\t\t\tlet iterations = source_array.length;\n\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (card.type == elem.type && card.final_destination_label!='exile' && !removed) {\n\t\t\t\t\t\tplanet.hosted_colonies.push(elem)\n\t\t\t\t\t\ttotalIteration--;\n\t\t\t\t\t\tif (totalIteration == 0){\n\t\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//warfare starship_pile->player_starship_pile\n\t\t\twarfare(player){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tplayer.starfighters.small++;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\t//conquer player_starship_pile->starship_pile, player_unconquered_planets->player_conquered_planets\n\t\t\tconquer(planet, player){\n\t\t\t\tif (app.get().game.players[app.get().game.acting_player_index].permanents.filter( (el)=>{return el.type=='scorched_earth_policy'} ).length != 0){\n\t\t\t\t\t\tplanet.production_zones = [];\n\t\t\t\t\t\tplanet.conquer_cost -= 2;\n\t\t\t\t\t\tif (planet.conquer_cost < 0) {\n\t\t\t\t\t\t\tplanet.conquer_cost = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tif (player.starfighters.small >= planet.conquer_cost){\n\t\t\t\t\tif (app.get().game.players[app.get().game.acting_player_index].permanents.filter( (el)=>{return el.type=='abundance'} ).length != 0){\n\t\t\t\t\t\tif (planet.production_zones.length != 0){\n\t\t\t\t\t\t\tplanet.production_zones = planet.production_zones.map((pz)=>{return {type:pz.type,filled:true};})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tplayer.starfighters.small -= planet.conquer_cost;\n\t\t\t\t\tplanet = app.select_via_identifier(player.unsettled_planets, planet.identifier);\n\t\t\t\t\tplanet.conquered=true;\n\t\t\t\t\tplayer.conquered_planets.push(planet);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//offer_to_boost present_as_choice, choose, boost\n\t\t\toffer_to_boost(player){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.displayinfo.selectionzone = 'hand';\n\t\t\t\tgame.displayinfo.allowformultipleselections = true;\n\t\t\t\tgame.displayinfo.showoptiontoskip = true;\n\t\t\t\tapp.present_as_choice(player.hand);\n\t\t\t\tlet callbackwrapper = ()=>{\n\t\t\t\t\tdocument.removeEventListener('choicemade',callbackwrapper);\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tapp.boost(game.choices, player);\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t};\n\t\t\t\tdocument.addEventListener('choicemade',callbackwrapper);\n\t\t\t},\n\t\t\tselect_via_identifier(source, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet selected_item = null;\n\t\t\t\tlet iterations = source.length;\n\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\tlet elem = source.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) {\n\t\t\t\t\t\tselected_item = elem;\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t\treturn selected_item;\n\t\t\t},\n\t\t\t\n\t\t\tboostrolewithcards(choices, callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet cards=choices;\n\t\t\t\tlet iterations = cards.length;\n\t\t\t\tif (cards[0].name!='Skip'){\n\t\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\t\tgame.players[app.get().game.acting_player_index].boostingicons[cards[i].type]++;\n\t\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\t\tapp.play(game.players[app.get().game.acting_player_index].hand,game.players[app.get().game.acting_player_index].limbo,'discard',cards[i].identifier);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tcallback();\n\t\t\t},\n\t\t\tgenerate_unique_identifier(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.nonce++;\t\n\t\t\t\tapp.set({'game':game});\n\t\t\t\treturn game.nonce;\n\t\t\t},\n\t\t\tperformleaderrole(callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.players[app.get().game.acting_player_index].activerole.role.role.leader(callback)\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tperformfollowerrole(callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.players[game.acting_player_index].activerole.set(game.players[game.leading_player_index].activerole.role);\n\t\t\t\tgame.players[game.acting_player_index].activerole.role.role.follower(callback);\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\texplore_planet(player){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet planet = game.planet_deck.pop();\n\t\t\t\tplayer.limbo.push({'final_destination_label':'planetdeck',...planet});\n\t\t\t\tgame.options.push(planet);\t\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tcatalog_planet(player){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\t\n\t\t\t\tlet planet=game.choices[0];\n\t\t\t\tplayer.unsettled_planets.push(planet);\n\t\t\t\tplanet = app.select_via_identifier(player.limbo, planet.identifier);\n\t\t\t\tlet temparray = [];\n\t\t\t\tlet iterations = player.limbo.length\n\t\t\t\tfor (let i = 0; i >= iterations ; i++){  \n\t\t\t\t\tlet card = player.limbo.pop();\n\t\t\t\t\tif (card.final_destination_label='planetdeck'){\n\t\t\t\t\t\tgame.planet_deck.push(card);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttemparray.push(card);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let el in temparray){\n\t\t\t\t\tplayer.limbo.push(temparray.pop());\n\t\t\t\t}\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tfollowcentercardrole(choices, callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet card = choices[0];\n\t\t\t\tgame.players[app.get().game.acting_player_index].activerole.set(card);\n\t\t\t\tif (game.stacks.pilecount[card.type] >= 1){\n\t\t\t\t\tgame.players[app.get().game.acting_player_index].boostingicons[card.type]++;\n\t\t\t\t\tgame.players[app.get().game.acting_player_index].limbo.push(Object.assign({'identifier':app.generate_unique_identifier(), 'final_destination_label':'discard'},game.stacks.rolecards[game.stacks[card.type]]));\n\t\t\t\t\t\n\t\t\t\t\tgame.stacks.pilecount[card.type]--;\n\t\t\t\t}\n\t\t\t\tlet [,,...arr] = arguments;\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tcallback(card,arr);\n\t\t\t},\n\t\t\tdiscardcardsfromhand(choices, callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tif(choices[0].name!=\"Skip\"){\n\t\t\t\t\tfor (let i = 0; i < choices.length; i++){\n\t\t\t\t\t\tapp.discard(game.players[app.get().game.acting_player_index].hand, game.players[app.get().game.acting_player_index].discard, choices[i].identifier);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet [,,...arr] = arguments;\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tcallback(choices,arr);\n\t\t\t},\n\t\t\tphasefinishfunction(send = false){\n\t\t\t\t//check for game end condition\n\t\t\t\t//if met, start a turn countdown to make sure everyone has had the same number of turns\n\t\t\t\t//also track who started the game\n\t\t\t\t//we can probably just track this as a total_rounds property of the player object, incrementing every time pass_turn is called\n\t\t\t\t// just check that all are equal\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.currentphase = (game.currentphase + 1) % game.gamesequence.length; \n\t\t\t\tlet jsobj = game.gamesequence[game.currentphase];\n\t\t\t\tlet nextphase;\n\t\t\t\tfor (let key in jsobj){\n\t\t\t\t\tgame.messagetoplayer.push(key);\n\t\t\t\t\tnextphase=jsobj[key];\n\t\t\t\t}\n\t\t\t\tif (game.nextphase !== app.endgame){\n\t\t\t\t\tgame.nextphase=nextphase;\n\t\t\t\t}\n\t\t\t\t// if (app.get().game.started && app.checkforendgame() && (game.players.reduce((t,p)=>{return t+p.rounds},0))%game.number_of_players == 0){\n\t\t\t\t// \tapp.totalinfluence();\n\t\t\t\t// \tnextphase = app.endgame;\n\t\t\t\t// }\n\t\t\t\tif (send){\n\t\t\t\t\tapp.send({'game':game});\n\t\t\t\t} else {\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t}\n\t\t\t\tgame.nextphase();\n\t\t\t},\n\t\t\tgenerategamesequence(){\n\t\t\t\tlet game=app.get().game;\n\t\t\t\tlet _gamesequence=[];\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[0].start],_gamesequence);\n\t\t\t\t//ar. ra, aar, ara, raa\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[1].action],_gamesequence, ()=>{return app.get().game.players[app.get().game.acting_player_index].actionrolesequence=='aar'});\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[1].action],_gamesequence, ()=>{return app.get().game.players[app.get().game.acting_player_index].actionrolesequence=='aar' || app.get().game.players[app.get().game.acting_player_index].actionrolesequence=='ar'  });\n\t\t\t\t\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[2].role],_gamesequence);\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[3].lead],_gamesequence);\n\t\t\t\tfor (let i = 1; i<game.number_of_players; i++){\n\t\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[4].follow],_gamesequence);\n\t\t\t\t}\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[1].action],_gamesequence, ()=>{return app.get().game.players[app.get().game.acting_player_index].actionrolesequence=='raa' || app.get().game.players[app.get().game.acting_player_index].actionrolesequence=='ara'  });\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[1].action],_gamesequence, ()=>{return app.get().game.players[app.get().game.acting_player_index].actionrolesequence=='raa'});\n\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[5].discard],_gamesequence);\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[6].cleanup],_gamesequence);\n\t\t\t\tgame.gamesequence = _gamesequence;\n\t\t\t\tapp.set({'game':game,'phases':_gamesequence});\n\t\t\t},\n\t\t\tgshelper(source_array, destination_array, wrapperfunction=false){\n\t\t\t\tfor (let i in source_array){\n\t\t\t\t\tif (wrapperfunction){\n\t\t\t\t\t\tlet jsobj = source_array[i];\n\t\t\t\t\t\tlet func,key;\n\t\t\t\t\t\tlet item = {};\n\t\t\t\t\t\tfor (key in jsobj){\n\t\t\t\t\t\t\tfunc=jsobj[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\titem[key] = ()=>{\n\t\t\t\t\t\t\tif (wrapperfunction()){\n\t\t\t\t\t\t\t\tfunc();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tapp.phasefinishfunction();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestination_array.push(item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination_array.push(source_array[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn destination_array;\n\t\t\t},\n\t\t\tgeneratenewdeck(){\n\t\t\t\tlet game= app.get().game;\n\t\t\t\tlet deck =  [\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.survey]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.survey]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.warfare]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.producetrade]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.producetrade]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.colonize]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.colonize]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.research]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.research]),\n\t\t\t\t\t{\n\t\t\t\t\t\t'identifier':app.generate_unique_identifier(),\n\t\t\t\t\t\ttype : 'politics',\n                \t\t'selected':false,\n\t\t\t\t\t\taction : (callback)=>{\n\t\t\t\t\t\t\tlet callbackwrapper = ()=>{ \t\n\t\t\t\t\t\t\t\tdocument.removeEventListener('choicemade',callbackwrapper); \n\t\t\t\t\t\t\t\tlet game= app.get().game;\n\t\t\t\t\t\t\t\tapp.politics(game.players[game.acting_player_index].activeaction, game.choices[0], game.players[game.acting_player_index]);\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t};\t\n\t\t\t\t\t\t\tlet game= app.get().game;\n\t\t\t\t\t\t\tgame.displayinfo.center_or_planets=true;\n\t\t\t\t\t\t\tgame.displayinfo.selectionzone='rolecards';\n\t\t\t\t\t\t\tgame.displayinfo.allowformultipleselections=false;\n\t\t\t\t\t\t\tgame.displayinfo.showoptiontoskip=false;\n\t\t\t\t\t\t\tgame.messagetoplayer.push('choose a card from the center row to add to your hand');\n\t\t\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\t\t\tdocument.addEventListener('choicemade',callbackwrapper);\n\t\t\t\t\t\t\tapp.present_as_choice(game.stacks.rolecards);\n\t\t\t\t\t\t},\n\t\t\t\t\t\trole : null,\n\t\t\t\t\t\ticons : {'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0,'politics':1},\n\t\t\t\t\t\tname : 'Politics',\n\t\t\t\t\t\timage : null\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t\tapp.set({'game':game});\n\t\t\t\treturn deck;\n\t\t\t},\n\t\t\tphaseincrement(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.currentphase++;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tnewgame(number_of_players){\n\t\t\t\tlet sets = app.get().lobby.sets;\n\t\t\t\t//returns {game_id, game_name, number_of_players, slots}\n\t\t\t\tlet ws = new WebSocket(app.get().lobby.url);\n\t\t\t\t//let ws = new io(app.get().lobby.url);\n\t\t\t\tlet lobby = app.get().lobby;\n\t\t\t\tlobby.online=true;\n\t\t\t\tapp.set({'lobby':lobby});\n\t\t\t\tapp.initgame(number_of_players);\n\t\t\t\tws.onmessage = (evt) => {\n\t\t\t\t\t// on receiving a message, add it to the list of messages\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tlet lobby = app.get().lobby;\n\t\t\t\t\tgame.game_id = JSON.parse(evt.data);\n\t\t\t\t\tgame.header='';\n\t\t\t\t\tlobby.existinggames.push(game);\n\t\t\t\t\tlobby.online=true;\n\t\t\t\t\tgame.currentphase++;\n\t\t\t\t\tapp.set({'game':game,'lobby':lobby});\n\t\t\t\t\tws.close();\n\t\t\t\t\t//app.enterexistinggame(app.get().game);\n\t\t\t\t};\n\t\t\t\tws.onopen = (evt) => {\n\t\t\t\t\tif (ws.readyState==1){\n\t\t\t\t\t\tws.send(JSON.stringify({'header':'newgame',game:app.get().game,sets:sets,number_of_players:number_of_players}));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tfetchexistinggames(){\n\t\t\t\t//returns list of [{game_id, game_name, number_of_players, slots},...]\n\t\t\t\tlet ws = new WebSocket(app.get().lobby.url);\n\t\t\t\t//let ws = new io(app.get().lobby.url);\n\t\t\t\tws.onmessage = (evt) => {\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tgame.currentphase = -2;\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\tlet lobby = app.get().lobby\n\t\t\t\t\tlobby.existinggames = JSON.parse(evt.data).map((el)=>{return el.game}).filter((el)=>{return el.players.filter((ll)=>{return ll.available}).length > 0});\n\t\t\t\t\tlobby.online = true;\n\t\t\t\t\tapp.set({'lobby':lobby});\n\t\t\t\t\tws.close();\n\t\t\t\t}\n\t\t\t\tws.onopen = (evt) => {\n\t\t\t\t\tif (ws.readyState==1){\n\t\t\t\t\t\tws.send(JSON.stringify({'header':'fetchexisting'}));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tenterexistinggame(g){\n\t\t\t\tlet game_id = g.game_id;\n\t\t\t\tlet slot = 0, player_name = app.get().lobby.screename;\n\t\t\t\tfor (let i = 0; i <g.players.length; i++){\n\t\t\t\t\tif (g.players[i].available){\n\t\t\t\t\t\tslot = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!app.get().lobby.init) {\n\t\t\t\t\tapp.initgame(g.number_of_players);\n\t\t\t\t}\n\t\t\t\tlet ws = new WebSocket(app.get().lobby.url);\n\t\t\t\t//let ws = new io(app.get().lobby.url);\n\t\t\t\tws.onmessage = evt => {\n\t\t\t\t\t// on receiving a message, add it to the list of messages\n\t\t\t\t\tlet game = JSON.parse(evt.data);\n\t\t\t\t\tgame.gamesequence=app.get().phases;\n\t\t\t\t\tif (game.currentphase !=0) {\n\t\t\t\t\t\tgame.currentphase=-1;\t\n\t\t\t\t\t}\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\tws.close();\n\t\t\t\t\t\n\t\t\t\t\tlet lobby = app.get().lobby;\n\t\t\t\t\tlobby.online=true;\n\t\t\t\t\tlobby.player_id = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);\n\t\t\t\t\tapp.set({'lobby':lobby});\n\t\t\t\t\tif (game.currentphase != 0 ){\n\t\t\t\t\t\tapp.phasefinishfunction();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tws.onopen = (evt) => {\n\t\t\t\t\tif (ws.readyState==1){\n\t\t\t\t\t\tws.send(JSON.stringify({'header':'enterexisting',game_id:game_id,player_name,slot:slot}));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tinitgame(number_of_players){\n\t\t\t\tlet lobby = app.get().lobby;\n\t\t\t\tlobby.init=true;\n\t\t\t\tapp.set({'lobby':lobby});\n\t\t\t\tapp.generateplanetdeck();\n\t\t\t\tfor (let i = 0; i < number_of_players; i++){\n\t\t\t\t\tapp.generateplayer(i);\n\t\t\t\t}\n\t\t\t\tapp.generate_research_deck();\n\t\t\t\tapp.generategamesequence();\n\t\t\t\t//app.makews('ws://192.168.1.6:3030');\n\t\t\t\t//'ws://temperate-isle.herokuapp.com/:3030';\n\t\t\t\tif (app.get().lobby.online) app.makews(location.origin.replace(/^http/, 'ws'));\n\t\t\t\tif (!app.get().lobby.online) {\n\t\t\t\t\tapp.generate_game_id();\n\t\t\t\t\tapp.generate_player_names();\n\t\t\t\t}\n\t\t\t\t//app.phasefinishfunction();\n\t\t\t},\n\t\t\tgenerate_player_names(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tfor (let i in game.players){\n\t\t\t\t\tgame.players[i].name ='Player '+(i+1);\n\t\t\t\t}\n\t\t\t\tapp.set({game:game});\n\t\t\t},\n\t\t\ttoggle_center_or_planets(){\n\t\t\t\tlet game=app.get().game;\n\t\t\t\tgame.displayinfo.center_or_planets = !game.displayinfo.center_or_planets;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\ttogglepasstoplayer(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.passtoplayer = !game.passtoplayer;\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tapp.openFullscreen();\n\t\t\t},\n\t\t\tclass_gen(zone, item){\n\t\t\t\treturn (app.get().game.displayinfo.selectionzone==zone) \n\t\t\t\t?   (\n\t\t\t\t\t(item.selected) \n\t\t\t\t\t\t? \"selected\" \n\t\t\t\t\t\t: \"selectable\"\n\t\t\t\t\t) \n\t\t\t\t: \"bordered\";\n\t\t\t},\n\t\t\tmakews(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet ws = new WebSocket(app.get().lobby.url);\n\t\t\t\t//let ws = new io(app.get().lobby.url);\n\t\t\t\tlet i = 0;\n\t\t\t\tlet ping = ()=>{\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tws.send(JSON.stringify({header:'ping'}));\n\t\t\t\t\t\tping();\n\t\t\t\t\t},2000);\n\t\t\t\t};\n\t\t\t\tws.onmessage = evt => {\n\t\t\t\t\t// on receiving a message, add it to the list of messages\n\t\t\t\t\tlet game = JSON.parse(evt.data);\n\t\t\t\t\tif (game.game_id==app.get().game.game_id && game.sender != app.get().lobby.player_id){\n\t\t\t\t\t\tgame.gamesequence=app.get().phases;\n\t\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tws.onopen = evt => {\n\t\t\t\t\tping();\n\t\t\t\t}\n\t\t\t\tws.onclose = () => {\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tapp.set({'game':game,'ws':ws});\n\t\t\t\t\n\t\t\t},\n\t\t\tsendstate(){\n\t\t\t\tlet ws = app.get().ws\n\t\t\t\tif (ws.readyState==1){\n\t\t\t\t\tws.send(JSON.stringify({...app.get().game,'header':'set','sender':app.get().lobby.player_id}));\n\t\t\t\t}\n\t\t\t},\n\t\t\tgenerate_game_id(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.game_id ='';\n\t\t\t\t//for(let i = 0; i < game.nonce; i++){\n\t\t\t\t\tgame.game_id += Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);\n\t\t\t\t//}\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tknuthshuffle(array) {\n\t\t\t\tlet currentIndex = array.length;\n\t\t\t\tlet temporaryValue, randomIndex;\n\t\t\t\t// While there remain elements to shuffle...\n\t\t\t\twhile (0 !== currentIndex) {\n\t\t\t\t\t// Pick a remaining element...\n\t\t\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\t\t\tcurrentIndex -= 1;\n\n\t\t\t\t\t// And swap it with the current element.\n\t\t\t\t\ttemporaryValue = array[currentIndex];\n\t\t\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\t\t\tarray[randomIndex] = temporaryValue;\n\t\t\t\t}\n\t\t\t\treturn array;\n\t\t\t},\n\t\t\tdrag(evt,item){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.displayinfo.dragged=item;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tdrop(evt,zone){\n\t\t\t\tlet el = document.getElementById('playedcards').getBoundingClientRect();\n\t\t\t\tif (evt.changedTouches[0].clientX > el.left\n\t\t\t\t&& evt.changedTouches[0].clientX < el.left+ el.width\n\t\t\t\t&& evt.changedTouches[0].clientY < el.top+el.height\n\t\t\t\t&& evt.changedTouches[0].clientY > el.top){\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tif(game.displayinfo.dragged!==null) app.choosewrapper(game.displayinfo.dragged,zone);\n\t\t\t\t\tgame.displayinfo.dragged!=null;\n\t\t\t\t\tapp.set({'game':game});\n\n\t\t\t\t}\n\t\t\t\tlet ll = document.querySelector('#dragged');\n\t\t\t\tll.style.visibility=\"hidden\";\n\t\t\t},\n\t\t\tmove(evt, img){\n\t\t\t\tlet touch = evt.targetTouches[0];\n\t\t\t\t// Place element where the finger is\n\t\t\t\tlet el = document.querySelector('#dragged');\n\t\t\t\tel.style.position = \"absolute\";\n\t\t\t\tel.style.visibility=\"visible\";\n\t\t\t\tel.style.top = touch.pageY-75+'px';\n\t\t\t\tel.style.left = touch.pageX-50+'px';\n\t\t\t\tel.style.width = \"100px\";\n\t\t\t\tel.style.height = \"137px\";\n\t\t\t\tel.style.zIndex = \"4\";\n\t\t\t\tel.style.backgroundImage=\"url('\"+img+\"')\";\n\t\t\t\t//evt.target.style.transform = \"translate(\" + touch.pageX + 'px,' + touch.pageY + 'px);';\n\t\t\t},\n\t\t\tnewoffline(){\n\t\t\t\tlet {game:game,lobby:lobby} = app.get();\n\t\t\t\tlobby.online=false;\n\t\t\t\tgame.currentphase = -1;\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tapp.initgame(2);\n\t\t\t\tapp.phasefinishfunction();\n\t\t\t},\n\t\t\tsetplayername(name){\n\t\t\t\tlet {lobby:lobby,game:game} = app.get();\n\t\t\t\tlobby.screename = name;\n\t\t\t\tgame.currentphase++;\n\t\t\t\tapp.set({'lobby':lobby,'game':game});\n\t\t\t},\n\t\t\topenFullscreen() {\n\t\t\t\tlet elem = document.getElementById(\"screen\");\n\t\t\t\tif (elem.requestFullscreen) {\n\t\t\t\telem.requestFullscreen();\n\t\t\t\t} else if (elem.mozRequestFullScreen) { /* Firefox */\n\t\t\t\telem.mozRequestFullScreen();\n\t\t\t\t} else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n\t\t\t\telem.webkitRequestFullscreen();\n\t\t\t\t} else if (elem.msRequestFullscreen) { /* IE/Edge */\n\t\t\t\telem.msRequestFullscreen();\n\t\t\t\t}\n\t\t\t},\n\t\t\tregisterws(){\t\n\t\t\t\tif (app.get().ws.readyState==1){\n\t\t\t\t\tapp.get().ws.send(JSON.stringify({...app.get().game,'header':'register','sender':app.get().lobby.player_id}));\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n</script>","import App from \"./App.html\";\nlet nonce = 0;\nlet game = {\n  passtoplayer: false,\n  nonce: 0,\n  displayinfo: {\n    selectionzone: \"\",\n    dragged: null,\n    showoptiontoskip: false,\n    allowformultipleselections: false,\n    center_or_planets: true, //true = center, false = planets\n    choicelabel: \"choices\"\n  },\n  subchoices: [],\n  influence: [\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  ],\n  messagetoplayer: [],\n  options: [],\n  planet_deck: [],\n  currentphase: -4,\n  leading_player_index: 0,\n  acting_player_index: 0,\n  number_of_players: 2,\n  started: false,\n  gamephases: [\n    //logic for detecting startofgame, endofgame, changeofpriority, and reseting the phasequeue\n    {\n      start: [\n        {\n          \"set active player\": () => {\n            if (!app.get().game.started) {\n              let game = app.get().game;\n              game.started = true;\n              game.passt = false;\n              app.set({ game: game });\n              game = app.get().game;\n              game.leading_player_index =\n                (game.leading_player_index + 1) % game.number_of_players;\n              game.acting_player_index = game.leading_player_index;\n              game.leadingplayer = game.players[game.leading_player_index];\n              game.acting_player = game.players[game.leading_player_index];\n              app.set({ game: game });\n              app.openFullscreen();\n            }\n            let game = app.get().game;\n            if (game.leadingplayer.rounds !== undefined) {\n              game.players[game.leading_player_index].rounds++;\n            }\n            let planets = [\n              ...game.players[game.leading_player_index].settled_planets,\n              ...game.players[game.leading_player_index].conquered_planets\n            ];\n            for (let p in planets) {\n              game.players[game.leading_player_index].icons.survey +=\n                planets[p].icons.survey;\n              game.players[game.leading_player_index].icons.warfare +=\n                planets[p].icons.warfare;\n              game.players[game.leading_player_index].icons.trade +=\n                planets[p].icons.trade;\n              game.players[game.leading_player_index].icons.produce +=\n                planets[p].icons.produce;\n              game.players[game.leading_player_index].icons.research +=\n                planets[p].icons.research;\n            }\n            for (let p in game.players[game.leading_player_index].permanents) {\n              game.players[game.leading_player_index].icons.survey +=\n                permanents[p].icons.survey;\n              game.players[game.leading_player_index].icons.warfare +=\n                permanents[p].icons.warfare;\n              game.players[game.leading_player_index].icons.trade +=\n                permanents[p].icons.trade;\n              game.players[game.leading_player_index].icons.produce +=\n                permanents[p].icons.produce;\n              game.players[game.leading_player_index].icons.research +=\n                permanents[p].icons.research;\n            }\n            app.set({ game: game });\n            app.phasefinishfunction(true);\n          }\n        },\n        {\n          Productivity: () => {\n            if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"productivity\";\n                }).length != 0\n            ) {\n              let game = app.get().game;\n              game.players[\n                app.get().game.acting_player_index\n              ].actionrolesequence = \"aar\";\n              app.set({ game: game });\n            }\n            app.phasefinishfunction();\n          }\n        },\n        {\n          \"Choose an Order to Perform Your Action and Role Phases\": () => {\n            if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"logistics\";\n                }).length != 0\n            ) {\n              let options = [\n                { name: \"Action Phase then Role Phase\" },\n                { name: \"Role Phase then Action Phase\" }\n              ];\n              if (\n                app\n                  .get()\n                  .game.players[\n                    app.get().game.acting_player_index\n                  ].permanents.filter(el => {\n                    return el.type == \"productivity\";\n                  }).length != 0\n              ) {\n                //add aar,ara,and raa as options\n                options.push({\n                  name: \"Action Phase then another Action Phase then Role Phase\"\n                });\n                options.push({\n                  name: \"Action Phase then Role Phase then another Action Phase\"\n                });\n                options.push({\n                  name: \"Role Phase then Action Phase then another Action Phase\"\n                });\n              }\n              //offer ar or ra\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  options\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            } else {\n              app.phasefinishfunction();\n            }\n          }\n        },\n        {\n          Logistics: () => {\n            if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"logistics\";\n                }).length != 0\n            ) {\n              let game = app.get().game;\n              if (\n                app.get().game.choices[0].name == \"Action Phase then Role Phase\"\n              ) {\n                game.players[\n                  app.get().game.acting_player_index\n                ].actionrolesequence = \"ar\";\n              } else if (\n                app.get().game.choices[0].name == \"Role Phase then Action Phase\"\n              ) {\n                game.players[\n                  app.get().game.acting_player_index\n                ].actionrolesequence = \"ra\";\n              } else if (\n                app.get().game.choices[0].name ==\n                \"Action Phase then another Action Phase then Role Phase\"\n              ) {\n                game.players[\n                  app.get().game.acting_player_index\n                ].actionrolesequence = \"aar\";\n              } else if (\n                app.get().game.choices[0].name ==\n                \"Action Phase then Role Phase then another Action Phase\"\n              ) {\n                game.players[\n                  app.get().game.acting_player_index\n                ].actionrolesequence = \"ara\";\n              } else if (\n                app.get().game.choices[0].name ==\n                \"Role Phase then Action Phase then another Action Phase\"\n              ) {\n                game.players[\n                  app.get().game.acting_player_index\n                ].actionrolesequence = \"raa\";\n              }\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            } else {\n              app.phasefinishfunction();\n            }\n          }\n        }\n      ]\n    },\n    //check for permanent tech logistics\n    //offer wether to perform the role or the action phases first\n    //simply add an extra action phase that occurs if the role was choosen first, set all action phase one's to cancel if role was choosen first\n\n    // action : 2\n    //      choose from hand an action to play or skip\n    //      -> set as activeaction\n    {\n      action: [\n        //check for permanent tech productivity\n        //add an extra action\n        {\n          \"Choose an Action to Play\": () => {\n            app.offer(\n              true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n              false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n              [\n                \"hand\"\n              ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n              \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n              app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n            );\n          }\n        },\n        {\n          \"Playing your Action\": () => {\n            if (app.get().game.choices[0].name == \"Skip\") {\n              app.phasefinishfunction();\n            } else {\n              let {\n                game: game,\n                game: {\n                  acting_player: player,\n                  acting_player: { limbo: limbo, hand: hand },\n                  choices: [card]\n                }\n              } = app.get();\n              player = game.players[game.acting_player_index];\n              limbo = player.limbo;\n              hand = player.hand;\n              player.activeaction = card.type;\n              limbo = limbo.filter(el => {\n                return card.identifier != el.identifier;\n              });\n              limbo.push({ final_destination_label: \"discard\", ...card });\n              hand = hand.filter(el => {\n                return card.identifier != el.identifier;\n              });\n              player.limbo = limbo;\n              player.hand = hand;\n              game.players[app.get().game.acting_player_index] = player;\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // colonize : 5 (can conjoin to 4)\n        //     settle or colonize\n        //      -> choose planet\n        //         -> settle\n        //      -> choose planet\n        //         -> colonize\n        {\n          \"Choose between Settling or Colonizing a Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"Colonize\" }, { name: \"Settle Colonies\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose an Unsettled Planet to Settle\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"colonize\" ||\n              app.get().game.choices[0].name != \"Settle Colonies\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Settling your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"colonize\" ||\n              app.get().game.choices[0].name != \"Settle Colonies\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.settle_colonies(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose an Unsettled Planet to Colonize\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"colonize\" ||\n              app.get().game.choices[0].name != \"Colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Colonizing your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"colonize\" ||\n              app.get().game.choices[0].name != \"Colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.colonize(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n                  .limbo,\n                app\n                  .get()\n                  .game.players[\n                    app.get().game.acting_player_index\n                  ].limbo.filter(el => {\n                    return el.type == \"colonize\";\n                  })[0]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // producetrade : 5\n        //      produce or trade\n        //      -> select an empty productionzone\n        //          -> produce\n        //      -> select an occupied productionzone\n        //          -> trade\n        {\n          \"Choose between Producing or Trading Resources\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"producetrade\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"produce\" }, { name: \"trade\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Produce Resources on\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"producetrade\" ||\n              app.get().game.choices[0].name != \"produce\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"settled_&_conquered_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Producing a Resource\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"producetrade\" ||\n              app.get().game.choices[0].name != \"produce\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.produce(app.get().game.subchoices);\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Trade Resources from\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"producetrade\" ||\n              app.get().game.choices[0].name != \"trade\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"settled_&_conquered_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Trading a Resource\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"producetrade\" ||\n              app.get().game.choices[0].name != \"trade\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.trade(\n                app.get().game.subchoices,\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        //#######################################################################################################################################################################################\n        // politics : 2\n        //      choose card from center row\n        //          -> politics\n        {\n          \"Choose a Role Card to Replace Politics with\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"politics\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"rolecards\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Swapping the Role Card for your Politics Card\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"politics\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.politics(\n                app\n                  .get()\n                  .game.players[\n                    app.get().game.acting_player_index\n                  ].limbo.filter(el => {\n                    return el.type == \"politics\";\n                  })[0],\n                app.get().game.choices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // research : 2\n        //      choose card(s) from hand\n        //      -> research\n        {\n          \"Choose up to 2 Cards from your Hand to Remove from the Game\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"research\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"hand\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Removing your Cards from the Game\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"research\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.research(\n                app.get().game.choices,\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // survey : 1\n        //      -> survey\n        {\n          \"Surveying your Empire\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"survey\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.survey(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // warfare : 4\n        //      attack or collect\n        //          -> collect\n        //          -> choose planet\n        //              -> conquer\n        {\n          \"Choose between Collecting a Starfighter or Conquering a Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"warfare\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [\n                    { name: \"Conquer a Planet\" },\n                    { name: \"Collect a Starfighter\" }\n                  ]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Adding a Starfighter to your Fleet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"warfare\" ||\n              app.get().game.choices[0].name != \"Collect a Starfighter\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.warfare(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Conquer\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"warfare\" ||\n              app.get().game.choices[0].name != \"Conquer a Planet\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Conquering your planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"warfare\" ||\n              app.get().game.choices[0].name != \"Conquer a Planet\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.conquer(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              //check for permanent tech scorched earth policy\n              //remove production zone from planet\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // improved_colonize : 8\n        //      optional settle or no\n        //      -> choose planet\n        //         -> settle\n        //      settle or colonize\n        //      -> choose planet\n        //         -> settle\n        //      -> choose planet\n        //         -> colonize\n        {\n          \"Choose wether or not to Settle a Planet \": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"settle\" }, { name: \"Skip\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Settle\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_colonize\" ||\n              app.get().game.choices[0].name != \"settle\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Settling your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_colonize\" ||\n              app.get().game.choices[0].name != \"settle\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.settle_colonies(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              // check for permanent tech abundance\n              // change production slots to filled\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose between Settling or Colonizing a Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"Colonize\" }, { name: \"Settle Colonies\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose an Unsettled Planet to Settle\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_colonize\" ||\n              app.get().game.choices[0].name != \"Settle Colonies\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Settling your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_colonize\" ||\n              app.get().game.choices[0].name != \"Settle Colonies\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.settle_colonies(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              // check for permanent tech abundance\n              // change production slots to filled\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose an Unsettled Planet to Colonize\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_colonize\" ||\n              app.get().game.choices[0].name != \"Colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Colonizing your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_colonize\" ||\n              app.get().game.choices[0].name != \"Colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.colonize(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n                  .limbo,\n                app\n                  .get()\n                  .game.players[\n                    app.get().game.acting_player_index\n                  ].limbo.filter(el => {\n                    return el.type == \"improved_colonize\";\n                  })[0]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // improved_produce : 4\n        //      -> select an empty productionzone (optional)\n        //          -> produce\n        //              -> select an empty productionzone (optional)\n        //                  -> produce\n        {\n          \"Choose an empty Production Zone to Produce in\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_production\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"settled_&_conquered_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Producing your Resource\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_production\" ||\n              app.get().game.choices[0].name == \"Skip\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.produce(app.get().game.choices);\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose an empty Production Zone to Produce in\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_production\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"settled_&_conquered_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Producing your Resource\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_production\" ||\n              app.get().game.choices[0].name == \"Skip\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.produce(app.get().game.choices);\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // improved_trade : 1\n        //      -> improved_trade\n        {\n          \"Trading your Stocks and Bonds\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_trade\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let game = app.get().game;\n              game.players[app.get().game.acting_player_index].influence.push(\n                game.influence.pop()\n              );\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // improved_research : 2\n        //      choose card(s) from hand\n        //      -> improved_research\n        {\n          \"Choose up to 3 Cards from your Hand to Remove from the Game\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_research\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.draw(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"hand\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Removing your Cards from the Game\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_research\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              research(\n                app.get().game.choices,\n                app.get().game.players[app.get().game.acting_player_index],\n                3\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // improved_survey : 1\n        //      -> improved_survey\n        {\n          \"Drawing your Cards\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_survey\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.draw(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.draw(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.draw(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // improved_warfare : 4\n        //      attack or collect\n        //      -> collect\n        //      -> choose planet\n        //           -> conquer\n        {\n          \"Choose between Collecting a Starfighter or Conquering a Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_warfare\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [\n                    { name: \"Conquer a Planet\" },\n                    { name: \"Collect a Starfighter\" }\n                  ]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Adding a Starfighter to your Fleet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_warfare\" ||\n              app.get().game.choices[0].name != \"Collect a Starfighter\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.warfare(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.warfare(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Conquer\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_warfare\" ||\n              app.get().game.choices[0].name != \"Conquer a Planet\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Conquering your planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"improved_warfare\" ||\n              app.get().game.choices[0].name != \"Conquer a Planet\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.conquer(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // mobilization : 4\n        //      -> mobilization\n        //      choose wether to attack (post role phase)\n        //      -> choose planet\n        //          -> conquer\n        {\n          \"Collecting your Star Fighters\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"mobilization\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.warfare(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.warfare(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n\n        // #######################################################################################################################################################################################\n        // survey_team : 1\n        //      -> survey_team\n        {\n          \"Adding Top Card of the Planet deck to your Empire\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"survey_team\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let {\n                game: game,\n                game: { acting_player: player, planet_deck: planet_deck }\n              } = app.get();\n              player = game.players[game.acting_player_index];\n              let planet = planet_deck.pop();\n              player.unsettled_planets.push(planet);\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // war_path : 4\n        //      choose a planet (optional)\n        //         -> conquer\n        //              choose a planet (optional)\n        //                  -> conquer\n        {\n          \"Choose a Planet to Conquer\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"war_path\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Conquering your planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"war_path\" ||\n              app.get().game.choices[0].name != \"Skip\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.conquer(\n                app.get().game.choices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Conquer\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"war_path\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Conquering your planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"war_path\" ||\n              app.get().game.choices[0].name != \"Skip\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.conquer(\n                app.get().game.choices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // terraforming : 2\n        //      choose planet\n        //      -> terraforming\n        {\n          \"Choose an Unsettled Planet to Terraform\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"terraforming\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Terraforming your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"terraforming\" ||\n              app.get().game.choices[0].name != \"Colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.colonize(\n                app.get().game.choices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n                  .limbo,\n                app\n                  .get()\n                  .game.players[\n                    app.get().game.acting_player_index\n                  ].limbo.filter(el => {\n                    return el.type == \"terraforming\";\n                  })[0]\n              );\n              if (app.get().game.choices[0].hosted_colonies.length > 0) {\n                let c = app\n                  .get()\n                  .game.choices[0].hosted_colonies.reduce((acc, cur) => {\n                    acc + cur.icons.colonize;\n                  });\n                if (c >= app.get().game.choices[0].settle_cost) {\n                  app.settle_colonies(\n                    app.get().game.choices[0],\n                    app.get().game.players[app.get().game.acting_player_index]\n                  );\n                }\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // genetic_engineering :1\n        //      -> genetic_engineering\n        {\n          \"Engineering Genetics\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"genetic_engineering\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.phasefinishfunction();\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // artificial_intelligence : 4\n        //      choose center row card\n        //          -> artificial_intelligence\n        //              choose center row card\n        //                  -> artificial_intelligence\n        {\n          \"Select a Role Card to take into your Hand\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"artificial_intelligence\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"rolecards\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Adding Role Card to your Machine Learning Model\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"artificial_intelligence\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let {\n                game: game,\n                game: { acting_player: player }\n              } = app.get();\n              player = game.players[game.acting_player_index];\n              if (game.stacks.pilecount[game.choices[0].type] >= 1) {\n                player.hand.push(\n                  Object.assign(\n                    { identifier: app.generate_unique_identifier() },\n                    game.stacks.rolecards[game.stacks[game.choices[0].type]]\n                  )\n                );\n                game.stacks.pilecount[game.choices[0].type]--;\n              }\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Select a Role Card to take into your Hand\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"artificial_intelligence\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"rolecards\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Adding Role Card to your Machine Learning Model\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"artificial_intelligence\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let {\n                game: game,\n                game: { acting_player: player }\n              } = app.get();\n              player = game.players[game.acting_player_index];\n              if (game.stacks.pilecount[game.choices[0].type] >= 1) {\n                player.hand.push(\n                  Object.assign(\n                    { identifier: app.generate_unique_identifier() },\n                    game.stacks.rolecards[game.stacks[game.choices[0].type]]\n                  )\n                );\n                game.stacks.pilecount[selected_center_card.type]--;\n              }\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // diverse_markets : 1\n        //      -> diverse_markets\n        {\n          \"Diversifying Markets\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"diverse_markets\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.phasefinishfunction();\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // specialization : 2\n        //      choose resource type\n        //          -> specialization\n        {\n          \"Choose a Resource to Specialize in\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"specialization\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [\n                    { name: \"red\" },\n                    { name: \"blue\" },\n                    { name: \"gren\" },\n                    { name: \"purple\" }\n                  ]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Specializaing in your Seleted Resource\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"specialization\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let game = app.get().game;\n              game.players[app.get().game.acting_player_index].specialization =\n                game.choices[0].name;\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // data_network : 3\n        //      -> data_network\n        //      choose card(s) from hand\n        //          -> research\n        {\n          \"Drawing Your Cards\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"data_network\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.draw(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.draw(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose any number of Cards from your Hand to Remove from the Game\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"data_network\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"hand\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Removing the Selected Cards from the Game\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"data_network\" ||\n              app.get().game.choices[0].name == \"Skip\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let {\n                game: game,\n                game: { choices: choices, acting_player: player }\n              } = app.get();\n              player = game.players[game.acting_player_index];\n              app.research(choices, player, choices.length);\n              app.phasefinishfunction(true);\n            }\n          }\n        }\n      ]\n    },\n\n    // choose role : 2\n    //      choose between center rolecards to lead with\n    //      -> lead with role\n    // boosting cards :2\n    //      choose card(s) from hand to boost with\n    //      -> boost role\n    {\n      role: [\n        {\n          \"Choose a Role Card to Lead with\": () => {\n            app.offer(\n              false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n              false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n              [\n                \"rolecards\"\n              ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n              \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n              app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n            );\n          }\n        },\n        {\n          \"Performing your Role\": () => {\n            let {\n              game: game,\n              game: {\n                choices: [card]\n              }\n            } = app.get();\n            if (game.stacks.pilecount[card.type] >= 1) {\n              if (card.type==\"producetrade\"){\n                game.players[app.get().game.acting_player_index].boostingicons[\n                  \"produce\"\n                ]++;\n                game.players[app.get().game.acting_player_index].boostingicons[\n                  \"trade\"\n                ]++;\n              }\n              else {\n                game.players[app.get().game.acting_player_index].boostingicons[\n                  card.type\n                ]++;\n              }\n              let newcard = Object.assign(\n                {\n                  identifier: app.generate_unique_identifier(),\n                  final_destination_label: \"discard\",\n                  selected: true\n                },\n                game.stacks.rolecards[game.stacks[card.type]]\n              );\n              game.players[app.get().game.acting_player_index].limbo.push(\n                newcard\n              );\n              game.stacks.pilecount[card.type]--;\n            } else if (card.type != \"colonize\") {\n              game.players[app.get().game.acting_player_index].boostingicons[\n                card.type\n              ]++;\n            }\n            game.players[app.get().game.acting_player_index].activerole =\n              card.type;\n            app.set({ game: game });\n            app.phasefinishfunction(true);\n          }\n        }\n      ]\n    },\n\n    // colonize : 5 (can conjoin to 4)\n    //     settle or colonize\n    //      -> choose planet\n    //         -> settle\n    //      -> choose planet\n    //         -> colonize\n    // producetrade : 5\n    //      produce or trade\n    //      -> select an empty productionzone\n    //          -> produce\n    //      -> select an occupied productionzone\n    //          -> trade\n    // research : 2\n    //      choose card(s) from hand\n    //      -> research\n    // survey : 1\n    //      -> survey\n    // warfare : 4\n    //      attack or collect\n    //          -> collect\n    //          -> choose planet\n    //              -> conquer\n    {\n      lead: [\n        {\n          \"Choose cards from your hand to Boost the effectiveness of your Role\": () => {\n            app.offer(\n              true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n              true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n              [\n                \"hand\"\n              ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n              \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n              app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n            );\n          }\n        },\n        {\n          \"Boosting your Role\": () => {\n            let {\n              game: game,\n              game: {\n                acting_player: player,\n                acting_player: { limbo: limbo, hand: hand },\n                choices: cards\n              }\n            } = app.get();\n            player = game.players[game.acting_player_index];\n            limbo = player.limbo;\n            hand = player.hand;\n            if (cards[0].name == \"Skip\") {\n              app.phasefinishfunction();\n            } else {\n              for (let i in cards) {\n                if (card.type==\"producetrade\"){\n                  player.boostingicons[\"trade\"]++;\n                  player.boostingicons[\"produce\"]++;\n                }\n                else {\n                  player.boostingicons[cards[i].type]++;\n                }\n                player.boostingicons[cards[i].type]++;\n                cards[i].final_destination_label='discard';\n                // check for permanent tech adaptability\n                // add one of each other icon to the player\n                // also change so that it will simply merge the card's icons with the player's, cuz this way doesnt count technology card's icons\n\n                //     limbo.push(\n                //         {'final_destination_label':'discard',\n                //         ...hand.filter(\n                //             (el)=>{return cards[i].identifier == el.identifier;}\n                //         )[0]\n                //         }\n                //     );\n                //     hand = hand.filter(\n                //         (el)=>{return cards[i].identifier != el.identifier}\n                //     );\n              }\n              player.hand = hand;\n              //TODO: tally up icons on planets\n              //TODO: tally up icons on technologies\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n\n        // #######################################################################################################################################################################################\n        // colonize : 5 (can conjoin to 4)\n        //     settle or colonize\n        //      -> choose planet\n        //         -> settle\n        //      -> choose planet\n        //         -> colonize\n        {\n          \"Choose between Settling or Colonizing a Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"Colonize\" }, { name: \"Settle Colonies\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose an Unsettled Planet to Settle\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\" ||\n              app.get().game.choices[0].name != \"Settle Colonies\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Settling your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\" ||\n              app.get().game.choices[0].name != \"Settle Colonies\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.settle_colonies(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              // check for permanent tech abundance\n              // change production slots to filled\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose an Unsettled Planet to Colonize\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\" ||\n              app.get().game.choices[0].name != \"Colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Colonizing your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\" ||\n              app.get().game.choices[0].name != \"Colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let j = 0;\n              let planet = app.get().game.subchoices[j];\n              for (\n                let i = 0;\n                i <\n                app.get().game.players[app.get().game.acting_player_index]\n                  .boostingicons.colonize;\n                i++\n              ) {\n                if (planet.hosted_colonies.length > 0) {\n                  if (\n                    planet.hosted_colonies.reduce((acc, cur) => {\n                      return acc + cur.icons.colonize;\n                    }) >= planet.settle_cost &&\n                    j < app.get().game.subchoices.length - 1\n                  ) {\n                    j++;\n                    planet = app.get().game.subchoices[j];\n                  }\n                }\n                app.colonize(\n                  planet,\n                  app.get().game.players[app.get().game.acting_player_index]\n                    .limbo,\n                  app\n                    .get()\n                    .game.players[\n                      app.get().game.acting_player_index\n                    ].limbo.filter(el => {\n                      return el.type == \"colonize\";\n                    })[0]\n                );\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // producetrade : 5\n        //      produce or trade\n        //      -> select an empty productionzone\n        //          -> produce\n        //      -> select an occupied productionzone\n        //          -> trade\n        {\n          \"Choose between Producing or Trading Resources\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"producetrade\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"produce\" }, { name: \"trade\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Produce Resources on\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"producetrade\" ||\n              app.get().game.choices[0].name != \"produce\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"settled_&_conquered_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Producing a Resource\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"producetrade\" ||\n              app.get().game.choices[0].name != \"produce\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              ///app.set( {'game': { 'acting_player':{ 'activerole':'produce' } , ...app.get().game} } )\n              let game = app.get().game;\n              game.players[app.get().game.acting_player_index].activerole =\n                \"produce\";\n              app.set({ game: game });\n              let prd = app.produce(\n                game.subchoices,\n                game.players[app.get().game.acting_player_index].boostingicons\n                  .produce\n              );\n              if (\n                (app.get().game.players[\n                  app.get().game.acting_player_index\n                ].activeaction = \"genetic_engineering\")\n              ) {\n                for (let i in prd) {\n                  if (prd[i] > 1) {\n                    players[j].influence.push(game.influence.pop());\n                  }\n                }\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Trade Resources from\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"producetrade\" ||\n              app.get().game.choices[0].name != \"trade\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"settled_&_conquered_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Trading a Resource\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"producetrade\" ||\n              app.get().game.choices[0].name != \"trade\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let game = app.get().game;\n              game.players[app.get().game.acting_player_index].activerole =\n                \"trade\";\n              app.set({ game: game });\n              let prd = app.trade(\n                game.subchoices,\n                game.players[app.get().game.acting_player_index],\n                game.players[app.get().game.acting_player_index].boostingicons\n                  .trade\n              );\n              if (\n                (app.get().game.players[\n                  app.get().game.acting_player_index\n                ].activeaction = \"diverse_markets\")\n              ) {\n                for (let i in prd) {\n                  if (prd[i] > 1) {\n                    app\n                      .get()\n                      .game.players[\n                        app.get().game.acting_player_index\n                      ].influence.push(app.get().game.influence.pop());\n                  }\n                }\n              }\n              if (\n                (app.get().game.players[\n                  app.get().game.acting_player_index\n                ].activeaction = \"specialization\")\n              ) {\n                for (let i in Array.from(\n                  prd[\n                    app.get().game.players[app.get().game.acting_player_index]\n                      .specialization\n                  ]\n                )) {\n                  app\n                    .get()\n                    .game.players[\n                      app.get().game.acting_player_index\n                    ].influence.push(app.get().game.influence.pop());\n                }\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // research : 2\n        //      choose technologies from market\n        //      -> research\n        {\n          \"Choose a Technology to Research\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"research\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"research\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Researching your Technology\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"research\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let game = app.get().game;\n              if (game.choices[0].name != \"Skip\") {\n                //TODO check research card requirements\n                //check for number of planets and type of planets\n                let p = { advanced: 0, metallic: 0, fertile: 0 };\n                [\n                  ...game.players[app.get().game.acting_player_index]\n                    .settled_planets,\n                  ...game.players[app.get().game.acting_player_index]\n                    .conquered_planets\n                ].map(el => {\n                  p[el.type]++;\n                });\n                let condition = true;\n                for (let i in game.choices[0].planet_requirements) {\n                  if (game.choices[0].planet_requirements[i] > p[i]) {\n                    condition = false;\n                  }\n                }\n                if (\n                  condition &&\n                  game.players[app.get().game.acting_player_index].boostingicons\n                    .research >= game.choices[0].research_cost\n                ) {\n                  if (game.choices[0].is_permanent) {\n                    app.play(\n                      game.research_deck,\n                      game.players[app.get().game.acting_player_index]\n                        .permanents,\n                      \"\",\n                      game.choices[0].identifier\n                    );\n                  } else {\n                    app.play(\n                      game.research_deck,\n                      game.players[app.get().game.acting_player_index].limbo,\n                      \"discard\",\n                      game.choices[0].identifier\n                    );\n                  }\n                }\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // survey : 2\n        //      choose planet\n        //      -> survey\n        {\n          \"Choose a Planet from your Galaxy to Explore\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"survey\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let game = app.get().game;\n              //survey_role purchase, offer_to_boost explore_planet, present_as_choice, choose, catalog_planet, discard\n              for (\n                let i = 0;\n                i <\n                app.get().game.players[app.get().game.acting_player_index]\n                  .boostingicons.survey;\n                i++\n              ) {\n                app.explore_planet(\n                  game.players[app.get().game.acting_player_index]\n                );\n              }\n              app.set({ game: game });\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  app.get().game.options\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Surveying your Empire\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"survey\" ||\n              app.get().game.choices[0].name == \"Skip\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.catalog_planet(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // warfare : 4\n        //      attack or collect\n        //          -> collect\n        //          -> choose planet\n        //              -> conquer\n        {\n          \"Choose between Collecting Starfighters or Conquering a Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"warfare\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [\n                    { name: \"Conquer a Planet\" },\n                    { name: \"Collect Starfighters\" }\n                  ]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Adding Starfighters to your Fleet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"warfare\" ||\n              app.get().game.choices[0].name != \"Collect Starfighters\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              for (\n                let i = 0;\n                i <\n                app.get().game.players[app.get().game.acting_player_index]\n                  .boostingicons.warfare;\n                i++\n              ) {\n                app.warfare(\n                  app.get().game.players[app.get().game.acting_player_index]\n                );\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Conquer\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"warfare\" ||\n              app.get().game.choices[0].name != \"Conquer a Planet\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Conquering your planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"warfare\" ||\n              app.get().game.choices[0].name != \"Conquer a Planet\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.conquer(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Pass the device to the Next Player\": () => {\n            let game = app.get().game;\n            game.displayinfo.selectionzone = \"\";\n            game.passp = true;\n            app.set({ game: game });\n          }\n        },\n        {\n          \"You passed Priority\": () => {\n            let game = app.get().game;\n            //app.togglepasstoplayer();\n            game.passp = false;\n            app.set({ game: game });\n            app.phasefinishfunction(true);\n          }\n        }\n      ]\n    },\n\n    // dissent : 2\n    //      choose between dissent or follow\n    //      -> dissent\n    //      -> follow\n    // boosting cards :2\n    //      choose card(s) from hand to boost with\n    //      -> boost role\n    // action name : total subphases\n    // colonize : 5 (can conjoin to 4)\n    //     settle or colonize\n    //      -> choose planet\n    //         -> settle\n    //      -> choose planet\n    //         -> colonize for each symbol\n    // produce : 2\n    //      -> select an empty productionzone for each symbol\n    //          -> produce\n    // trade : 2\n    //      -> select an occupied productionzone for each symbol\n    //          -> trade\n    // research : 2\n    //      choose card from research pile\n    //      -> choose side (situational)\n    //          -> research\n    // survey : 1\n    //      -> explore for each symbol\n    //      choose planet\n    //      -> survey\n    // warfare : 4\n    //      attack or collect\n    //          -> collect fighter for each symbols\n    //          -> choose planet\n    //              -> conquer\n    {\n      follow: [\n        {\n          \"Choose between Following or Dissent the Leading Role\": () => {\n            app.offer(\n              false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n              false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n              [\n                \"options\",\n                [\n                  { name: \"dissent\" },\n                  {\n                    name: app.get().game.players[\n                      app.get().game.leading_player_index\n                    ].activerole\n                  }\n                ]\n              ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n              \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n              app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n            );\n          }\n        },\n        {\n          Dissenting: () => {\n            let game = app.get().game;\n            game.players[game.acting_player_index].activerole =\n              game.choices[0].name;\n            app.set({ game: game });\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"dissent\"\n            ) {\n              let {\n                game: game,\n                game: {\n                  choices: [card]\n                }\n              } = app.get();\n              if (game.stacks.pilecount[card.name] >= 1) {\n                game.players[app.get().game.acting_player_index].boostingicons[\n                  card.name\n                ]++;\n                let newcard = Object.assign(\n                  {\n                    identifier: app.generate_unique_identifier(),\n                    final_destination_label: \"discard\",\n                    selected: true\n                  },\n                  game.stacks.rolecards[game.stacks[card.name]]\n                );\n                game.players[app.get().game.acting_player_index].limbo.push(\n                  newcard\n                );\n                game.stacks.pilecount[card.name]--;\n              } else if (card.name != \"colonize\") {\n                game.players[game.acting_player_index].boostingicons[\n                  card.name\n                ]++;\n              }\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            } else {\n              app.draw(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              if (\n                app\n                  .get()\n                  .game.players[\n                    app.get().game.acting_player_index\n                  ].permanents.filter(el => {\n                    return el.type == \"dissension\";\n                  }).length != 0\n              ) {\n                app.draw(\n                  app.get().game.players[app.get().game.acting_player_index]\n                );\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        }, //will auto pass to next phase if follow has been selected\n        {\n          \"Choose cards from your hand to Boost the effectiveness of your Role\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole == \"dissent\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"hand\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Boosting your Role\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole == \"dissent\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let {\n                game: game,\n                game: {\n                  acting_player: player,\n                  acting_player: { limbo: limbo, hand: hand },\n                  choices: cards\n                }\n              } = app.get();\n              player = game.players[game.acting_player_index];\n              limbo = player.limbo;\n              hand = player.hand;\n              if (cards[0].name == \"Skip\") {\n                app.phasefinishfunction();\n              } else {\n                for (let i in cards) {\n                  if (card.type==\"producetrade\"){\n                    player.boostingicons[\"trade\"]++;\n                    player.boostingicons[\"produce\"]++;\n                  }\n                  else {\n                    player.boostingicons[cards[i].type]++;\n                  }\n                  // check for permanent tech adaptability\n                  // add one of each other icon to the player\n                  // also change so that it will simply merge the card's icons with the player's, cuz this way doesnt count technology card's icons\n\n                  // limbo.push(\n                  //     {'final_destination_label':'discard',\n                  //     ...hand.filter(\n                  //         (el)=>{return cards[i].identifier == el.identifier;}\n                  //     )[0]\n                  //     }\n                  // );\n                  // hand = hand.filter(\n                  //     (el)=>{return cards[i].identifier != el.identifier}\n                  // );\n                }\n                player.hand = hand;\n                //TODO: tally up icons on planets\n                //TODO: tally up icons on technologies\n                app.set({ game: game });\n                app.phasefinishfunction(true);\n              }\n            }\n          }\n        },\n\n        // #######################################################################################################################################################################################\n        // colonize : 5 (can conjoin to 4)\n        //     settle or colonize\n        //      -> choose planet\n        //         -> settle\n        //      -> choose planet\n        //         -> colonize\n        {\n          \"Choose between Settling or Colonizing a Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"bureaucracy\";\n                }).length == 0\n            ) {\n              let game = app.get().game;\n              game.choices = [{ name: \"Colonize\" }];\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"Colonize\" }, { name: \"Settle Colonies\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose an Unsettled Planet to Settle\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\" ||\n              app.get().game.choices[0].name != \"Settle Colonies\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Settling your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\" ||\n              app.get().game.choices[0].name != \"Settle Colonies\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.settle_colonies(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              // check for permanent tech abundance\n              // change production slots to filled\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose an Unsettled Planet to Colonize\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\" ||\n              app.get().game.choices[0].name != \"Colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Colonizing your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"colonize\" ||\n              app.get().game.choices[0].name != \"Colonize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let j = 0;\n              let planet = app.get().game.subchoices[j];\n              for (\n                let i = 0;\n                i <\n                app.get().game.players[app.get().game.acting_player_index]\n                  .boostingicons.colonize;\n                i++\n              ) {\n                if (planet.hosted_colonies.length > 0) {\n                  if (\n                    planet.hosted_colonies.reduce((acc, cur) => {\n                      acc + cur.icons.colonize;\n                    }) >= planet.settle_cost &&\n                    j < app.get().game.subchoices.length - 1\n                  ) {\n                    j++;\n                    planet = app.get().game.subchoices[j];\n                  }\n                }\n                app.colonize(\n                  planet,\n                  app.get().game.players[app.get().game.acting_player_index]\n                    .limbo,\n                  app\n                    .get()\n                    .game.players[\n                      app.get().game.acting_player_index\n                    ].limbo.filter(el => {\n                      return el.type == \"colonize\";\n                    })[0]\n                );\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // producetrade : 5\n        //      produce or trade\n        //      -> select an empty productionzone\n        //          -> produce\n        //      -> select an occupied productionzone\n        //          -> trade\n        {\n          \"Choose a Planet to Produce Resources on\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"produce\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"settled_&_conquered_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Producing a Resource\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"produce\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              ///app.set( {'game': { 'acting_player':{ 'activerole':'produce' } , ...app.get().game} } )\n              let game = app.get().game;\n              game.players[app.get().game.acting_player_index].activerole =\n                \"produce\";\n              app.set({ game: game });\n              app.produce(\n                game.subchoices,\n                game.players[app.get().game.acting_player_index].boostingicons\n                  .produce\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Trade Resources from\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"trade\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"settled_&_conquered_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Trading a Resource\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"trade\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let game = app.get().game;\n              game.players[app.get().game.acting_player_index].activerole =\n                \"trade\";\n              app.set({ game: game });\n              app.trade(\n                game.subchoices,\n                game.players[app.get().game.acting_player_index],\n                game.players[app.get().game.acting_player_index].boostingicons\n                  .trade\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // research : 2\n        //      choose technologies from market\n        //      -> research\n        {\n          \"Choose a Technology to Research\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"research\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"research\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Researching your Technology\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"survey\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let game = app.get().game;\n              if (game.choices[0].name != \"Skip\") {\n                let p = { advanced: 0, metallic: 0, fertile: 0 };\n                [\n                  ...game.players[app.get().game.acting_player_index]\n                    .settled_planets,\n                  ...game.players[app.get().game.acting_player_index]\n                    .conquered_planets\n                ].map(el => {\n                  p[el.type]++;\n                });\n                let condition = true;\n                for (let i in game.choices[0].planet_requirements) {\n                  if (game.choices[0].planet_requirements[i] > p[i]) {\n                    condition = false;\n                  }\n                }\n                if (\n                  condition &&\n                  game.players[app.get().game.acting_player_index].boostingicons\n                    .research >= game.choices[0].research_cost\n                ) {\n                  app.play(\n                    game.research_deck,\n                    game.players[app.get().game.acting_player_index].limbo,\n                    \"discard\",\n                    game.choices[0].identifier\n                  );\n                }\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // survey : 2\n        //      choose planet\n        //      -> survey\n        {\n          \"Choose a Planet from your Galaxy to Explore\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"survey\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              let game = app.get().game;\n              //survey_role purchase, offer_to_boost explore_planet, present_as_choice, choose, catalog_planet, discard\n              for (\n                let i = 0;\n                i <\n                game.players[app.get().game.acting_player_index].boostingicons\n                  .survey -\n                  1;\n                i++\n              ) {\n                app.explore_planet(\n                  game.players[app.get().game.acting_player_index]\n                );\n              }\n              app.set({ game: game });\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Surveying your Empire\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"survey\" ||\n              app.get().game.choices[0].name == \"Skip\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.catalog_planet(\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        // #######################################################################################################################################################################################\n        // warfare : 4\n        //      attack or collect\n        //          -> collect\n        //          -> choose planet\n        //              -> conquer\n        {\n          \"Choose between Collecting Starfighters or Conquering a Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"warfare\"\n            ) {\n              app.phasefinishfunction();\n            } else if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"bureaucracy\";\n                }).length == 0\n            ) {\n              let game = app.get().game;\n              game.choices = [{ name: \"Collect Starfighters\" }];\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [\n                    { name: \"Conquer a Planet\" },\n                    { name: \"Collect Starfighters\" }\n                  ]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Adding Starfighters to your Fleet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"warfare\" ||\n              app.get().game.choices[0].name != \"Collect Starfighters\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              for (\n                let i = 0;\n                i <\n                app.get().game.players[app.get().game.acting_player_index]\n                  .boostingicons.warfare;\n                i++\n              ) {\n                app.warfare(\n                  app.get().game.players[app.get().game.acting_player_index]\n                );\n              }\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Conquer\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"warfare\" ||\n              app.get().game.choices[0].name != \"Conquer a Planet\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Conquering your planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activerole != \"warfare\" ||\n              app.get().game.choices[0].name != \"Conquer a Planet\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.conquer(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Pass the device to the Next Player\": () => {\n            let game = app.get().game;\n            game.displayinfo.selectionzone = \"\";\n            game.passp = true;\n            app.set({ game: game });\n          }\n        },\n        {\n          \"You passed Priority\": () => {\n            let game = app.get().game;\n            game.passp = false;\n            app.set({ game: game });\n            app.phasefinishfunction(true);\n          }\n        }\n      ]\n    },\n\n    //discard : 2\n    //  select card(s) from hand\n    //  -> discard\n    {\n      discard: [\n        {\n          \"Would you like to Mobilize against a Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"mobilization\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"mobilize\" }, { name: \"skip\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose a Planet to Mobilize Against\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"mobilization\" ||\n              app.get().game.choices[0].name != \"mobilize\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"unsettled_planets\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Mobalizing against your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"mobilization\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.conquer(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Mobalizing against your Planet\": () => {\n            if (\n              app.get().game.players[app.get().game.acting_player_index]\n                .activeaction != \"mobilization\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.conquer(\n                app.get().game.subchoices[0],\n                app.get().game.players[app.get().game.acting_player_index]\n              );\n              app.phasefinishfunction(true);\n            }\n          }\n        },\n        {\n          \"Would you like to Streamline Your Empire\": () => {\n            if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"streamlining\";\n                }).length == 0\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"Decline\" }, { name: \"Streamline Empire\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose a Card from Your Hand to Remove from the Game\": () => {\n            if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"streamlining\";\n                }).length == 0 ||\n              app.get().game.choices[0].name != \"Streamline Empire\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"hand\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Streamlining Your Empire\": () => {\n            if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"streamlining\";\n                }).length == 0 ||\n              app.get().game.choices[0].name != \"Streamline Empire\" ||\n              app.get().game.choices[0].name == \"Skip\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.research(\n                app.get().game.choices,\n                app.get().game.players[app.get().game.acting_player_index],\n                1\n              );\n            }\n          }\n        },\n        {\n          \"Would you like to Utilize Your Empire's Hyperefficiency\": () => {\n            if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"hyperefficiency\";\n                }).length == 0\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"options\",\n                  [{ name: \"Decline\" }, { name: \"Utilize Hyperefficiency\" }]\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Choose a Card from Your Hand to Remove from the Game\": () => {\n            if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"hyperefficiency\";\n                }).length == 0 ||\n              app.get().game.choices[0].name != \"Utilize Hyperefficiency\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.offer(\n                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n                [\n                  \"hand\"\n                ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n                \"subchoices\" /* label for where the choice is stored | set with game[label]=*/,\n                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n              );\n            }\n          }\n        },\n        {\n          \"Your Empire is Hyperefficient\": () => {\n            if (\n              app\n                .get()\n                .game.players[\n                  app.get().game.acting_player_index\n                ].permanents.filter(el => {\n                  return el.type == \"hyperefficiency\";\n                }).length == 0 ||\n              app.get().game.choices[0].name != \"Utilize Hyperefficiency\" ||\n              app.get().game.choices[0].name == \"Skip\"\n            ) {\n              app.phasefinishfunction();\n            } else {\n              app.research(\n                app.get().game.choices,\n                app.get().game.players[app.get().game.acting_player_index],\n                app.get().game.choices.length\n              );\n            }\n          }\n        },\n        {\n          \"Choose any Cards you would like to Discard\": () => {\n            app.offer(\n              true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n              true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */,\n              [\n                \"hand\"\n              ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/,\n              \"choices\" /* label for where the choice is stored | set with game[label]=*/,\n              app.phasefinishfunction /*callback that handles the choice or finishes the phase*/\n            );\n          }\n        },\n        {\n          \"Discarding your Selected Cards\": () => {\n            if (app.get().game.choices[0].name == \"Skip\") {\n              app.phasefinishfunction();\n            } else {\n              let game = app.get().game;\n              for (let i in game.choices) {\n                // obsolete after drag and dop additions game.players[app.get().game.acting_player_index].hand = game.players[app.get().game.acting_player_index].hand.filter((el)=>{return el.identifier != game.choices[i].identifier});\n                game.players[app.get().game.acting_player_index].discard.push(\n                  game.choices[i]\n                );\n              }\n              app.set({ game: game });\n              app.phasefinishfunction(true);\n            }\n          }\n        }\n      ]\n    },\n    //cleanup : 1\n    //  -> cleanup\n    {\n      cleanup: [\n        {\n          \"Drawing up to your Hand Size\": () => {\n            app.cleanup();\n            let game = app.get().game;\n            let handsize =\n              game.players[app.get().game.acting_player_index].handsize;\n            for (let index in game.players[app.get().game.acting_player_index]\n              .settled_planets) {\n              handsize +=\n                game.players[app.get().game.acting_player_index]\n                  .settled_planets[index].handsize_modifier;\n            }\n            for (let index in game.players[app.get().game.acting_player_index]\n              .conquered_planets) {\n              handsize +=\n                game.players[app.get().game.acting_player_index]\n                  .conquered_planets[index].handsize_modifier;\n            }\n            let l =\n              game.players[app.get().game.acting_player_index].hand.length;\n            if (l < handsize) {\n              app.draw(\n                game.players[app.get().game.acting_player_index],\n                handsize - l\n              );\n            }\n            for (let i in game.players) {\n              game.players[i].boostingicons = {\n                survey: 0,\n                warfare: 0,\n                colonize: 0,\n                produce: 0,\n                trade: 0,\n                research: 0\n              };\n            }\n            if (\n              app.get().game.started &&\n              app.checkforendgame() &&\n              game.players.reduce((t, p) => {\n                return t + p.rounds;\n              }, 0) %\n                game.number_of_players ==\n                0\n            ) {\n              app.totalinfluence();\n              game.nextphase = app.endgame;\n            }\n            app.set({ game: game });\n            app.phasefinishfunction(true);\n          }\n        },\n        {\n          \"Pass the device to the Next Player\": () => {\n            let game = app.get().game;\n            game.displayinfo.selectionzone = \"\";\n            game.displayinfo.showoptiontoskip = false;\n            game.displayinfo.allowformultipleselections = false;\n            game.passp = false;\n            game.passt = true;\n            app.set({ game: game });\n          }\n        },\n        {\n          \"You passed the Turn\": () => {\n            let game = app.get().game;\n            //app.togglepasstoplayer();\n            game.passt = false;\n            app.set({ game: game });\n            app.phasefinishfunction(true);\n          }\n        }\n      ]\n    }\n  ],\n  players: [],\n  winner: false,\n  stacks: {\n    pilecount: {\n      research: 20,\n      producetrade: 16,\n      colonize: 20,\n      warfare: 16,\n      survey: 20\n    },\n    survey: 0,\n    warfare: 1,\n    colonize: 2,\n    producetrade: 3,\n    research: 4,\n    rolecards: [\n      {\n        type: \"survey\",\n        selected: false,\n        icons: {\n          survey: 1,\n          warfare: 0,\n          colonize: 0,\n          produce: 0,\n          trade: 0,\n          research: 0\n        },\n        name: \"Survey\",\n        image: null\n      },\n      {\n        type: \"warfare\",\n        selected: false,\n        icons: {\n          survey: 0,\n          warfare: 1,\n          colonize: 0,\n          produce: 0,\n          trade: 0,\n          research: 0\n        },\n        name: \"Warfare\",\n        image: null\n      },\n      {\n        type: \"colonize\",\n        selected: false,\n        icons: {\n          survey: 0,\n          warfare: 0,\n          colonize: 1,\n          produce: 0,\n          trade: 0,\n          research: 0\n        },\n        name: \"Colonize\",\n        image: null\n      },\n      {\n        type: \"producetrade\",\n        selected: false,\n        icons: {\n          survey: 0,\n          warfare: 0,\n          colonize: 0,\n          produce: 1,\n          trade: 1,\n          research: 0\n        },\n        name: \"Produce / Trade\",\n        image: null\n      },\n      {\n        type: \"research\",\n        selected: false,\n        icons: {\n          survey: 0,\n          warfare: 0,\n          colonize: 0,\n          produce: 0,\n          trade: 0,\n          research: 1\n        },\n        name: \"Research\",\n        image: null,\n        research_deck: []\n      }\n    ]\n  }\n};\n//let url = 'ws://temperate-isle.herokuapp.com:3030';\nlet url = location.origin.replace(/^http/, \"ws\"); //'ws://192.168.1.6:3030';\nlet lobby = {\n  screenname: \"\",\n  url: url,\n  sets: [\"Base Game\"],\n  number_of_players: [2, 3, 4],\n  existinggames: []\n};\n\ngame.nonce = nonce;\nconst app = new App({\n  target: document.body,\n  data: {\n    lobby: lobby,\n    game: game,\n    phases: game.gamephases\n  }\n});\nexport default app;\n"],"names":["app"],"mappings":"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"}