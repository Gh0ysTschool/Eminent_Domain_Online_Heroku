{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/shared.js","../src/App.html","../src/main.js"],"sourcesContent":["function noop() {}\n\nfunction assign(tar, src) {\n\tfor (var k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction assignTrue(tar, src) {\n\tfor (var k in src) tar[k] = 1;\n\treturn tar;\n}\n\nfunction isPromise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nfunction callAfter(fn, i) {\n\tif (i === 0) fn();\n\treturn () => {\n\t\tif (!--i) fn();\n\t};\n}\n\nfunction addLoc(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nfunction exclude(src, prop) {\n\tconst tar = {};\n\tfor (const k in src) k === prop || (tar[k] = src[k]);\n\treturn tar;\n}\n\nfunction run(fn) {\n\tfn();\n}\n\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor);\n}\n\nfunction detachNode(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detachBetween(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detachBefore(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detachAfter(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction reinsertBetween(before, after, target) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\ttarget.appendChild(before.parentNode.removeChild(before.nextSibling));\n\t}\n}\n\nfunction reinsertChildren(parent, target) {\n\twhile (parent.firstChild) target.appendChild(parent.firstChild);\n}\n\nfunction reinsertAfter(before, target) {\n\twhile (before.nextSibling) target.appendChild(before.nextSibling);\n}\n\nfunction reinsertBefore(after, target) {\n\tvar parent = after.parentNode;\n\twhile (parent.firstChild !== after) target.appendChild(parent.firstChild);\n}\n\nfunction destroyEach(iterations, detach) {\n\tfor (var i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detach);\n\t}\n}\n\nfunction createFragment() {\n\treturn document.createDocumentFragment();\n}\n\nfunction createElement(name) {\n\treturn document.createElement(name);\n}\n\nfunction createSvgElement(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction createText(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction createComment() {\n\treturn document.createComment('');\n}\n\nfunction addListener(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n}\n\nfunction removeListener(node, event, handler, options) {\n\tnode.removeEventListener(event, handler, options);\n}\n\nfunction setAttribute(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse node.setAttribute(attribute, value);\n}\n\nfunction setAttributes(node, attributes) {\n\tfor (var key in attributes) {\n\t\tif (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tsetAttribute(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction setCustomElementData(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = value;\n\t} else {\n\t\tsetAttribute(node, prop, value);\n\t}\n}\n\nfunction setXlinkAttribute(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction getBindingGroupValue(group) {\n\tvar value = [];\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction toNumber(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction timeRangesToArray(ranges) {\n\tvar array = [];\n\tfor (var i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children (element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claimElement (nodes, name, attributes, svg) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (var j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tvar attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? createSvgElement(name) : createElement(name);\n}\n\nfunction claimText (nodes, data) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn createText(data);\n}\n\nfunction setData(text, data) {\n\ttext.data = '' + data;\n}\n\nfunction setInputType(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {}\n}\n\nfunction setStyle(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction selectOption(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction selectOptions(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction selectValue(select) {\n\tvar selectedOption = select.querySelector(':checked') || select.options[0];\n\treturn selectedOption && selectedOption.__value;\n}\n\nfunction selectMultipleValue(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), function(option) {\n\t\treturn option.__value;\n\t});\n}\n\nfunction addResizeListener(element, fn) {\n\tif (getComputedStyle(element).position === 'static') {\n\t\telement.style.position = 'relative';\n\t}\n\n\tconst object = document.createElement('object');\n\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\tobject.type = 'text/html';\n\n\tlet win;\n\n\tobject.onload = () => {\n\t\twin = object.contentDocument.defaultView;\n\t\twin.addEventListener('resize', fn);\n\t};\n\n\tif (/Trident/.test(navigator.userAgent)) {\n\t\telement.appendChild(object);\n\t\tobject.data = 'about:blank';\n\t} else {\n\t\tobject.data = 'about:blank';\n\t\telement.appendChild(object);\n\t}\n\n\treturn {\n\t\tcancel: () => {\n\t\t\twin && win.removeEventListener && win.removeEventListener('resize', fn);\n\t\t\telement.removeChild(object);\n\t\t}\n\t};\n}\n\nfunction toggleClass(element, name, toggle) {\n\telement.classList[toggle ? 'add' : 'remove'](name);\n}\n\nfunction linear(t) {\n\treturn t;\n}\n\nfunction generateRule({ a, b, delta, duration }, ease, fn) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + delta * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\n\treturn keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n}\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction wrapTransition(component, node, fn, params, intro) {\n\tlet obj = fn.call(component, node, params);\n\tlet duration;\n\tlet ease;\n\tlet cssText;\n\n\tlet initialised = false;\n\n\treturn {\n\t\tt: intro ? 0 : 1,\n\t\trunning: false,\n\t\tprogram: null,\n\t\tpending: null,\n\n\t\trun(b, callback) {\n\t\t\tif (typeof obj === 'function') {\n\t\t\t\ttransitionManager.wait().then(() => {\n\t\t\t\t\tobj = obj();\n\t\t\t\t\tthis._run(b, callback);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._run(b, callback);\n\t\t\t}\n\t\t},\n\n\t\t_run(b, callback) {\n\t\t\tduration = obj.duration || 300;\n\t\t\tease = obj.easing || linear;\n\n\t\t\tconst program = {\n\t\t\t\tstart: window.performance.now() + (obj.delay || 0),\n\t\t\t\tb,\n\t\t\t\tcallback: callback || noop\n\t\t\t};\n\n\t\t\tif (intro && !initialised) {\n\t\t\t\tif (obj.css && obj.delay) {\n\t\t\t\t\tcssText = node.style.cssText;\n\t\t\t\t\tnode.style.cssText += obj.css(0, 1);\n\t\t\t\t}\n\n\t\t\t\tif (obj.tick) obj.tick(0, 1);\n\t\t\t\tinitialised = true;\n\t\t\t}\n\n\t\t\tif (!b) {\n\t\t\t\tprogram.group = outros.current;\n\t\t\t\toutros.current.remaining += 1;\n\t\t\t}\n\n\t\t\tif (obj.delay) {\n\t\t\t\tthis.pending = program;\n\t\t\t} else {\n\t\t\t\tthis.start(program);\n\t\t\t}\n\n\t\t\tif (!this.running) {\n\t\t\t\tthis.running = true;\n\t\t\t\ttransitionManager.add(this);\n\t\t\t}\n\t\t},\n\n\t\tstart(program) {\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.start`, { node });\n\n\t\t\tprogram.a = this.t;\n\t\t\tprogram.delta = program.b - program.a;\n\t\t\tprogram.duration = duration * Math.abs(program.b - program.a);\n\t\t\tprogram.end = program.start + program.duration;\n\n\t\t\tif (obj.css) {\n\t\t\t\tif (obj.delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, obj.css);\n\t\t\t\ttransitionManager.addRule(rule, program.name = '__svelte_' + hash(rule));\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tthis.program = program;\n\t\t\tthis.pending = null;\n\t\t},\n\n\t\tupdate(now) {\n\t\t\tconst program = this.program;\n\t\t\tif (!program) return;\n\n\t\t\tconst p = now - program.start;\n\t\t\tthis.t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\t\t},\n\n\t\tdone() {\n\t\t\tconst program = this.program;\n\t\t\tthis.t = program.b;\n\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.end`, { node });\n\n\t\t\tif (!program.b && !program.invalidated) {\n\t\t\t\tprogram.group.callbacks.push(() => {\n\t\t\t\t\tprogram.callback();\n\t\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t\t});\n\n\t\t\t\tif (--program.group.remaining === 0) {\n\t\t\t\t\tprogram.group.callbacks.forEach(run);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t}\n\n\t\t\tthis.running = !!this.pending;\n\t\t},\n\n\t\tabort(reset) {\n\t\t\tif (this.program) {\n\t\t\t\tif (reset && obj.tick) obj.tick(1, 0);\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, this.program.name);\n\t\t\t\tthis.program = this.pending = null;\n\t\t\t\tthis.running = false;\n\t\t\t}\n\t\t},\n\n\t\tinvalidate() {\n\t\t\tif (this.program) {\n\t\t\t\tthis.program.invalidated = true;\n\t\t\t}\n\t\t}\n\t};\n}\n\nlet outros = {};\n\nfunction groupOutros() {\n\toutros.current = {\n\t\tremaining: 0,\n\t\tcallbacks: []\n\t};\n}\n\nvar transitionManager = {\n\trunning: false,\n\ttransitions: [],\n\tbound: null,\n\tstylesheet: null,\n\tactiveRules: {},\n\tpromise: null,\n\n\tadd(transition) {\n\t\tthis.transitions.push(transition);\n\n\t\tif (!this.running) {\n\t\t\tthis.running = true;\n\t\t\trequestAnimationFrame(this.bound || (this.bound = this.next.bind(this)));\n\t\t}\n\t},\n\n\taddRule(rule, name) {\n\t\tif (!this.stylesheet) {\n\t\t\tconst style = createElement('style');\n\t\t\tdocument.head.appendChild(style);\n\t\t\ttransitionManager.stylesheet = style.sheet;\n\t\t}\n\n\t\tif (!this.activeRules[name]) {\n\t\t\tthis.activeRules[name] = true;\n\t\t\tthis.stylesheet.insertRule(`@keyframes ${name} ${rule}`, this.stylesheet.cssRules.length);\n\t\t}\n\t},\n\n\tnext() {\n\t\tthis.running = false;\n\n\t\tconst now = window.performance.now();\n\t\tlet i = this.transitions.length;\n\n\t\twhile (i--) {\n\t\t\tconst transition = this.transitions[i];\n\n\t\t\tif (transition.program && now >= transition.program.end) {\n\t\t\t\ttransition.done();\n\t\t\t}\n\n\t\t\tif (transition.pending && now >= transition.pending.start) {\n\t\t\t\ttransition.start(transition.pending);\n\t\t\t}\n\n\t\t\tif (transition.running) {\n\t\t\t\ttransition.update(now);\n\t\t\t\tthis.running = true;\n\t\t\t} else if (!transition.pending) {\n\t\t\t\tthis.transitions.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (this.running) {\n\t\t\trequestAnimationFrame(this.bound);\n\t\t} else if (this.stylesheet) {\n\t\t\tlet i = this.stylesheet.cssRules.length;\n\t\t\twhile (i--) this.stylesheet.deleteRule(i);\n\t\t\tthis.activeRules = {};\n\t\t}\n\t},\n\n\tdeleteRule(node, name) {\n\t\tnode.style.animation = node.style.animation\n\t\t\t.split(', ')\n\t\t\t.filter(anim => anim && anim.indexOf(name) === -1)\n\t\t\t.join(', ');\n\t},\n\n\twait() {\n\t\tif (!transitionManager.promise) {\n\t\t\ttransitionManager.promise = Promise.resolve();\n\t\t\ttransitionManager.promise.then(() => {\n\t\t\t\ttransitionManager.promise = null;\n\t\t\t});\n\t\t}\n\n\t\treturn transitionManager.promise;\n\t}\n};\n\nfunction wrapAnimation(node, from, fn, params) {\n\tif (!from) return;\n\n\tconst to = node.getBoundingClientRect();\n\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return;\n\n\tconst info = fn(node, { from, to }, params);\n\n\tconst duration = 'duration' in info ? info.duration : 300;\n\tconst delay = 'delay' in info ? info.delay : 0;\n\tconst ease = info.easing || linear;\n\tconst start = window.performance.now() + delay;\n\tconst end = start + duration;\n\n\tconst program = {\n\t\ta: 0,\n\t\tt: 0,\n\t\tb: 1,\n\t\tdelta: 1,\n\t\tduration,\n\t\tstart,\n\t\tend\n\t};\n\n\tconst cssText = node.style.cssText;\n\n\tconst animation = {\n\t\tpending: delay ? program : null,\n\t\tprogram: delay ? null : program,\n\t\trunning: true,\n\n\t\tstart() {\n\t\t\tif (info.css) {\n\t\t\t\tif (delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, info.css);\n\t\t\t\tprogram.name = `__svelte_${hash(rule)}`;\n\n\t\t\t\ttransitionManager.addRule(rule, program.name);\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tanimation.program = program;\n\t\t\tanimation.pending = null;\n\t\t},\n\n\t\tupdate: now => {\n\t\t\tconst p = now - program.start;\n\t\t\tconst t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (info.tick) info.tick(t, 1 - t);\n\t\t},\n\n\t\tdone() {\n\t\t\tif (info.tick) info.tick(1, 0);\n\t\t\tanimation.stop();\n\t\t},\n\n\t\tstop() {\n\t\t\tif (info.css) transitionManager.deleteRule(node, program.name);\n\t\t\tanimation.running = false;\n\t\t}\n\t};\n\n\ttransitionManager.add(animation);\n\n\tif (info.tick) info.tick(0, 1);\n\n\tif (delay) {\n\t\tif (info.css) node.style.cssText += info.css(0, 1);\n\t} else {\n\t\tanimation.start();\n\t}\n\n\treturn animation;\n}\n\nfunction fixPosition(node) {\n\tconst style = getComputedStyle(node);\n\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tconst b = node.getBoundingClientRect();\n\n\t\tif (a.left !== b.left || a.top !== b.top) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t\t}\n\t}\n}\n\nfunction handlePromise(promise, info) {\n\tvar token = info.token = {};\n\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\n\t\tinfo.resolved = key && { [key]: value };\n\n\t\tconst child_ctx = assign(assign({}, info.ctx), info.resolved);\n\t\tconst block = type && (info.current = type)(info.component, child_ctx);\n\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroupOutros();\n\t\t\t\t\t\tblock.o(() => {\n\t\t\t\t\t\t\tblock.d(1);\n\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\n\t\t\tblock.c();\n\t\t\tblock[block.i ? 'i' : 'm'](info.mount(), info.anchor);\n\n\t\t\tinfo.component.root.set({}); // flush any handlers that were created\n\t\t}\n\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t}\n\n\tif (isPromise(promise)) {\n\t\tpromise.then(value => {\n\t\t\tupdate(info.then, 1, info.value, value);\n\t\t}, error => {\n\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t});\n\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\n\t\tinfo.resolved = { [info.value]: promise };\n\t}\n}\n\nfunction destroyBlock(block, lookup) {\n\tblock.d(1);\n\tlookup[block.key] = null;\n}\n\nfunction outroAndDestroyBlock(block, lookup) {\n\tblock.o(function() {\n\t\tdestroyBlock(block, lookup);\n\t});\n}\n\nfunction fixAndOutroAndDestroyBlock(block, lookup) {\n\tblock.f();\n\toutroAndDestroyBlock(block, lookup);\n}\n\nfunction updateKeyedEach(old_blocks, component, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, intro_method, next, get_context) {\n\tvar o = old_blocks.length;\n\tvar n = list.length;\n\n\tvar i = o;\n\tvar old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tvar new_blocks = [];\n\tvar new_lookup = {};\n\tvar deltas = {};\n\n\tvar i = n;\n\twhile (i--) {\n\t\tvar child_ctx = get_context(ctx, list, i);\n\t\tvar key = get_key(child_ctx);\n\t\tvar block = lookup[key];\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(component, key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, child_ctx);\n\t\t}\n\n\t\tnew_blocks[i] = new_lookup[key] = block;\n\n\t\tif (key in old_indexes) deltas[key] = Math.abs(i - old_indexes[key]);\n\t}\n\n\tvar will_move = {};\n\tvar did_move = {};\n\n\tfunction insert(block) {\n\t\tblock[intro_method](node, next);\n\t\tlookup[block.key] = block;\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tvar new_block = new_blocks[n - 1];\n\t\tvar old_block = old_blocks[o - 1];\n\t\tvar new_key = new_block.key;\n\t\tvar old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup[old_key]) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup[new_key] || will_move[new_key]) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move[old_key]) {\n\t\t\to--;\n\n\t\t} else if (deltas[new_key] > deltas[old_key]) {\n\t\t\tdid_move[new_key] = true;\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move[old_key] = true;\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tvar old_block = old_blocks[o];\n\t\tif (!new_lookup[old_block.key]) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction measure(blocks) {\n\tconst rects = {};\n\tlet i = blocks.length;\n\twhile (i--) rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n\treturn rects;\n}\n\nfunction animate(blocks, rects, fn, params) {\n\tlet i = blocks.length;\n\twhile (i--) {\n\t\tconst block = blocks[i];\n\t\tconst from = rects[block.key];\n\n\t\tif (!from) continue;\n\t\tconst to = block.node.getBoundingClientRect();\n\n\t\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) continue;\n\n\n\t}\n}\n\nfunction getSpreadUpdate(levels, updates) {\n\tvar update = {};\n\n\tvar to_null_out = {};\n\tvar accounted_for = {};\n\n\tvar i = levels.length;\n\twhile (i--) {\n\t\tvar o = levels[i];\n\t\tvar n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (var key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (var key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (var key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nconst invalidAttributeNameCharacter = /[\\s'\">\\/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n\nfunction spread(args) {\n\tconst attributes = Object.assign({}, ...args);\n\tlet str = '';\n\n\tObject.keys(attributes).forEach(name => {\n\t\tif (invalidAttributeNameCharacter.test(name)) return;\n\n\t\tconst value = attributes[name];\n\t\tif (value === undefined) return;\n\t\tif (value === true) str += \" \" + name;\n\n\t\tconst escaped = String(value)\n\t\t\t.replace(/\"/g, '&#34;')\n\t\t\t.replace(/'/g, '&#39;');\n\n\t\tstr += \" \" + name + \"=\" + JSON.stringify(escaped);\n\t});\n\n\treturn str;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;'\n};\n\nfunction escape(html) {\n\treturn String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\n\nfunction each(items, assign, fn) {\n\tlet str = '';\n\tfor (let i = 0; i < items.length; i += 1) {\n\t\tstr += fn(assign(items[i], i));\n\t}\n\treturn str;\n}\n\nconst missingComponent = {\n\t_render: () => ''\n};\n\nfunction validateSsrComponent(component, name) {\n\tif (!component || !component._render) {\n\t\tif (name === 'svelte:component') name += ' this={...}';\n\t\tthrow new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n\t}\n\n\treturn component;\n}\n\nfunction debug(file, line, column, values) {\n\tconsole.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`);\n\tconsole.log(values);\n\treturn '';\n}\n\nfunction blankObject() {\n\treturn Object.create(null);\n}\n\nfunction destroy(detach) {\n\tthis.destroy = noop;\n\tthis.fire('destroy');\n\tthis.set = noop;\n\n\tthis._fragment.d(detach !== false);\n\tthis._fragment = null;\n\tthis._state = {};\n}\n\nfunction destroyDev(detach) {\n\tdestroy.call(this, detach);\n\tthis.destroy = function() {\n\t\tconsole.warn('Component was already destroyed');\n\t};\n}\n\nfunction _differs(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction _differsImmutable(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction fire(eventName, data) {\n\tvar handlers =\n\t\teventName in this._handlers && this._handlers[eventName].slice();\n\tif (!handlers) return;\n\n\tfor (var i = 0; i < handlers.length; i += 1) {\n\t\tvar handler = handlers[i];\n\n\t\tif (!handler.__calling) {\n\t\t\ttry {\n\t\t\t\thandler.__calling = true;\n\t\t\t\thandler.call(this, data);\n\t\t\t} finally {\n\t\t\t\thandler.__calling = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction flush(component) {\n\tcomponent._lock = true;\n\tcallAll(component._beforecreate);\n\tcallAll(component._oncreate);\n\tcallAll(component._aftercreate);\n\tcomponent._lock = false;\n}\n\nfunction get() {\n\treturn this._state;\n}\n\nfunction init(component, options) {\n\tcomponent._handlers = blankObject();\n\tcomponent._slots = blankObject();\n\tcomponent._bind = options._bind;\n\tcomponent._staged = {};\n\n\tcomponent.options = options;\n\tcomponent.root = options.root || component;\n\tcomponent.store = options.store || component.root.store;\n\n\tif (!options.root) {\n\t\tcomponent._beforecreate = [];\n\t\tcomponent._oncreate = [];\n\t\tcomponent._aftercreate = [];\n\t}\n}\n\nfunction on(eventName, handler) {\n\tvar handlers = this._handlers[eventName] || (this._handlers[eventName] = []);\n\thandlers.push(handler);\n\n\treturn {\n\t\tcancel: function() {\n\t\t\tvar index = handlers.indexOf(handler);\n\t\t\tif (~index) handlers.splice(index, 1);\n\t\t}\n\t};\n}\n\nfunction set(newState) {\n\tthis._set(assign({}, newState));\n\tif (this.root._lock) return;\n\tflush(this.root);\n}\n\nfunction _set(newState) {\n\tvar oldState = this._state,\n\t\tchanged = {},\n\t\tdirty = false;\n\n\tnewState = assign(this._staged, newState);\n\tthis._staged = {};\n\n\tfor (var key in newState) {\n\t\tif (this._differs(newState[key], oldState[key])) changed[key] = dirty = true;\n\t}\n\tif (!dirty) return;\n\n\tthis._state = assign(assign({}, oldState), newState);\n\tthis._recompute(changed, this._state);\n\tif (this._bind) this._bind(changed, this._state);\n\n\tif (this._fragment) {\n\t\tthis.fire(\"state\", { changed: changed, current: this._state, previous: oldState });\n\t\tthis._fragment.p(changed, this._state);\n\t\tthis.fire(\"update\", { changed: changed, current: this._state, previous: oldState });\n\t}\n}\n\nfunction _stage(newState) {\n\tassign(this._staged, newState);\n}\n\nfunction setDev(newState) {\n\tif (typeof newState !== 'object') {\n\t\tthrow new Error(\n\t\t\tthis._debugName + '.set was called without an object of data key-values to update.'\n\t\t);\n\t}\n\n\tthis._checkReadOnly(newState);\n\tset.call(this, newState);\n}\n\nfunction callAll(fns) {\n\twhile (fns && fns.length) fns.shift()();\n}\n\nfunction _mount(target, anchor) {\n\tthis._fragment[this._fragment.i ? 'i' : 'm'](target, anchor || null);\n}\n\nvar PENDING = {};\nvar SUCCESS = {};\nvar FAILURE = {};\n\nfunction removeFromStore() {\n\tthis.store._remove(this);\n}\n\nvar proto = {\n\tdestroy,\n\tget,\n\tfire,\n\ton,\n\tset,\n\t_recompute: noop,\n\t_set,\n\t_stage,\n\t_mount,\n\t_differs\n};\n\nvar protoDev = {\n\tdestroy: destroyDev,\n\tget,\n\tfire,\n\ton,\n\tset: setDev,\n\t_recompute: noop,\n\t_set,\n\t_stage,\n\t_mount,\n\t_differs\n};\n\nexport { blankObject, destroy, destroyDev, _differs, _differsImmutable, fire, flush, get, init, on, set, _set, _stage, setDev, callAll, _mount, PENDING, SUCCESS, FAILURE, removeFromStore, proto, protoDev, wrapAnimation, fixPosition, handlePromise, append, insert, detachNode, detachBetween, detachBefore, detachAfter, reinsertBetween, reinsertChildren, reinsertAfter, reinsertBefore, destroyEach, createFragment, createElement, createSvgElement, createText, createComment, addListener, removeListener, setAttribute, setAttributes, setCustomElementData, setXlinkAttribute, getBindingGroupValue, toNumber, timeRangesToArray, children, claimElement, claimText, setData, setInputType, setStyle, selectOption, selectOptions, selectValue, selectMultipleValue, addResizeListener, toggleClass, destroyBlock, outroAndDestroyBlock, fixAndOutroAndDestroyBlock, updateKeyedEach, measure, animate, getSpreadUpdate, invalidAttributeNameCharacter, spread, escaped, escape, each, missingComponent, validateSsrComponent, debug, linear, generateRule, hash, wrapTransition, outros, groupOutros, transitionManager, noop, assign, assignTrue, isPromise, callAfter, addLoc, exclude, run };\n","<!-- ^   Opposing  Players   ^  -->\n<!-- [R][R][R] [Rinf] [M][Inf]  --><!--[ player.planets ]-->\n<!--  [S] [C] [P/T] [W] [R]     -->\n<!-- [      player.limbo     ] [pass] -->\n<!-- [De] [ player.hand ] [Di]  -->\n<!-- -->\n\n{#if game.currentphase==-4}\n<div class=\"playercountselector\">\n\t<p on:click=\"phaseincrement()\" on:tap=\"phaseincrement()\">Start a New Online Game</p>\n\t<p on:click=\"fetchexistinggames()\" on:tap=\"fetchexistinggames()\">Join an Existing Online Game</p>\n\t<p on:click=\"newoffline()\" on:tap=\"newoffline()\">Start a New Offline Game</p>\n</div>\n{:elseif game.currentphase==-3}\n<div class=\"playercountselector\">\n\t<p> Choose your Game's number of Players</p>\n\t<p on:click=\"newgame(2)\" on:tap=\"newgame(2)\">2</p>\n\t<p on:click=\"newgame(3)\" on:tap=\"newgame(3)\">3</p>\n\t<p on:click=\"newgame(4)\" on:tap=\"newgame(4)\">4</p>\n</div>\n{:elseif game.currentphase==-2}\n<div class=\"playercountselector\">\n\t<p> Choose your Screen Name</p>\t\n\t<input type=\"text\" bind:value=lobby.screenname>\n\t<p on:click=\"setplayername(lobby.screenname)\" on:tap=\"setplayername(lobby.screenname)\">Finished</p>\n</div>\n{:elseif game.currentphase==-1}\n\t<div class=\"playercountselector\">\n\t\t<p>Choose a Game to Join</p>\n\t\t{#each lobby.existinggames as g}\n        \t<p on:click=\"enterexistinggame(g)\" on:tap=\"enterexistinggame(g.game_id)\">{g.game_id}</p>\n\t\t{/each}\n\t</div>\n{:elseif game.passtoplayer && !lobby.online}\n    <div class='passtoplayer' on:click=\"togglepasstoplayer()\" on:tap=\"togglepasstoplayer()\">\n    \tpass to next player\n\t</div>\n{:elseif !!game.winner}\n\t<div class='passtoplayer'>\n\t\t{game.winner} WON!!!!\n\t</div>\n{:else}\n\t<div id=\"screen\" style=\"height:98%;\" class=\"flex\">\n\t\t{#each game.players as player}\n\t\t\t{#if game.acting_player!==undefined && ((lobby.screenname==player.name && lobby.online) || (game.acting_player.id==player.id && !lobby.online)) }\n\t\t\t\t<div class=\"bordered playingfield\">\n\t\t\t\t\t\t<!-- <div class='blowup'></div> -->\n\t\t\t\t\t<div id='dragged'></div>\n\t\t\t\t\t<div class=\"playerinfo bordered\">\n\t\t\t\t\t\t<div style=\"width:33%; text-align: center;\" class=\"bordered\"> Military Might {player.starfighters.small}</div>\n\t\t\t\t\t\t<div style=\"width:33%; text-align: center;\" class=\"bordered\"> Galactic Influence {player.influence.length} <br> {lobby.screenname}</div>\n\t\t\t\t\t\t<div style=\"width:33%; text-align: center;\" class=\"bordered\"> Remaining Influence throughout the Galaxy {game.influence.length}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- stacks / planets toggle -->\n\t\t\t\t\t<div on:click=\"toggle_center_or_planets()\" on:tap=\"toggle_center_or_planets()\">\n\t\t\t\t\t\tshow {(game.displayinfo.center_or_planets) ? \"planets\" : \"center row\"}\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- stacks -->\n\t\t\t\t\t{#if game.displayinfo.selectionzone=='research'}\n                        <div class=\"zone researchrow\">\n\t\t\t\t\t\t\t{#each game.research_deck as card}\n\t\t\t\t\t\t\t<div>\n                                <img src=\"{card.imgurl}\" on:click=\"choosewrapper(card)\" on:tap=\"choosewrapper(card)\" class=\"{(game.displayinfo.selectionzone=='research') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\" alt=\"{card.name}\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/each}\n                        </div>\n\t\t\t\t\t{:elseif game.displayinfo.center_or_planets}\n\t\t\t\t\t\t<div class=\"flex zone centerrow\">\n\t\t\t\t\t\t\t{#if game.displayinfo.selectionzone=='rolecards'}\n\t\t\t\t\t\t\t\t{#each game.stacks.rolecards as card}\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<img on:click=\"choosewrapper(card)\" on:tap=\"choosewrapper(card)\" on:touchmove=\"move(event, './images/'+card.type+'100.png')\" on:touchstart=\"drag(event,card)\" on:touchend=\"drop(event)\" class=\"{(game.displayinfo.selectionzone=='rolecards') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\" src=\"./images/{card.type}100.png\" alt=\"{card.name}\">\n\t\t\t\t\t\t\t\t\t<div class=\"pilecount\"> {game.stacks.pilecount[card.type]}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t{#each game.stacks.rolecards as card}\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<img class=\"{(game.displayinfo.selectionzone=='rolecards') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\" src=\"./images/{card.type}100.png\" alt=\"{card.name}\">\n\t\t\t\t\t\t\t\t\t<div class=\"pilecount\"> {game.stacks.pilecount[card.type]}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#if !game.displayinfo.center_or_planets}\n\t\t\t\t\t\t<div class=\"flex zone centerrow\">\n\t\t\t\t\t\t\t{#each player.unsettled_planets as planet}\n                                <div on:click=\"choosewrapper(planet)\" on:tap=\"choosewrapper(planet)\" class=\" unsettled {(game.displayinfo.selectionzone=='unsettled_planets') ? ( (planet.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t<img src=\"./images/{planet.type}back100.png\" alt='{planet.settle_cost} {planet.type} {planet.conquer_cost}'>\n                                    <div class=\"settle_cost\"> {planet.settle_cost}</div>\n                                    <div class=\"conquer_cost\"> {planet.conquer_cost}</div>\n\t\t\t\t\t\t\t\t\t<div class=\"hosted_colonies\"> {planet.hosted_colonies.length} colonies</div>\n                                </div>\n\t\t\t\t\t\t\t{/each}\n                            {#each [...player.settled_planets, ...player.conquered_planets] as planet}\n\t\t\t\t\t\t\t\t<div on:click=\"choosewrapper(planet)\" on:tap=\"choosewrapper(planet)\" class=\"{(game.displayinfo.selectionzone=='settled_&_conquered_planets') ? ( (planet.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t<div  class=\"planetfront\" style=\"font-size: 160%\" >\n\t\t\t\t\t\t\t\t\t\t<img src=\"./images/{planet.type}100.png\" alt='{planet.settle_cost} {planet.type} {planet.conquer_cost}'>\t\n\t\t\t\t\t\t\t\t\t\t<!-- style=\"background-image: url('./images/{option.type}100.png')\" -->\n\t\t\t\t\t\t\t\t\t\t<!-- icons -->\n\t\t\t\t\t\t\t\t\t\t<div class=\"planetfrontinfo\">\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.survey > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/surveyicon100.png\"  alt=\"survey\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.warfare > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/warfareicon100.png\"  alt=\"warfare\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.colonize > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/colonizeicon100.png\"  alt=\"colonize\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.research > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/researchicon100.png\"  alt=\"research\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.trade > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/tradeicon100.png\"  alt=\"trade\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.icons.produce > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/produceicon100.png\"  alt=\"produce\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t<!-- production zones -->\n\t\t\t\t\t\t\t\t\t\t\t{#each planet.production_zones as zone}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/{zone.type}productionzoneicon.png\"  alt=\"{zone.type} zone\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t\t<!-- hand size mods -->\n\t\t\t\t\t\t\t\t\t\t\t{#if planet.handsize_modifier > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/handsizeicon100.png\"  alt=\"produce\"><br>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t<!-- influence value -->\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{planet.influence_value}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"./images/influenceicon.png\"  alt=\"influence\">\n\t\t\t\t\t\t\t\t\t\t\t<!-- name  -->\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{planet.name}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n                            {/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<!-- played cards-->\n\t\t\t\t\t<div id=\"playedcards\" class=\"flex zone playedcards\" >\n\t\t\t\t\t\t{#if game.displayinfo.showoptiontoskip}\n\t\t\t\t\t\t\t<div style=\"margin-right:auto\" class=\"selectable pass\" on:click=\"choose([{name:'Skip'}])\" on:tap=\"choose([{name:'Skip'}])\">[Choose None]</div>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<div style=\"margin-right:auto\" class=\"bordered pass\">[____]</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#each player.limbo as card}\n\t\t\t\t\t\t\t<!-- {#if game.displayinfo.selectionzone=='hand'}\n\t\t\t\t\t\t\t\t{#if card.research_cost !== undefined}\n\t\t\t\t\t\t\t\t\t<img src=\"{card.imgurl}\"  alt=\"{card.name}\" on:touchstart=\"drag(event, card)\" on:touchend=\"drop(event)\" on:click=\"choosewrapper(card)\" on:tap=\"choosewrapper(card)\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/{card.type}100.png\" alt=\"{card.name}\" on:touchstart=\"drag(event,card)\" on:touchend=\"drop(event)\" on:click=\"choosewrapper(card)\" on:tap=\"choosewrapper(card)\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t{:else} -->\n\t\t\t\t\t\t\t\t{#if card.research_cost !== undefined}\n\t\t\t\t\t\t\t\t<div class=\"bordered\">\n\t\t\t\t\t\t\t\t\t<img class=\"minicard\" src=\"{card.imgurl}\"  alt=\"{card.name}\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{:elseif card.type != \"advanced\" && card.type != \"fertile\" && card.type != \"metallic\"}\n\t\t\t\t\t\t\t\t\t<div class=\"bordered\">\n\t\t\t\t\t\t\t\t\t\t<img class=\"minicard\" src=\"./images/{card.type}100.png\"  alt=\"{card.name}\">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t<!-- {/if} -->\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t{#if game.passp }\n\t\t\t\t\t\t\t<div style=\"margin-left:auto\" class=\"selectable pass\" on:click=\"pass_priority()\"on:tap=\"pass_priority()\">[Pass to <br> Next Player]</div>\n\t\t\t\t\t\t{:elseif game.passt}\n\t\t\t\t\t\t\t<div style=\"margin-left:auto\" class=\"selectable pass\" on:click=\"pass_turn()\" on:tap=\"pass_turn()\">[End Turn]</div>\n\t\t\t\t\t\t{:elseif game.displayinfo.allowformultipleselections && game.choices.length>0}\n\t\t\t\t\t\t\t<div style=\"margin-left:auto\" class=\"selectable pass\" on:click=\"choose(game[game.displayinfo.choicelabel])\" on:tap=\"choose(game[game.displayinfo.choicelabel])\">[Choose Selected]</div>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<div class=\"bordered pass\" >[______]</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"messagetoplayer bordered\">{game.messagetoplayer[game.messagetoplayer.length-1]}</div>\n\t\t\t\t\t<!-- hand -->\n\t\t\t\t\t<div class=\"flex zone ownedcards\">\n\t\t\t\t\t\t<div class='bordered deck'> cards remaining in deck: {player.deck.length}</div>\n                        <div class='hand'>\n\t\t\t\t\t\t\t{#each player.hand as card}\n\t\t\t\t\t\t\t\t{#if game.displayinfo.selectionzone=='hand'}\n\t\t\t\t\t\t\t\t\t{#if card.research_cost !== undefined}\n\t\t\t\t\t\t\t\t\t\t<img src=\"{card.imgurl}\"  alt=\"{card.name}\" on:touchstart=\"drag(event, card)\" on:touchend=\"drop(event)\" on:touchmove=\"move(event, card.imgurl)\" on:click=\"choosewrapper(card)\" on:tap=\"choosewrapper(card)\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'hidden' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<img src=\"./images/{card.type}100.png\" alt=\"{card.name}\" on:touchstart=\"drag(event,card)\" on:touchend=\"drop(event)\" on:click=\"choosewrapper(card)\" on:touchmove=\"move(event, './images/'+card.type+'100.png')\" on:tap=\"choosewrapper(card)\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'hidden' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t{#if card.research_cost !== undefined}\n\t\t\t\t\t\t\t\t\t\t<img src=\"{card.imgurl}\" alt=\"{card.name}\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<img src=\"./images/{card.type}100.png\" alt=\"{card.name}\" class=\"cutcard {(game.displayinfo.selectionzone=='hand') ? ( (card.selected) ? 'selected' : 'selectable' ): 'bordered'}\">\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{/if}\t\n\t\t\t\t\t\t\t{/each}\n                        </div>\n\t\t\t\t\t\t<div class=\"bordered discard\"> cards in discard pile: {player.discard.length}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t{/each}\n\t\t<!-- game.options -->\n\t\t{#if game.displayinfo.selectionzone=='options'}\n\t\t\t<div class=\"{( game.options[0] !== undefined && game.options[0].type !== undefined) ? 'talloptions' : 'options'}\">\n\t\t\t\t{#each game.options as option}\n\t\t\t\t\t{#if option.type !== undefined}\n\t\t\t\t\t\t\n\t\t\t\t\t<div class=\"bordered flex {(game.displayinfo.selectionzone=='options') ? ( (option.selected) ? 'selected' : 'selectable' ): 'bordered'}\" on:click=\"choosewrapper(option)\" on:tap=\"choosewrapper(option)\" >\n\t\t\t\t\t\t<div  class=\"planetfront\" >\n\t\t\t\t\t\t\t<img src=\"./images/{option.type}100.png\" alt='{option.settle_cost} {option.type} {option.conquer_cost}'>\t\n\t\t\t\t\t\t\t<!-- style=\"background-image: url('./images/{option.type}100.png')\" -->\n\t\t\t\t\t\t\t<!-- icons -->\n\t\t\t\t\t\t\t<div class=\"planetfrontinfo\">\n\t\t\t\t\t\t\t\t{#if option.icons.survey > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/surveyicon100.png\"  alt=\"survey\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.warfare > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/warfareicon100.png\"  alt=\"warfare\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.colonize > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/colonizeicon100.png\"  alt=\"colonize\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.research > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/researchicon100.png\"  alt=\"research\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.trade > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/tradeicon100.png\"  alt=\"trade\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t{#if option.icons.produce > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/produceicon100.png\"  alt=\"produce\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t<!-- production zones -->\n\t\t\t\t\t\t\t\t{#each option.production_zones as zone}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/{zone.type}productionzoneicon.png\"  alt=\"{zone.type} zone\"><br>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t<!-- hand size mods -->\n\t\t\t\t\t\t\t\t{#if option.handsize_modifier > 0}\n\t\t\t\t\t\t\t\t\t<img src=\"./images/handsizeicon100.png\"  alt=\"produce\"><br>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t<!-- influence value -->\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{option.influence_value}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<img src=\"./images/influenceicon.png\"  alt=\"influence\">\n\t\t\t\t\t\t\t\t<!-- name  -->\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{option.name}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<!-- colonize cost -->\n\t\t\t\t\t\t\t<!-- conquer cost -->\n\t\t\t\t\t\t\t<div class=\"mini_unsettled\">\n\t\t\t\t\t\t\t\t<img src=\"./images/{option.type}back100.png\" alt='{option.settle_cost} {option.type} {option.conquer_cost}'>\n\t\t\t\t\t\t\t\t<div class=\"unsettled_costs\">\n\t\t\t\t\t\t\t\t\t<span class=\"mini_settle_cost\"> {option.settle_cost}</span>\n\t\t\t\t\t\t\t\t\t<span class=\"mini_conquer_cost\"> {option.conquer_cost}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div class=\"pass {(game.displayinfo.selectionzone=='options') ? ( (option.selected) ? 'selected' : 'selectable' ): 'bordered'}\" on:click=\"choosewrapper(option)\" on:tap=\"choosewrapper(option)\">\n\t\t\t\t\t\t\t{option.name}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n{/if}\n<script>\n\texport default {\n\t\tmethods:{\n\t\t\tchoosewrapper(c){\n\t\t\t\tif (app.get().lobby.screenname == app.get().game.acting_player.name || !app.get().lobby.online){\n\t\t\t\t\tif (app.get().game.displayinfo.allowformultipleselections){\n\t\t\t\t\t\tapp.multiplechoose(c);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tapp.choose([c]);\n\t\t\t\t\t}\n\t\t\t\t}\n            },\n            multiplechoose(choice){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tif ( !game[game.displayinfo.choicelabel].includes(choice) ) {\n\t\t\t\t\tgame[game.displayinfo.choicelabel].push(choice);\n\t\t\t\t\tchoice.selected=true;\n\t\t\t\t\tif (choice.type!=='planet' && choice.type!=='fertile' && choice.type!=='metallic' && choice.type!=='advanced' && choice.name != 'Skip'){\n\t\t\t\t\t\tchoice.final_destination_label='discard';\n\t\t\t\t\t \tgame.acting_player.limbo.push(choice);\n\t\t\t\t\t\tgame.acting_player.hand = game.acting_player.hand.filter(\n\t\t\t\t\t\t\t(el)=>{ return el.identifier != choice.identifier}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t//let i = game[game.displayinfo.choicelabel].indexOf(choice);\n\t\t\t\t\tchoice.selected=false;\n\t\t\t\t\t//game[game.displayinfo.choicelabel].splice(i,1);\n\t\t\t\t\tif (choice.type!=='planet' && choice.type!=='fertile' && choice.type!=='metallic' && choice.type!=='advanced' && choice.name != 'Skip'){\n\t\t\t\t\t\tgame[game.displayinfo.choicelabel]  = game[game.displayinfo.choicelabel].filter(\n\t\t\t\t\t\t\t(el)=>{ return el.identifier != choice.identifier}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tgame.acting_player.hand.push(choice);\n\t\t\t\t\t\tgame.acting_player.limbo = game.acting_player.limbo.filter(\n\t\t\t\t\t\t\t(el)=>{ return el.identifier != choice.identifier}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tapp.set({\n\t\t\t\t\t'game':game\n\t\t\t\t});\n\t\t\t},\n            choose(choices){\n\t\t\t\tlet game = app.get().game;\n                game.options=[];\n                for (let i in choices){\n\t\t\t\t\tchoices[i].selected=false;\n\t\t\t\t}\n\t\t\t\tgame[game.displayinfo.choicelabel]=choices;\n\t\t\t\tapp.set({\n\t\t\t\t\t'game':game\n                });\n                app.phasefinishfunction();//game.displayinfo.callback();\n\t\t\t\t//document.dispatchEvent(new Event('choicemade'));\n\t\t\t},\n            offer (\n                skippable /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                multiple /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                [field_label, choices] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                choice_label /* label for where the choice is stored | set with game[label]=*/,\n                callback /*callback that handles the choice or finishes the phase*/, \n            ) {\n                let game = app.get().game;\n                game.displayinfo.selectionzone=field_label;\n                game.displayinfo.allowformultipleselections=multiple;\n                game.displayinfo.showoptiontoskip=skippable;\n                game.displayinfo.choicelabel=choice_label;\n\t\t\t\t//game.displayinfo.callback=callback;\n                if (field_label == 'hand'){\n                    choices = app.get().game.acting_player.hand;\n                } else if (field_label == 'research') {\n                    choices = app.get().game.research_deck;\n                } else if (field_label == 'discard'){\n                    choices = app.get().game.acting_player.discard;\n                } else if (field_label == 'planets') {\n                    choices = app.get().game.planet_deck;\n                } else if (field_label == 'rolecards'){\n\t\t\t\t\tchoices = app.get().game.stacks.rolecards;\n\t\t\t\t\tgame.displayinfo.center_or_planets = true;\n                } else if (field_label == 'unsettled_planets') {\n\t\t\t\t\tchoices = app.get().game.acting_player.unsettled_planets;\n\t\t\t\t\tgame.displayinfo.center_or_planets = false;\n                } else if (field_label == 'settled_planets'){\n                    choices = app.get().game.acting_player.settled_planets;\n\t\t\t\t\tgame.displayinfo.center_or_planets = false;\n                } else if (field_label == 'conquered_planets'){\n                    choices = app.get().game.acting_player.conquered_planets;\n\t\t\t\t\tgame.displayinfo.center_or_planets = false;\n                } else if (field_label == 'settled_&_conquered_planets'){\n                    choices = [...app.get().game.acting_player.settled_planets, ...app.get().game.acting_player.conquered_planets];\n\t\t\t\t\tgame.displayinfo.center_or_planets = false;\n\n                } else if (field_label == 'options') {\n\t\t\t\t}\n\t\t\t\tgame[choice_label] = [];\n\t\t\t\tapp.set({'game':game});\n\t\t\t\t//if (skippable) {choices.push({'name':\"Skip\"})};\n\t\t\t\t//if (multiple) {choices.push({'name':\"Choose All Selected\"})};\n\t\t\t\tapp.present_as_choice(choices);\n\n            },\n\t\t\tdiscard(source_array, destination_array, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tfor (let i in source_array){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) { \n\t\t\t\t\t\tdestination_array.push(elem);\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(totstemp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//draw deck->hand\n\t\t\ttotalinfluence(){\n\t\t\t\tlet players = app.get().game.players;\n\t\t\t\tfor (let i in players){\n\t\t\t\t\tlet arr = [...players[i].deck,...players[i].discard, ...players[i].limbo, ...players[i].hand];\n\t\t\t\t\tfor (let j in arr){\n\t\t\t\t\t\tif (arr[j].influence >= 1){\n\t\t\t\t\t\t\tplayers[i].influence.push(arr[j].influence);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet inf = 0;\n\t\t\t\t\tfor (let l in players[i].influence){\n\t\t\t\t\t\tinf += players[i].influence[l];\n\t\t\t\t\t}\n\t\t\t\t\tplayers[i].influence = inf;\n\t\t\t\t}\n\t\t\t\tapp.set({'game':{...app.get().game, 'players':players}});\n\t\t\t},\n\t\t\tendgame(){\n\t\t\t\t//display victor\n\t\t\t\tlet scores = app.get().game.players.map(e => e.influence);\n\t\t\t\tlet winner = '';\n\t\t\t\tlet highest = scores[0];\n\t\t\t\tapp.get().game.players.map((e) => { if ( highest < e.influence ) { winner = e.name; highest = e.influence; } } );\n\t\t\t\tapp.set({'game':{...app.get().game, 'winner':winner }});\n\t\t\t},\n\t\t\tcheckforendgame(){\n\t\t\t\tlet depletedstacks = 0;\n\t\t\t\tfor (let el in app.get().game.stacks.pilecount){\n\t\t\t\t\tif (app.get().game.stacks.pilecount[el] < 1){\n\t\t\t\t\t\tdepletedstacks++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet stacklimit = 0;\n\t\t\t\tif (app.get().game.number_of_players == 1 || app.get().game.number_of_players == 2){\n\t\t\t\t\tstacklimit = 1;\n\t\t\t\t}else if (app.get().game.number_of_players == 3 || app.get().game.number_of_players == 4){\n\t\t\t\t\tstacklimit = 2;\n\t\t\t\t}\n\t\t\t\tif ( stacklimit <= depletedstacks || app.get().game.influence.length == 0){\n\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdraw(player, quantity=1){\n\t\t\t\tfor ( let i = 0; i < quantity; i++){\n\t\t\t\t\tif(player.deck.length!=0){\n\t\t\t\t\t\tplayer.hand.push(player.deck.pop());\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfor(let j in player.discard){\n\t\t\t\t\t\t\tplayer.deck.push(player.discard.pop());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tplayer.deck=app.knuthshuffle(player.deck);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn player;\n\t\t\t},\n\t\t\tplay(source_array, destination_array, final_destination_label, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet filtered_item = null\n\t\t\t\tlet iterations = source_array.length;\n\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) {\n\t\t\t\t\t\telem.final_destination_label=final_destination_label; \n\t\t\t\t\t\tdestination_array.push(elem);\n\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsend(state){\n\t\t\t\tapp.set(state);\n\t\t\t\tif (app.get().ws!==undefined){\n\t\t\t\t\tapp.sendstate();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgenerate_research_card(name){\n\t\t\t\tlet _card={\n\t\t\t\t\tname:name,\n\t\t\t\t\ttype:name,\n\t\t\t\t\tidentifier:app.generate_unique_identifier(),\n\t\t\t\t\ticons:{'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0},\n\t\t\t\t\tplanet_requirements:{'advanced':0, 'metallic':0, 'fertile':0},\n\t\t\t\t\tresearch_cost:0,\n\t\t\t\t\taction:()=>{},\n\t\t\t\t\tis_permanent:false,\n\t\t\t\t\tis_doublesided:false,\n\t\t\t\t\timgurl:\"./images/\",\n\t\t\t\t\tInfluence_value:0,\n\t\t\t\t\timg:function(im){this.imgurl+=im;return this;},\n\t\t\t\t\tinfluence:function(inf){this.influence_value = inf ; return this;},\n\t\t\t\t\tmetallic:function(met){this.planet_requirements.metallic = met ; return this;},\n\t\t\t\t\tadvanced:function(adv){this.planet_requirements.advanced = adv; return this;},\n\t\t\t\t\tfertile:function(fer){this.planet_requirements.fertile = fer; return this;},\n\t\t\t\t\tresearch:function(res){this.research_cost = res; return this;},\n\t\t\t\t\tpermanent:function(){this.is_permanent = true; return this;},\n\t\t\t\t\tdoubleside:function(){this.is_doublesided = true; return this;},\n\t\t\t\t\ticons:function(icons){this.icons = Object.assign(this.icons, icons); return this;},\n\t\t\t\t\timproved_colonize:function(){this.research(3);this.imgurl+=\"improvedcolonize\";return this;},\n\t\t\t\t\timproved_survey:  function(){this.research(3);this.imgurl+=\"improvedsurvey\";return this;},\n\t\t\t\t\timproved_research:function(){this.research(3);this.imgurl+=\"improvedresearch\";return this;},\n\t\t\t\t\timproved_warfare: function(){this.research(3);this.imgurl+=\"improvedwarfare\";return this;},\n\t\t\t\t\timproved_production:function(){this.research(3);this.imgurl+=\"improvedproduction\";return this;},\n\t\t\t\t\timproved_trade:  \t\tfunction(){this.research(3);this.imgurl+=\"improvedtrade\";return this;},\n\t\t\t\t\tsurveyteam:\t\t\tfunction(){return this.research(5).metallic(2).influence(2).icons({'survey':2}).img('surveyteam');},\n\t\t\t\t\twarpath:\t\t\t\tfunction(){return this.research(5).metallic(2).influence(2).icons({'warfare':2}).img('warpath');},\n\t\t\t\t\tterraforming:\t\t\tfunction(){return this.research(5).fertile(2).influence(2).icons({'colonize':2}).img('terraforming');},\n\t\t\t\t\tgeneticengineering:\tfunction(){return this.research(5).fertile(2).influence(2).icons({'produce':2}).img('geneticengineering');},\n\t\t\t\t\tartificialintelligence:\tfunction(){return this.research(5).fertile(2).influence(2).icons({'colonize':1,'produce':1}).img('artificialintelligence');},\n\t\t\t\t\tdiversemarkets:\t\tfunction(){return this.research(5).advanced(2).influence(2).icons({'research':1,'trade':1}).img('diversemarkets');},\n\t\t\t\t\tspecialization:\t\t\tfunction(){return this.research(5).advanced(2).influence(2).icons({'trade':2}).img('specialization');},\n\t\t\t\t\tmobilization:\t\t\tfunction(){return this.research(5).metallic(2).influence(2).icons({'survey':1,'warfare':1}).img('mobilization');},\n\t\t\t\t\tdatanetwork:\t\t\tfunction(){return this.research(5).advanced(2).influence(2).icons({'research':2}).img('datanetwork');},\n\t\t\t\t\tabundance:   \t\t\tfunction(){this.research(5);this.imgurl+=\"abundance\"; this.is_doublesided=true; this.is_permanent=true; return this.fertile(2).influence(2);},\n\t\t\t\t\tadaptability:\t\t   \tfunction(){this.research(7);this.imgurl+=\"adaptability\"; this.is_doublesided=true; this.is_permanent=true; return this.advanced(3).influence(5);},\n\t\t\t\t\tbureaucracy:  \t\t\tfunction(){this.research(7);this.imgurl+=\"bureaucracy\"; this.is_doublesided=true; this.is_permanent=true; return this.fertile(3).influence(5);},\n\t\t\t\t\tdissension:\t\t\t\tfunction(){return this.research(7).fertile(3).influence(5).permanent().doubleside().img('dissension');},\n\t\t\t\t\thyperefficiency:\t\tfunction(){return this.research(7).advanced(3).influence(5).permanent().doubleside().img('hyperefficiency');},\n\t\t\t\t\timperialism:\t\t\tfunction(){return this.research(5).metallic(2).influence(2).permanent().doubleside().img('imperialism').icons({'survey':1,'trade':1,'warfare':1,});},\n\t\t\t\t\tlogistics:\t\t\t\tfunction(){return this.research(7).metallic(3).influence(5).permanent().doubleside().img('logistics');},\n\t\t\t\t\tproductivity:\t\t\tfunction(){return this.research(7).metallic(3).influence(5).permanent().doubleside().img('productivity');},\n\t\t\t\t\tscorchedearthpolicy:\tfunction(){return this.research(5).metallic(2).influence(2).permanent().doubleside().img('scorchedearthpolicy');},\n\t\t\t\t\tstreamlining:\t\t\tfunction(){return this.research(5).advanced(2).influence(2).permanent().doubleside().img('streamlining');},\n\t\t\t\t\tweaponsemporium:\t\tfunction(){return this.research(5).advanced(2).influence(2).permanent().doubleside().img('weaponemporium');},\n\t\t\t\t\tfertilegrounds:\t\t\tfunction(){return this.research(5).fertile(2).influence(2).permanent().doubleside().img('fertilegrounds').icons({'research':1,'colonize':1,'produce':1,});},\n\t\t\t\t}\n\t\t\t\treturn _card;\n\t\t\t},\n\t\t\tgenerate_research_deck(){\n\t\t\t\tlet _deck =[\n\t\t\t\t\tapp.generate_research_card('improved_production').metallic(1).icons({'warfare':1,'produce':1}).improved_production().img(\"wp100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_production').metallic(1).icons({'survey':1,'produce':1}).improved_production().img(\"sp100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_trade')     .metallic(1).icons({'survey':1,'trade':1}).improved_trade().img(\"st100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_trade')     .metallic(1).icons({'warfare':1,'trade':1}).improved_trade().img(\"wt100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_research')  .metallic(1).icons({'warfare':1,'research':1}).improved_research().img(\"wr100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_research')  .metallic(1).icons({'survey':1,'research':1}).improved_research().img(\"sr100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_colonize')  .metallic(1).icons({'warfare':1,'colonize':1}).improved_colonize().img(\"wc100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_colonize')  .metallic(1).icons({'survey':1,'colonize':1}).improved_colonize().img(\"sc100.png\"),\n\t\t\t\t\n\t\t\t\t\tapp.generate_research_card('improved_warfare')   .fertile(1).icons({'produce':1,'warfare':1}).improved_warfare().img(\"pw100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_warfare')   .fertile(1).icons({'colonize':1,'warfare':1}).improved_warfare().img(\"cw100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_trade')     .fertile(1).icons({'produce':1,'trade':1}).improved_trade().img(\"pt100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_trade')     .fertile(1).icons({'colonize':1,'trade':1}).improved_trade().img(\"ct100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_research')  .fertile(1).icons({'produce':1,'research':1}).improved_research().img(\"pr100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_research')  .fertile(1).icons({'colonize':1,'research':1}).improved_research().img(\"cr100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_survey')    .fertile(1).icons({'produce':1,'survey':1}).improved_survey().img(\"ps100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_survey')    .fertile(1).icons({'colonize':1,'survey':1}).improved_survey().img(\"cs100.png\"),\n\t\t\t\t\n\t\t\t\t\tapp.generate_research_card('improved_production').advanced(1).icons({'research':1,'produce':1}).improved_production().img(\"rp100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_production').advanced(1).icons({'trade':1,'produce':1}).improved_production().img(\"tp100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_warfare')   .advanced(1).icons({'warfare':1,'trade':1}).improved_warfare().img(\"tw100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_warfare')   .advanced(1).icons({'research':1,'warfare':1}).improved_warfare().img(\"rw100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_colonize')  .advanced(1).icons({'colonize':1,'trade':1}).improved_colonize().img(\"tc100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_colonize')  .advanced(1).icons({'research':1,'colonize':1}).improved_colonize().img(\"rc100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_survey')    .advanced(1).icons({'trade':1,'survey':1}).improved_survey().img(\"ts100.png\"),\n\t\t\t\t\tapp.generate_research_card('improved_survey')    .advanced(1).icons({'research':1,'survey':1}).improved_survey().img(\"rs100.png\"),\n\n\t\t\t\t\tapp.generate_research_card('survey_team').surveyteam().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('war_path').warpath().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('terraforming').terraforming().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('genetic_engineering').geneticengineering().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('artificial_intelligence').artificialintelligence().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('diverse_markets').diversemarkets().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('specialization').specialization().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('mobilization').\tmobilization().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('data_network').datanetwork().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('abundance').abundance().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('adaptability').adaptability().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('bureaucracy').bureaucracy().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('dissension').dissension().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('hyperefficiency').hyperefficiency().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('imperialism').imperialism().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('logistics').logistics().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('productivity').productivity().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('scorched_earth_policy').scorchedearthpolicy().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('streamlining').streamlining().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('weapons_emporium').weaponsemporium().img(\"100.png\"),\n\t\t\t\t\tapp.generate_research_card('fertile_grounds').fertilegrounds().img(\"100.png\"),\n\n\t\t\t\t];\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.research_deck = _deck;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tgenerateplayer(_id){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet _player = {\n\t\t\t\t\t'id':_id,\n\t\t\t\t\t'specialization':'',\n\t\t\t\t\t'available':true,\n\t\t\t\t\t'rounds':0,\n\t\t\t\t\t'limbo': [],\n\t\t\t\t\t'deck' : [],\n\t\t\t\t\t'hand' : [],\n\t\t\t\t\t'permanents' : [] ,\n\t\t\t\t\t'discard' : [],\n\t\t\t\t\t'handsize':5,\n\t\t\t\t\t'activeaction' : null,\n\t\t\t\t\t'activerole' : '',\n\t\t\t\t\t'handsize' : 5,\n\t\t\t\t\t'boostingicons' : {'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0},\n\t\t\t\t\t'unsettled_planets' : [],\n\t\t\t\t\t'settled_planets' : [],\n\t\t\t\t\t'conquered_planets' : [],\n\t\t\t\t\t'starfighters' : {'small':0,'medium':0,'large':0},\n\t\t\t\t\t'combatvalue' : 0,\n\t\t\t\t\t'influence':[],\n\t\t\t\t};\n\t\t\t\t_player.deck = app.generatenewdeck();\n\t\t\t\t_player.deck = app.knuthshuffle(_player.deck);\n\t\t\t\t_player = app.draw(_player,_player.handsize);\n\t\t\t\t_player.unsettled_planets.push(game.stacks.startingplanets.pop());\n\t\t\t\tgame.players.push(_player);\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tgenerateplanet(name_in){\t\n\t\t\t\tlet _planet = {\n\t\t\t\t\tidentifier:app.generate_unique_identifier(),\n\t\t\t\t\tname:name_in,\n\t\t\t\t\ttype:'planet',\n\t\t\t\t\tsettle_cost:2,\n\t\t\t\t\tsettled:false,\n\t\t\t\t\tconquer_cost:2,\n\t\t\t\t\tproduction_zones:[],\n\t\t\t\t\tinfluence_value:2,\n\t\t\t\t\ticons:{'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0,},\n\t\t\t\t\thandsize_modifier:0,\n\t\t\t\t\thosted_colonies:[],\n\t\t\t\t\tmetallic:function(){this.type='metallic';return this;},\n\t\t\t\t\tadvanced:function(){this.type='advanced';return this;},\n\t\t\t\t\tfertile:function(){this.type='fertile';return this;},\n\t\t\t\t\ticon:function(icon_name){this.icons[icon_name]++;return this;},\n\t\t\t\t\thandsize:function(modifier){this.handsize_modifier=modifier;return this;},\n\t\t\t\t\tinfluence:function(influence){this.influence_value = influence;return this;},\n\t\t\t\t\tsettle:function(cost){this.settle_cost=cost;return this;},\n\t\t\t\t\tconquer:function(cost){this.conquer_cost=cost;return this;},\n\t\t\t\t\tzone:function(zone){this.production_zones.push({type:zone, filled:false});return this;},\n\t\t\t\t};\n\t\t\t\treturn _planet;\n\t\t\t},\n\t\t\tgenerateplanetdeck(){ \n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.planet_deck = [\n\t\t\t\t//fertile planets\n\t\t\t\tapp.generateplanet('MISHBURR ITO-A').fertile().settle(5).conquer(4).zone('green')              .influence(3).icon('produce')   ,\n\t\t\t\tapp.generateplanet('STYKU').fertile().settle(4).conquer(5).zone('blue')               .influence(3).icon('colonize')  ,\n\t\t\t\tapp.generateplanet('ANGUS DUFFY').fertile().settle(3).conquer(6).zone('green').zone('blue') .influence(3)                   ,\n\t\t\t\tapp.generateplanet('GERDLAND').fertile().settle(4).conquer(5).zone('blue')               .influence(3).icon('produce')   ,\n\t\t\t\tapp.generateplanet('MIK-MIK').fertile().settle(5).conquer(4).zone('green')              .influence(3).icon('colonize')  ,\n\t\t\t\tapp.generateplanet('NELOS IV').fertile().settle(5).conquer(4).zone('green')              .influence(2)      .handsize(1) ,\n\t\t\t\tapp.generateplanet('SPIELBANY VI').fertile().settle(4).conquer(5).zone('blue')               .influence(2)      .handsize(1) ,\n\t\t\t\tapp.generateplanet('NEW TEXAS').fertile().settle(3).conquer(6).zone('green').zone('blue') .influence(2).icon('colonize')  ,\n\t\t\t\tapp.generateplanet('ARTIGAS GNS-111').fertile().settle(3).conquer(6).zone('green').zone('blue') .influence(2).icon('produce')   ,\n\t\t\t\t//advanced planets\n\t\t\t\tapp.generateplanet('HANOJ - T').advanced().settle(5).conquer(4).influence(3).zone('purple').icon('trade'),\n\t\t\t\tapp.generateplanet('OKNOW').advanced().settle(4).conquer(5).influence(2).zone('purple')                              .handsize(1),\n\t\t\t\tapp.generateplanet('SROD AVEIN N2').advanced().settle(3).conquer(6).influence(4)                             .icon('research'),\n\t\t\t\tapp.generateplanet(\"RAL GAI'GAW\").advanced().settle(4).conquer(5).influence(3).zone('purple').icon('trade'),\n\t\t\t\tapp.generateplanet('ECHO ROSE').advanced().settle(5).conquer(4).influence(3).zone('purple')              .icon('research'),\n\t\t\t\tapp.generateplanet('SHOLMICAN').advanced().settle(3).conquer(6).influence(4).zone('purple'),\n\t\t\t\tapp.generateplanet('ZEPHAN').advanced().settle(3).conquer(6).influence(4)               .icon('trade'),\n\t\t\t\tapp.generateplanet('SIMA-07C').advanced().settle(5).conquer(4).influence(2).zone('purple')                              .handsize(1),\n\t\t\t\tapp.generateplanet('LYTTLE').advanced().settle(4).conquer(5).influence(3).zone('purple')              .icon('research'),\n\t\t\t\t//mettalic planets\n\t\t\t\tapp.generateplanet('KYRIE & JUNO').metallic().settle(3).conquer(6).influence(4)            .icon('survey'),\n\t\t\t\tapp.generateplanet('MARGHANNAH PRIME').metallic().settle(4).conquer(5).influence(3)                           .handsize(1),\n\t\t\t\tapp.generateplanet('TANKAHSHIN').metallic().settle(4).conquer(5).influence(3).zone('red').icon('warfare'),\n\t\t\t\tapp.generateplanet('VOSON').metallic().settle(4).conquer(5).influence(3).zone('red').icon('survey'),\n\t\t\t\tapp.generateplanet('PINK SONAR').metallic().settle(5).conquer(4).influence(3).zone('red').icon('survey'),\n\t\t\t\tapp.generateplanet(\"OVERLORD BETZEL'S DOMAIN\").metallic().settle(3).conquer(6).influence(4)            .icon('warfare'),\n\t\t\t\tapp.generateplanet('8910 SPIELEN').metallic().settle(4).conquer(5).influence(2).zone('red')               .handsize(1),\n\t\t\t\tapp.generateplanet('IDROYOS').metallic().settle(3).conquer(6).influence(5),\n\t\t\t\tapp.generateplanet('ERKAM-W').metallic().settle(5).conquer(4).influence(3).zone('red').icon('warfare')\n\t\t\t];\n\t\t\tgame.planet_deck = app.knuthshuffle(game.planet_deck);\n\t\t\tgame.stacks.startingplanets=[\n\t\t\t\tapp.generateplanet('MESIA SEDNIM').fertile().settle(2).conquer(2).influence(2).zone('blue'),\n\t\t\t\tapp.generateplanet('DRAWDE').fertile().settle(2).conquer(2).influence(2).zone('green'),\n\t\t\t\tapp.generateplanet('LIAGIBA').advanced().settle(2).conquer(2).influence(2).zone('purple'),\n\t\t\t\tapp.generateplanet('POMERENE').advanced().settle(2).conquer(2).influence(2).zone('purple'),\n\t\t\t\tapp.generateplanet('CHRISPEN').metallic().settle(2).conquer(2).influence(2).zone('red'),\n\t\t\t\tapp.generateplanet('PIEDRA SECA').metallic().settle(2).conquer(2).influence(2).zone('red'),\n\t\t\t],   \n\t\t\tgame.stacks.startingplanets = app.knuthshuffle(game.stacks.startingplanets);\n\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tcleanup(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet source_array = game.acting_player.limbo;\n\t\t\t\tlet destinations_host = game.acting_player;\n\t\t\t\tlet iterations = source_array.length;\n\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tdestinations_host[elem.final_destination_label].push(elem); \n\t\t\t\t}\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tpurchase(source_array, destination_array, final_destination_label, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet filtered_item = null\n\t\t\t\tfor (let i = 0; i < source_array.length; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) {\n\t\t\t\t\t\telem.final_destination_label=final_destination_label; \n\t\t\t\t\t\tdestination_array.push(elem);\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//remove_from_game hand->exile\n\t\t\tremove_from_game(source_array, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet filtered_item = null\n\t\t\t\tfor (let i = 0; i < source_array.length; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) {\n\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tpresent_as_choice(options){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.options=options;\n\t\t\t\tapp.send({'game':game});\n\t\t\t},\n\t\t\tsettle_colonies (planet, possessing_player){\n\t\t\t\tfor (let i = 0; i < planet.hosted_colonies.length; i++){\n\t\t\t\t\tpossessing_player.discard.push(planet.hosted_colonies.pop());\n\t\t\t\t}\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet filtered_item = null\n\t\t\t\tfor (let i = 0; i < possessing_player.unsettled_planets.length; i++){\n\t\t\t\t\tlet elem = possessing_player.unsettled_planets.pop();\n\t\t\t\t\tif (planet.identifier == elem.identifier && !removed) {\n\t\t\t\t\t\telem.settled=true;\n\t\t\t\t\t\tpossessing_player.settled_planets.push(elem);\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tpossesing_player.unsettled_planets.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//pass_turn leadingplayer->nextplayer\n\t\t\tpass_turn(){\n\t\t\t\tif (!app.get().lobby.online || app.get().lobby.screenname == app.get().game.acting_player.name ){\n\t\t\t\t\t//app.togglepasstoplayer();\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tgame.passt=false;\n\t\t\t\t\tgame.leading_player_index = (game.leading_player_index+1)%game.number_of_players;\n\t\t\t\t\tgame.acting_player_index=game.leading_player_index;\n\t\t\t\t\tgame.leadingplayer = game.players[game.leading_player_index];\n\t\t\t\t\tgame.acting_player = game.players[game.leading_player_index];\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\tapp.phasefinishfunction();\n\t\t\t\t}\n\t\t\t},\n\t\t\t//pass_priority actingplayer->nextplayer\n\t\t\tpass_priority(){\n\t\t\t\tif (!app.get().lobby.online || app.get().lobby.screenname == app.get().game.acting_player.name ){\n\t\t\t\t\t//app.togglepasstoplayer();\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tgame.passp=false;\n\t\t\t\t\tgame.acting_player_index = (game.acting_player_index+1)%game.number_of_players;\n\t\t\t\t\tgame.acting_player = game.players[game.acting_player_index];\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\tapp.phasefinishfunction();\n\t\t\t\t}\n\t\t\t},\n\t\t\t//determine_number_of_players logic->options->choice->number_of_players\n\t\t\tdetermine_number_of_players(callback){\n\t\t\t\t\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.minimum_number_of_players = 2;\n\t\t\t\tgame.maximum_number_of_players = 4;\n\t\t\t\tlet options=[];\n\t\t\t\tfor (let i = game.minimum_number_of_players; i <= game.maximum_number_of_players; i++ ){\n\t\t\t\t\toptions.push(i);\n\t\t\t\t}\n\t\t\t\tlet callbackwrapper = ()=>{ \n\t\t\t\t\t\tlet game=app.get().game;\n\t\t\t\t\t\tgame.number_of_players = game.choices;\n\t\t\t\t\t\tdocument.removeEventListener('choicemade',callbackwrapper); \t\t\n\t\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t};\n\t\t\t\tdocument.addEventListener('choicemade',callbackwrapper);\n\t\t\t\tapp.present_as_choice(options);\n\t\t\t},\n\t\t\t//produce poduction_pile->host\n\t\t\tproduce(planets, resources=1){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet prd = {blue:0,green:0,purple:0,red:0};\n\t\t\t\tfor (let j in planets){\n\t\t\t\t\tif (resources>0){\n\t\t\t\t\t\tfor ( let i = 0; i < planets[j].production_zones.length; i++){\n\t\t\t\t\t\t\tif (!planets[j].production_zones[i].filled){\n\t\t\t\t\t\t\t\tplanets[j].production_zones[i].filled=true;\n\t\t\t\t\t\t\t\tprd[planets[j].production_zones[i].type]++;\n\t\t\t\t\t\t\t\tresources--;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tapp.set({'game':game});\n\t\t\t\treturn prd;\n\t\t\t},\n\t\t\t//trade host->production_pile, influence_pile->player_influence\n\t\t\ttrade(planets, player, resources=1){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet prd = {blue:0,green:0,purple:0,red:0};\n\t\t\t\tfor (let j in planets){\n\t\t\t\t\tif (resources>0){\n\t\t\t\t\t\tfor ( let i = 0; i < planets[j].production_zones.length; i++){\n\t\t\t\t\t\t\tif (planets[j].production_zones[i].filled){\n\t\t\t\t\t\t\t\tplanets[j].production_zones[i].filled=false;\n\t\t\t\t\t\t\t\tprd[planets[j].production_zones[i].type]++;\n\t\t\t\t\t\t\t\tplayers[j].influence.push(game.influence.pop());\n\t\t\t\t\t\t\t\tresources--;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tapp.set({'game':game});\n\t\t\t\treturn prd;\n\t\t\t},\n\t\t\t//politics hand->limbo->exile, stacks->hand\n\t\t\tpolitics(politics_card, selected_center_card, player){\n\t\t\t\tapp.play(player.hand,player.limbo,'exile',politics_card.identifier);\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tif (game.stacks.pilecount[selected_center_card.type] >= 1){\n\t\t\t\t\tplayer.hand.push(Object.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks[selected_center_card.type]]));\n\t\t\t\t\tgame.stacks.pilecount[selected_center_card.type]--;\n\t\t\t\t}\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\t//research hand->exile\n\t\t\tresearch(cards, player, limit=2){\n\t\t\t\tfor (let i = 0; (i < cards.length && i < limit); i++){\n\t\t\t\t\tapp.remove_from_game(player.limbo, cards[i].identifier);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//boost logic->player_icons\n\t\t\tboost(cards, player){\n\t\t\t\tfor (let i = 0; i < cards.length; i++){\n\t\t\t\t\tfor (let j = 0; j < cards[i].icons.length; j++){\n\t\t\t\t\t\tlet [key,value] = cards[i].icons[j];\n\t\t\t\t\t\tplayer.boostingicons[key]+=value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t//survey deck->hand\n\t\t\tsurvey(player){\n\t\t\t\tapp.draw(player);\n\t\t\t\tapp.draw(player);\n\t\t\t},\n\t\t\t//colonize hand/limbo->host\n\t\t\tcolonize(planet, source_array, card, isRole=false){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet filtered_item = null;\n\t\t\t\tlet totalIteration = 1;\n\t\t\t\tif (isRole){ totalIteration = app.get().game.acting_player.boostingicons.colonize; }\n\t\t\t\tlet iterations = source_array.length;\n\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\tlet elem = source_array.pop();\n\t\t\t\t\tif (card.type == elem.type && card.final_destination_label!='exile' && !removed) {\n\t\t\t\t\t\tplanet.hosted_colonies.push(elem)\n\t\t\t\t\t\ttotalIteration--;\n\t\t\t\t\t\tif (totalIteration == 0){\n\t\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfiltered_item = elem;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource_array.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//warfare starship_pile->player_starship_pile\n\t\t\twarfare(player){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tplayer.starfighters.small++;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\t//conquer player_starship_pile->starship_pile, player_unconquered_planets->player_conquered_planets\n\t\t\tconquer(planet, player){\n\t\t\t\tif (player.starfighters.small >= planet.conquer_cost){\n\t\t\t\t\tplayer.starfighters.small -= planet.conquer_cost;\n\t\t\t\t\tplanet = app.select_via_identifier(player.unsettled_planets, planet.identifier);\n\t\t\t\t\tplanet.conquered=true;\n\t\t\t\t\tplayer.conquered_planets.push(planet);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//offer_to_boost present_as_choice, choose, boost\n\t\t\toffer_to_boost(player){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.displayinfo.selectionzone = 'hand';\n\t\t\t\tgame.displayinfo.allowformultipleselections = true;\n\t\t\t\tgame.displayinfo.showoptiontoskip = true;\n\t\t\t\tapp.present_as_choice(player.hand);\n\t\t\t\tlet callbackwrapper = ()=>{\n\t\t\t\t\tdocument.removeEventListener('choicemade',callbackwrapper);\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tapp.boost(game.choices, player);\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t};\n\t\t\t\tdocument.addEventListener('choicemade',callbackwrapper);\n\t\t\t},\n\t\t\tselect_via_identifier(source, identifier){\n\t\t\t\tlet temp_array = [];\n\t\t\t\tlet removed = false;\n\t\t\t\tlet selected_item = null;\n\t\t\t\tlet iterations = source.length;\n\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\tlet elem = source.pop();\n\t\t\t\t\tif (identifier == elem.identifier && !removed) {\n\t\t\t\t\t\tselected_item = elem;\n\t\t\t\t\t\tremoved=true;\n\t\t\t\t\t}\n\t\t\t\t\telse { temp_array.push(elem) }; \n\t\t\t\t}\n\t\t\t\tfor (let i in temp_array){\n\t\t\t\t\tsource.push(temp_array[i]);\n\t\t\t\t}\n\t\t\t\treturn selected_item;\n\t\t\t},\n\t\t\t\n\t\t\tboostrolewithcards(choices, callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet cards=choices;\n\t\t\t\tlet iterations = cards.length;\n\t\t\t\tif (cards[0].name!='Skip'){\n\t\t\t\t\tfor (let i = 0; i < iterations; i++){\n\t\t\t\t\t\tgame.acting_player.boostingicons[cards[i].type]++;\n\t\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\t\tapp.play(game.acting_player.hand,game.acting_player.limbo,'discard',cards[i].identifier);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tcallback();\n\t\t\t},\n\t\t\tgenerate_unique_identifier(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.nonce++;\t\n\t\t\t\tapp.set({'game':game});\n\t\t\t\treturn game.nonce;\n\t\t\t},\n\t\t\tperformleaderrole(callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.acting_player.activerole.role.role.leader(callback)\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tperformfollowerrole(callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.acting_player.activerole.set(game.leadingplayer.activerole.role);\n\t\t\t\tgame.acting_player.activerole.role.role.follower(callback);\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\texplore_planet(player){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet planet = game.planet_deck.pop();\n\t\t\t\tplayer.limbo.push({'final_destination_label':'planetdeck',...planet});\n\t\t\t\tgame.options.push(planet);\t\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tcatalog_planet(player){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\t\n\t\t\t\tlet planet=game.choices[0];\n\t\t\t\tplayer.unsettled_planets.push(planet);\n\t\t\t\t[,player.limbo] = app.select_via_identifier(player.limbo, planet.identifier);\n\t\t\t\tlet temparray = [];\n\t\t\t\tlet iterations = player.limbo.length\n\t\t\t\tfor (let i = 0; i >= iterations ; i++){  \n\t\t\t\t\tlet card = player.limbo.pop();\n\t\t\t\t\tif (card.final_destination_label='planetdeck'){\n\t\t\t\t\t\tgame.planet_deck.push(card);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttemparray.push(card);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tplayer.limbo=temparray;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tfollowcentercardrole(choices, callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet card = choices[0];\n\t\t\t\tgame.acting_player.activerole.set(card);\n\t\t\t\tif (game.stacks.pilecount[card.type] >= 1){\n\t\t\t\t\tgame.acting_player.boostingicons[card.type]++;\n\t\t\t\t\tgame.acting_player.limbo.push(Object.assign({'identifier':app.generate_unique_identifier(), 'final_destination_label':'discard'},game.stacks.rolecards[game.stacks[card.type]]));\n\t\t\t\t\t\n\t\t\t\t\tgame.stacks.pilecount[card.type]--;\n\t\t\t\t}\n\t\t\t\tlet [,,...arr] = arguments;\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tcallback(card,arr);\n\t\t\t},\n\t\t\tdiscardcardsfromhand(choices, callback=null){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tif(choices[0].name!=\"Skip\"){\n\t\t\t\t\tfor (let i = 0; i < choices.length; i++){\n\t\t\t\t\t\tapp.discard(game.acting_player.hand, game.acting_player.discard, choices[i].identifier);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet [,,...arr] = arguments;\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tcallback(choices,arr);\n\t\t\t},\n\t\t\tphasefinishfunction(send = false){\n\t\t\t\t//check for game end condition\n\t\t\t\t//if met, start a turn countdown to make sure everyone has had the same number of turns\n\t\t\t\t//also track who started the game\n\t\t\t\t//we can probably just track this as a total_rounds property of the player object, incrementing every time pass_turn is called\n\t\t\t\t// just check that all are equal\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.currentphase = (game.currentphase + 1) % game.gamesequence.length; \n\t\t\t\tlet jsobj = game.gamesequence[game.currentphase];\n\t\t\t\tlet nextphase;\n\t\t\t\tfor (let key in jsobj){\n\t\t\t\t\tgame.messagetoplayer.push(key);\n\t\t\t\t\tnextphase=jsobj[key];\n\t\t\t\t}\n\t\t\t\tif (game.nextphase !== app.endgame){\n\t\t\t\t\tgame.nextphase=nextphase;\n\t\t\t\t}\n\t\t\t\t// if (app.get().game.started && app.checkforendgame() && (game.players.reduce((t,p)=>{return t+p.rounds},0))%game.number_of_players == 0){\n\t\t\t\t// \tapp.totalinfluence();\n\t\t\t\t// \tnextphase = app.endgame;\n\t\t\t\t// }\n\t\t\t\tif (send){\n\t\t\t\t\tapp.send({'game':game});\n\t\t\t\t} else {\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t}\n\t\t\t\tgame.nextphase();\n\t\t\t},\n\t\t\tgenerategamesequence(){\n\t\t\t\tlet game=app.get().game;\n\t\t\t\tlet _gamesequence=[];\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[0].start],_gamesequence);\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[1].action],_gamesequence);\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[2].role],_gamesequence);\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[3].lead],_gamesequence);\n\t\t\t\tfor (let i = 1; i<game.number_of_players; i++){\n\t\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[4].follow],_gamesequence);\n\t\t\t\t}\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[5].discard],_gamesequence);\n\t\t\t\t_gamesequence = app.gshelper([...game.gamephases[6].cleanup],_gamesequence);\n\t\t\t\tgame.gamesequence = _gamesequence;\n\t\t\t\tapp.set({'game':game,'phases':_gamesequence});\n\t\t\t},\n\t\t\tgshelper(source_array, destination_array){\n\t\t\t\tfor (let i in source_array){\n\t\t\t\t\tdestination_array.push(source_array[i]);\n\t\t\t\t}\n\t\t\t\treturn destination_array;\n\t\t\t},\n\t\t\tgeneratenewdeck(){\n\t\t\t\tlet game= app.get().game;\n\t\t\t\tlet deck =  [\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.survey]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.survey]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.warfare]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.producetrade]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.producetrade]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.colonize]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.colonize]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.research]),\n\t\t\t\t\tObject.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks.research]),\n\t\t\t\t\t{\n\t\t\t\t\t\t'identifier':app.generate_unique_identifier(),\n\t\t\t\t\t\ttype : 'politics',\n                \t\t'selected':false,\n\t\t\t\t\t\taction : (callback)=>{\n\t\t\t\t\t\t\tlet callbackwrapper = ()=>{ \t\n\t\t\t\t\t\t\t\tdocument.removeEventListener('choicemade',callbackwrapper); \n\t\t\t\t\t\t\t\tlet game= app.get().game;\n\t\t\t\t\t\t\t\tapp.politics(game.acting_player.activeaction, game.choices[0], game.acting_player);\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t};\t\n\t\t\t\t\t\t\tlet game= app.get().game;\n\t\t\t\t\t\t\tgame.displayinfo.center_or_planets=true;\n\t\t\t\t\t\t\tgame.displayinfo.selectionzone='rolecards';\n\t\t\t\t\t\t\tgame.displayinfo.allowformultipleselections=false;\n\t\t\t\t\t\t\tgame.displayinfo.showoptiontoskip=false;\n\t\t\t\t\t\t\tgame.messagetoplayer.push('choose a card from the center row to add to your hand');\n\t\t\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\t\t\tdocument.addEventListener('choicemade',callbackwrapper);\n\t\t\t\t\t\t\tapp.present_as_choice(game.stacks.rolecards);\n\t\t\t\t\t\t},\n\t\t\t\t\t\trole : null,\n\t\t\t\t\t\ticons : {'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0,'politics':1},\n\t\t\t\t\t\tname : 'Politics',\n\t\t\t\t\t\timage : null\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t\tapp.set({'game':game});\n\t\t\t\treturn deck;\n\t\t\t},\n\t\t\tphaseincrement(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.currentphase++;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tnewgame(number_of_players){\n\t\t\t\tlet sets = app.get().lobby.sets;\n\t\t\t\t//returns {game_id, game_name, number_of_players, slots}\n\t\t\t\tlet ws = new WebSocket(app.get().lobby.url);\n\t\t\t\t//let ws = new io(app.get().lobby.url);\n\t\t\t\tapp.initgame(number_of_players);\n\t\t\t\tws.onmessage = (evt) => {\n\t\t\t\t\t// on receiving a message, add it to the list of messages\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tlet lobby = app.get().lobby;\n\t\t\t\t\tgame.game_id = JSON.parse(evt.data);\n\t\t\t\t\tgame.header='';\n\t\t\t\t\tlobby.existinggames.push(game);\n\t\t\t\t\tlobby.online=true;\n\t\t\t\t\tgame.currentphase++;\n\t\t\t\t\tapp.set({'game':game,'lobby':lobby});\n\t\t\t\t\tws.close();\n\t\t\t\t\t//app.enterexistinggame(app.get().game);\n\t\t\t\t};\n\t\t\t\tws.onopen = (evt) => {\n\t\t\t\t\tif (ws.readyState==1){\n\t\t\t\t\t\tws.send(JSON.stringify({'header':'newgame',game:app.get().game,sets:sets,number_of_players:number_of_players}));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tfetchexistinggames(){\n\t\t\t\t//returns list of [{game_id, game_name, number_of_players, slots},...]\n\t\t\t\tlet ws = new WebSocket(app.get().lobby.url);\n\t\t\t\t//let ws = new io(app.get().lobby.url);\n\t\t\t\tws.onmessage = (evt) => {\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tgame.currentphase = -2;\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\tlet lobby = app.get().lobby\n\t\t\t\t\tlobby.existinggames = JSON.parse(evt.data).map((el)=>{return el.game}).filter((el)=>{return el.players.filter((ll)=>{return ll.available}).length > 0});\n\t\t\t\t\tlobby.online = true;\n\t\t\t\t\tapp.set({'lobby':lobby});\n\t\t\t\t\tws.close();\n\t\t\t\t}\n\t\t\t\tws.onopen = (evt) => {\n\t\t\t\t\tif (ws.readyState==1){\n\t\t\t\t\t\tws.send(JSON.stringify({'header':'fetchexisting'}));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tenterexistinggame(g){\n\t\t\t\tlet game_id = g.game_id;\n\t\t\t\tlet slot = 0, player_name = app.get().lobby.screename;\n\t\t\t\tfor (let i in g.players){\n\t\t\t\t\tif (g.players[i].available){\n\t\t\t\t\t\tslot = i;\n\t\t\t\t\t\t//player_name = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tapp.initgame(g.number_of_players);\n\t\t\t\tlet ws = new WebSocket(app.get().lobby.url);\n\t\t\t\t//let ws = new io(app.get().lobby.url);\n\t\t\t\tws.onmessage = evt => {\n\t\t\t\t\t// on receiving a message, add it to the list of messages\n\t\t\t\t\tlet game = JSON.parse(evt.data);\n\t\t\t\t\tgame.gamesequence=app.get().phases;\n\t\t\t\t\tif (game.currentphase !=0) {\n\t\t\t\t\t\tgame.currentphase=-1;\t\n\t\t\t\t\t}\n\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\tws.close();\n\t\t\t\t\tif (game.currentphase != 0 ){\n\t\t\t\t\t\tapp.phasefinishfunction();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tws.onopen = (evt) => {\n\t\t\t\t\tif (ws.readyState==1){\n\t\t\t\t\t\tws.send(JSON.stringify({'header':'enterexisting',game_id:game_id,player_name,slot:slot}));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tinitgame(number_of_players){\n\t\t\t\tapp.generateplanetdeck();\n\t\t\t\tfor (let i = 0; i < number_of_players; i++){\n\t\t\t\t\tapp.generateplayer(i);\n\t\t\t\t}\n\t\t\t\tapp.generate_research_deck();\n\t\t\t\tapp.generategamesequence();\n\t\t\t\t//app.makews('ws://192.168.1.6:3030');\n\t\t\t\t//'ws://temperate-isle.herokuapp.com/:3030';\n\t\t\t\tapp.makews(location.origin.replace(/^http/, 'ws'));\n\t\t\t\tapp.generate_game_id();\n\t\t\t\t//app.phasefinishfunction();\n\t\t\t},\n\t\t\ttoggle_center_or_planets(){\n\t\t\t\tlet game=app.get().game;\n\t\t\t\tgame.displayinfo.center_or_planets = !game.displayinfo.center_or_planets;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\ttogglepasstoplayer(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.passtoplayer = !game.passtoplayer;\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tapp.openFullscreen();\n\t\t\t},\n\t\t\tclass_gen(zone, item){\n\t\t\t\treturn (app.get().game.displayinfo.selectionzone==zone) \n\t\t\t\t?   (\n\t\t\t\t\t(item.selected) \n\t\t\t\t\t\t? \"selected\" \n\t\t\t\t\t\t: \"selectable\"\n\t\t\t\t\t) \n\t\t\t\t: \"bordered\";\n\t\t\t},\n\t\t\tmakews(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tlet ws = new WebSocket(app.get().lobby.url);\n\t\t\t\t//let ws = new io(app.get().lobby.url);\n\t\t\t\tlet i = 0;\n\n\t\t\t\tws.onmessage = evt => {\n\t\t\t\t\t// on receiving a message, add it to the list of messages\n\t\t\t\t\tlet game = JSON.parse(evt.data);\n\t\t\t\t\tif (game.game_id==app.get().game.game_id){\n\t\t\t\t\t\tgame.gamesequence=app.get().phases;\n\t\t\t\t\t\tapp.set({'game':game});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tws.onopen = evt => {\n\t\t\t\t}\n\t\t\t\tws.onclose = () => {\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tapp.set({'game':game,'ws':ws});\n\t\t\t\t\n\t\t\t},\n\t\t\tsendstate(){\n\t\t\t\tlet ws = app.get().ws\n\t\t\t\tif (ws.readyState==1){\n\t\t\t\t\tws.send(JSON.stringify({'header':'set',...app.get().game}));\n\t\t\t\t}\n\t\t\t},\n\t\t\tgenerate_game_id(){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.game_id ='';\n\t\t\t\t//for(let i = 0; i < game.nonce; i++){\n\t\t\t\t\tgame.game_id += Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);\n\t\t\t\t//}\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tknuthshuffle(array) {\n\t\t\t\tlet currentIndex = array.length;\n\t\t\t\tlet temporaryValue, randomIndex;\n\t\t\t\t// While there remain elements to shuffle...\n\t\t\t\twhile (0 !== currentIndex) {\n\t\t\t\t\t// Pick a remaining element...\n\t\t\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\t\t\tcurrentIndex -= 1;\n\n\t\t\t\t\t// And swap it with the current element.\n\t\t\t\t\ttemporaryValue = array[currentIndex];\n\t\t\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\t\t\tarray[randomIndex] = temporaryValue;\n\t\t\t\t}\n\t\t\t\treturn array;\n\t\t\t},\n\t\t\tdrag(evt,item){\n\t\t\t\tlet game = app.get().game;\n\t\t\t\tgame.displayinfo.dragged=item;\n\t\t\t\tapp.set({'game':game});\n\t\t\t},\n\t\t\tdrop(evt){\n\t\t\t\tlet el = document.getElementById('playedcards').getBoundingClientRect();\n\t\t\t\tif (evt.changedTouches[0].clientX > el.left\n\t\t\t\t&& evt.changedTouches[0].clientX < el.left+ el.width\n\t\t\t\t&& evt.changedTouches[0].clientY < el.top+el.height\n\t\t\t\t&& evt.changedTouches[0].clientY > el.top){\n\t\t\t\t\tlet game = app.get().game;\n\t\t\t\t\tif(game.displayinfo.dragged!==null) app.choosewrapper(game.displayinfo.dragged);\n\t\t\t\t\tgame.displayinfo.dragged!=null;\n\t\t\t\t\tapp.set({'game':game});\n\n\t\t\t\t}\n\t\t\t\tlet ll = document.querySelector('#dragged');\n\t\t\t\tll.style.visibility=\"hidden\";\n\t\t\t},\n\t\t\tmove(evt, img){\n\t\t\t\tlet touch = evt.targetTouches[0];\n\t\t\t\t// Place element where the finger is\n\t\t\t\tlet el = document.querySelector('#dragged');\n\t\t\t\tel.style.position = \"absolute\";\n\t\t\t\tel.style.visibility=\"visible\";\n\t\t\t\tel.style.top = touch.pageY-75+'px';\n\t\t\t\tel.style.left = touch.pageX-50+'px';\n\t\t\t\tel.style.width = \"100px\";\n\t\t\t\tel.style.height = \"137px\";\n\t\t\t\tel.style.zIndex = \"4\";\n\t\t\t\tel.style.backgroundImage=\"url('\"+img+\"')\";\n\t\t\t\t//evt.target.style.transform = \"translate(\" + touch.pageX + 'px,' + touch.pageY + 'px);';\n\t\t\t},\n\t\t\tnewoffline(){\n\t\t\t\tlet {game:game,lobby:lobby} = app.get();\n\t\t\t\tlobby.online=false;\n\t\t\t\tgame.currentphase = -1;\n\t\t\t\tapp.set({'game':game});\n\t\t\t\tapp.initgame(2);\n\t\t\t\tapp.phasefinishfunction();\n\t\t\t},\n\t\t\tsetplayername(name){\n\t\t\t\tlet {lobby:lobby,game:game} = app.get();\n\t\t\t\tlobby.screename = name;\n\t\t\t\tgame.currentphase++;\n\t\t\t\tapp.set({'lobby':lobby,'game':game});\n\t\t\t},\n\t\t\topenFullscreen() {\n\t\t\t\tlet elem = document.getElementById(\"screen\");\n\t\t\t\tif (elem.requestFullscreen) {\n\t\t\t\telem.requestFullscreen();\n\t\t\t\t} else if (elem.mozRequestFullScreen) { /* Firefox */\n\t\t\t\telem.mozRequestFullScreen();\n\t\t\t\t} else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n\t\t\t\telem.webkitRequestFullscreen();\n\t\t\t\t} else if (elem.msRequestFullscreen) { /* IE/Edge */\n\t\t\t\telem.msRequestFullscreen();\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n</script>","import App from './App.html';\nlet nonce = 0;\nlet game = {\n    'passtoplayer':false,\n    'nonce':0,\n    'displayinfo':{\n        'selectionzone':'',\n        'dragged':null,\n        'showoptiontoskip':false,\n        'allowformultipleselections':false,\n        'center_or_planets':true, //true = center, false = planets\n        'choicelabel':'choices'\n    },\n    'subchoices':[],\n    'influence':[1,1,1,1,1,\n        1,1,1,1,1,\n        1,1,1,1,1,\n        1,1,1,1,1,\n        1,1,1,1,1,\n        1,1,1,1,1],\n    'messagetoplayer':[],\n    'options':[],\n    'planet_deck':[],\n    'currentphase':-4,\n    'leading_player_index':0,\n    'acting_player_index':0,\n    'number_of_players':2,\n    'started':false,\n    'gamephases':\n    [\n        //logic for detecting startofgame, endofgame, changeofpriority, and reseting the phasequeue\n        {\n            'start':\n            [\n                {\n                    'set active player':\n                        ()=>{ \n                            if (!app.get().game.started){\n                                let game = app.get().game;\n                                game.started = true;\n                                game.passt=false;\n                                app.set({'game':game});\n                                game = app.get().game;\n                                game.leading_player_index = (game.leading_player_index+1)%game.number_of_players;\n                                game.acting_player_index=game.leading_player_index;\n                                game.leadingplayer = game.players[game.leading_player_index];\n                                game.acting_player = game.players[game.leading_player_index];\n                                app.set({'game':game});\n                                app.openFullscreen();\n                            }\n                            let game = app.get().game;\n                            if (game.leadingplayer.rounds!==undefined){\n                                game.leadingplayer.rounds++;\n                            }\n                            app.set({'game':game});\n                            app.phasefinishfunction(true);\n                        }\n                }\n            ]\n        },\n\n        // action : 2\n        //      choose from hand an action to play or skip\n        //      -> set as activeaction\n        {\n            'action':\n            [\n                {\n                    'Choose an Action to Play':\n                        ()=>{\n                            app.offer(\n                                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['hand'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                         }\n                },\n                {\n                    'Playing your Action':\n                        ()=>{\n                            if (app.get().game.choices[0].name == 'Skip'){\n                                app.phasefinishfunction();\n                            } else { \n                                let { game:game, \n                                    game:{\n                                        acting_player:player,\n                                        acting_player:{\n                                            limbo:limbo,\n                                            hand:hand\n                                        },\n                                        choices:[card]\n                                    }\n                                } = app.get();\n\n                                player.activeaction=card.type;\n                                limbo = limbo.filter(\n                                    (el)=>{return card.identifier != el.identifier;}\n                                );\n                                limbo.push(\n                                    {'final_destination_label':'discard', \n                                    ...card\n                                    }\n                                );\n                                 hand = hand.filter(\n                                    (el)=>{return card.identifier != el.identifier}\n                                );\n                                player.limbo = limbo;\n                                player.hand=hand;\n                                game.acting_player = player;\n                                app.set({'game':game});\n                                app.phasefinishfunction(true);\n\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // colonize : 5 (can conjoin to 4)\n                //     settle or colonize\n                //      -> choose planet\n                //         -> settle\n                //      -> choose planet\n                //         -> colonize\n                {\n                    'Choose between Settling or Colonizing a Planet':\n                        ()=>{   \n                            if (app.get().game.acting_player.activeaction!='colonize'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'colonize'}, {name:'settle_colonies'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Choose an Unsettled Planet to Settle':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'colonize' || app.get().game.choices[0].name != 'settle_colonies'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Settling your Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'colonize' || app.get().game.choices[0].name != 'settle_colonies'){\n                                app.phasefinishfunction();\n                            } else {   \n                                app.settle_colonies(app.get().game.subchoices[0], app.get().game.acting_player);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Choose an Unsettled Planet to Colonize':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'colonize' || app.get().game.choices[0].name != 'colonize'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Colonizing your Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'colonize' || app.get().game.choices[0].name != 'colonize'){\n                                app.phasefinishfunction();\n                            } else {\n                                app.colonize(app.get().game.subchoices[0], app.get().game.acting_player.limbo , app.get().game.acting_player.limbo.filter((el)=>{ return el.type == 'colonize'})[0]);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // producetrade : 5\n                //      produce or trade\n                //      -> select an empty productionzone\n                //          -> produce\n                //      -> select an occupied productionzone\n                //          -> trade\n                {\n                    'Choose between Producing or Trading Resources':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction!='producetrade'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'produce'}, {name:'trade'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Choose a Planet to Produce Resources on':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'producetrade' || app.get().game.choices[0].name != 'produce'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['settled_&_conquered_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Producing a Resource':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'producetrade' || app.get().game.choices[0].name != 'produce'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.produce(app.get().game.subchoices);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Choose a Planet to Trade Resources from':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'producetrade' || app.get().game.choices[0].name != 'trade'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['settled_&_conquered_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Trading a Resource':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'producetrade' || app.get().game.choices[0].name != 'trade'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.trade(app.get().game.subchoices,app.get().game.acting_player);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                //#######################################################################################################################################################################################\n                // politics : 2 \n                //      choose card from center row\n                //          -> politics\n                {\n                    'Choose a Role Card to Replace Politics with':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'politics' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['rolecards'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Swapping the Role Card for your Politics Card':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'politics' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.politics(app.get().game.acting_player.limbo.filter((el)=>{ return el.type == 'politics'})[0], app.get().game.choices[0], app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // research : 2\n                //      choose card(s) from hand\n                //      -> research\n                {\n                    'Choose up to 2 Cards from your Hand to Remove from the Game':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'research' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['hand'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Removing your Cards from the Game':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'research' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.research(app.get().game.choices, app.get().game.acting_player);\n                           app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // survey : 1\n                //      -> survey\n                {\n                    'Surveying your Empire':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'survey' ){\n                               app.phasefinishfunction();\n                            } else {    \n                                app.survey(app.get().game.acting_player);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // warfare : 4\n                //      attack or collect\n                //          -> collect\n                //          -> choose planet\n                //              -> conquer\n                {\n                    'Choose between Collecting a Starfighter or Conquering a Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'warfare' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'Conquer a Planet'}, {name:'Collect a Starfighter'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Adding a Starfighter to your Fleet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'warfare' || app.get().game.choices[0].name!='Collect a Starfighter'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.warfare(app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Choose a Planet to Conquer':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'warfare' || app.get().game.choices[0].name!='Conquer a Planet'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Conquering your planet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'warfare' || app.get().game.choices[0].name!='Conquer a Planet'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.conquer(app.get().game.subchoices[0], app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // improved_colonize : 8\n                //      optional settle or no\n                //      -> choose planet\n                //         -> settle\n                //      settle or colonize\n                //      -> choose planet\n                //         -> settle\n                //      -> choose planet\n                //         -> colonize\n                {\n                    'Choose wether or not to Settle a Planet ':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'improved_colonize' || app.get().game.choices[0].name!='settle'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['options',[{'name':'settle'},{'name':'Skip'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Choose a Planet to Settle':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'improved_colonize' || app.get().game.choices[0].name!='settle'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Settling your Planet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'improved_colonize' || app.get().game.choices[0].name!='settle'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.settle_colonies(app.get().game.subchoices[0], app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Choose between Settling or Colonizing a Planet':\n                        ()=>{   \n                            if (app.get().game.acting_player.activeaction!='improved_colonize'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'colonize'}, {name:'settle_colonies'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Choose an Unsettled Planet to Settle':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_colonize' || app.get().game.choices[0].name != 'settle_colonies'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Settling your Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_colonize' || app.get().game.choices[0].name != 'settle_colonies'){\n                                app.phasefinishfunction();\n                            } else {\n                                app.settle_colonies(app.get().game.subchoices[0], app.get().game.acting_player);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Choose an Unsettled Planet to Colonize':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_colonize' || app.get().game.choices[0].name != 'colonize'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Colonizing your Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_colonize' || app.get().game.choices[0].name != 'colonize'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.colonize(app.get().game.subchoices[0], app.get().game.acting_player.limbo , app.get().game.acting_player.limbo.filter((el)=>{ return el.type == 'improved_colonize'})[0]);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // improved_produce : 4\n                //      -> select an empty productionzone (optional)\n                //          -> produce\n                //              -> select an empty productionzone (optional)\n                //                  -> produce\n                {\n                    'Choose an empty Production Zone to Produce in':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_production' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['settled_&_conquered_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Producing your Resource':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_production' || app.get().game.choices[0].name=='Skip' ){\n                                app.phasefinishfunction();\n                            } else {   \n                                app.produce(app.get().game.choices);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Choose an empty Production Zone to Produce in':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_production' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['settled_&_conquered_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Producing your Resource':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_production'|| app.get().game.choices[0].name=='Skip' ){\n                                app.phasefinishfunction();\n                            } else {   \n                                app.produce(app.get().game.choices);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // improved_trade : 1\n                //      -> improved_trade\n                {\n                    'Trading your Stocks and Bonds':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'improved_trade' ){\n                                app.phasefinishfunction();\n                            } else {   \n                                let game = app.get().game;\n                                game.acting_player.influence.push(game.influence.pop());\n                                app.set({'game':game});\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // improved_research : 2\n                //      choose card(s) from hand\n                //      -> improved_research\n                {\n                    'Choose up to 3 Cards from your Hand to Remove from the Game':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_research' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.draw(app.get().game.acting_player);\n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['hand'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Removing your Cards from the Game':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'improved_research' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            research(app.get().game.choices, app.get().game.acting_player, 3);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // improved_survey : 1\n                //      -> improved_survey\n                {\n                    'Drawing your Cards':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'improved_survey' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.draw(app.get().game.acting_player);\n                            app.draw(app.get().game.acting_player);\n                            app.draw(app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // improved_warfare : 4\n                //      attack or collect\n                //      -> collect \n                //      -> choose planet\n                //           -> conquer\n                {\n                    'Choose between Collecting a Starfighter or Conquering a Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'improved_warfare' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'Conquer a Planet'}, {name:'Collect a Starfighter'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Adding a Starfighter to your Fleet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'improved_warfare' || app.get().game.choices[0].name!='Collect a Starfighter'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.warfare(app.get().game.acting_player);\n                            app.warfare(app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Choose a Planet to Conquer':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'improved_warfare' || app.get().game.choices[0].name!='Conquer a Planet'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Conquering your planet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'improved_warfare' || app.get().game.choices[0].name!='Conquer a Planet'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.conquer(app.get().game.subchoices[0], app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // mobilization : 4\n                //      -> mobilization\n                //      choose wether to attack (post role phase)\n                //      -> choose planet\n                //          -> conquer\n                {\n                    'Collecting your Star Fighters':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'mobilization'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.warfare(app.get().game.acting_player);\n                            app.warfare(app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n               \n                // #######################################################################################################################################################################################\n                // survey_team : 1\n                //      -> survey_team\n                {\n                    'Adding Top Card of the Planet deck to your Empire':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'survey_team'){\n                                app.phasefinishfunction();\n                            } else {    \n                                let {game:game, game:{acting_player:player,planet_deck:planet_deck}} = app.get();\n                                let planet = planet_deck.pop();\n                                player.unsettled_planets.push(planet);\n                                app.set({'game':game});\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // war_path : 4\n                //      choose a planet (optional)\n                //         -> conquer\n                //              choose a planet (optional)\n                //                  -> conquer\n                {\n                    'Choose a Planet to Conquer':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'war_path' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Conquering your planet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'war_path' || app.get().game.choices[0].name!='Skip'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.conquer(app.get().game.choices[0], app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Choose a Planet to Conquer':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'war_path' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Conquering your planet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'war_path' || app.get().game.choices[0].name!='Skip'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.conquer(app.get().game.choices[0], app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // terraforming : 2\n                //      choose planet\n                //      -> terraforming\n                {\n                    'Choose an Unsettled Planet to Terraform':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'terraforming'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Terraforming your Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activeaction != 'terraforming' || app.get().game.choices[0].name != 'colonize'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.colonize(app.get().game.choices[0], app.get().game.acting_player.limbo , app.get().game.acting_player.limbo.filter((el)=>{ return el.type == 'terraforming'})[0]);\n                                if (app.get().game.choices[0].hosted_colonies.length > 0){\n                                    let c = app.get().game.choices[0].hosted_colonies.reduce((acc, cur)=>{acc+cur.icons.colonize;});\n                                    if (c >= app.get().game.choices[0].settle_cost){\n                                        app.settle_colonies(app.get().game.choices[0], app.get().game.acting_player);\n                                    }\n                                }\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // genetic_engineering :1\n                //      -> genetic_engineering\n                {\n                    'Engineering Genetics':\n                    ()=>{\n                        if (app.get().game.acting_player.activeaction != 'genetic_engineering'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.phasefinishfunction();\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // artificial_intelligence : 4\n                //      choose center row card\n                //          -> artificial_intelligence\n                //              choose center row card\n                //                  -> artificial_intelligence\n                {\n                    'Select a Role Card to take into your Hand':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'artificial_intelligence'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['rolecards'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Adding Role Card to your Machine Learning Model':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'artificial_intelligence'){\n                                app.phasefinishfunction();\n                            } else {    \n                                let {game:game,game:{acting_player:player}}=app.get();\n                                if (game.stacks.pilecount[game.choices[0].type] >= 1){\n                                    player.hand.push(Object.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks[game.choices[0].type]]));\n                                    game.stacks.pilecount[game.choices[0].type]--;\n                                }\n                                app.set({'game':game});\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Select a Role Card to take into your Hand':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'artificial_intelligence'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['rolecards'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Adding Role Card to your Machine Learning Model':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'artificial_intelligence'){\n                                app.phasefinishfunction();\n                            } else {    \n                                let {game:game,game:{acting_player:player}}=app.get();\n                                if (game.stacks.pilecount[game.choices[0].type] >= 1){\n                                    player.hand.push(Object.assign({'identifier':app.generate_unique_identifier()}, game.stacks.rolecards[game.stacks[game.choices[0].type]]));\n                                    game.stacks.pilecount[selected_center_card.type]--;\n                                }\n                                app.set({'game':game});\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // diverse_markets : 1\n                //      -> diverse_markets\n                {\n                    'Diversifying Markets':\n                    ()=>{\n                        if (app.get().game.acting_player.activeaction != 'diverse_markets'){\n                           app.phasefinishfunction();\n                        } else {    \n                            app.phasefinishfunction();\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // specialization : 2\n                //      choose resource type\n                //          -> specialization\n                {\n                    'Choose a Resource to Specialize in':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'specialization'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [ {name:'red'}, {name:'blue'}, {name:'gren'}, {name:'purple'} ] ] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Specializaing in your Seleted Resource':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'specialization'){\n                                app.phasefinishfunction();\n                            } else {    \n                                let game = app.get().game;\n                                game.acting_player.specialization = game.choices[0].name;\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // data_network : 3\n                //      -> data_network\n                //      choose card(s) from hand\n                //          -> research\n                {\n                    'Drawing Your Cards':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'data_network'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.draw(app.get().game.acting_player);\n                                app.draw(app.get().game.acting_player);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Choose any number of Cards from your Hand to Remove from the Game':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'data_network'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['hand'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Removing the Selected Cards from the Game':\n                        ()=>{\n                            if (app.get().game.acting_player.activeaction != 'data_network' || app.get().game.choices[0].name == 'Skip'){\n                                app.phasefinishfunction();\n                            } else {    \n                                let { game:game, game: { choices:choices, acting_player:player } } = app.get();\n                                app.research(choices,player,choices.length);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n\n            ]\n        },\n       \n        // choose role : 2\n        //      choose between center rolecards to lead with\n        //      -> lead with role\n        // boosting cards :2 \n        //      choose card(s) from hand to boost with\n        //      -> boost role\n        {\n            'role':\n            [\n                {\n                    'Choose a Role Card to Lead with':\n                    ()=>{ \n                        app.offer(\n                            false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                            false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                            ['rolecards'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                            'choices' /* label for where the choice is stored | set with game[label]=*/,\n                            app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                        );\n                    }\n                },\n                {\n                    'Performing your Role':\n                    ()=>{ \n                        let {game:game,game:{choices:[card]}} = app.get();\n                        if (game.stacks.pilecount[card.type] >= 1){\n                            game.acting_player.boostingicons[card.type]++;\n                            let newcard = Object.assign({'identifier':app.generate_unique_identifier(), 'final_destination_label':'discard','selected':true},game.stacks.rolecards[game.stacks[card.type]]);\n                            game.acting_player.limbo.push(newcard);\n                            game.stacks.pilecount[card.type]--;\n                        } else if (card.type!='colonize'){\n                            game.acting_player.boostingicons[card.type]++;\n                        }\n                        game.acting_player.activerole = card.type;\n                        app.set({'game':game});\n                        app.phasefinishfunction(true);\n                    }\n                },\n            ]\n        },\n        \n        // colonize : 5 (can conjoin to 4)\n        //     settle or colonize\n        //      -> choose planet\n        //         -> settle\n        //      -> choose planet\n        //         -> colonize\n        // producetrade : 5\n        //      produce or trade\n        //      -> select an empty productionzone\n        //          -> produce\n        //      -> select an occupied productionzone\n        //          -> trade\n        // research : 2\n        //      choose card(s) from hand\n        //      -> research\n        // survey : 1\n        //      -> survey\n        // warfare : 4\n        //      attack or collect\n        //          -> collect\n        //          -> choose planet\n        //              -> conquer\n        {\n            'lead':\n            [\n                {\n                    'Choose cards from your hand to Boost the effectiveness of your Role' :\n                    ()=>{\n                        app.offer(\n                            true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                            true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                            ['hand'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                            'choices' /* label for where the choice is stored | set with game[label]=*/,\n                            app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                        );\n                    }\n                },\n                {\n                    'Boosting your Role' :\n                    ()=>{\n                        let { game:game, \n                                game:{\n                                    acting_player:player,\n                                    acting_player:{\n                                        limbo:limbo,\n                                        hand:hand\n                                    },\n                                    choices:cards\n                                }\n                            } = app.get();\n                        if (cards[0].name=='Skip'){\n                            app.phasefinishfunction();\n                        } else {\n                            for (let i in cards){\n                                player.boostingicons[cards[i].type]++;\n                            //     limbo.push(\n                            //         {'final_destination_label':'discard', \n                            //         ...hand.filter(\n                            //             (el)=>{return cards[i].identifier == el.identifier;}\n                            //         )[0]\n                            //         }\n                            //     );\n                            //     hand = hand.filter(\n                            //         (el)=>{return cards[i].identifier != el.identifier}\n                            //     );\n                            }\n                            player.hand=hand;\n                            //TODO: tally up icons on planets\n                            //TODO: tally up icons on technologies\n                            app.set({'game':game});\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                }, \n                \n                // #######################################################################################################################################################################################\n                // colonize : 5 (can conjoin to 4)\n                //     settle or colonize\n                //      -> choose planet\n                //         -> settle\n                //      -> choose planet\n                //         -> colonize\n                {\n                    'Choose between Settling or Colonizing a Planet':\n                        ()=>{   \n                            if (app.get().game.acting_player.activerole!='colonize'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'colonize'}, {name:'settle_colonies'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Choose an Unsettled Planet to Settle':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'colonize' || app.get().game.choices[0].name != 'settle_colonies'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Settling your Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'colonize' || app.get().game.choices[0].name != 'settle_colonies'){\n                                app.phasefinishfunction();\n                            } else {   \n                                app.settle_colonies(app.get().game.subchoices[0], app.get().game.acting_player);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Choose an Unsettled Planet to Colonize':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'colonize' || app.get().game.choices[0].name != 'colonize'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Colonizing your Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'colonize' || app.get().game.choices[0].name != 'colonize'){\n                                app.phasefinishfunction();\n                            } else {   \n                                let j = 0; \n                                let planet = app.get().game.subchoices[j];\n                                for (let i = 0; i < app.get().game.acting_player.boostingicons.colonize; i++ ){\n                                    \n                                    if (planet.hosted_colonies.length > 0 ){\n                                        if(planet.hosted_colonies.reduce((acc, cur)=>{return acc+cur.icons.colonize}) >= planet.settle_cost && j < app.get().game.subchoices.length-1 ){\n                                            j++;\n                                            planet = app.get().game.subchoices[j];\n                                        }                                    }\n                                    app.colonize(planet, app.get().game.acting_player.limbo , app.get().game.acting_player.limbo.filter((el)=>{ return el.type == 'colonize'})[0]);\n                                }\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // producetrade : 5\n                //      produce or trade\n                //      -> select an empty productionzone\n                //          -> produce\n                //      -> select an occupied productionzone\n                //          -> trade\n                {\n                    'Choose between Producing or Trading Resources':\n                        ()=>{\n                            if (app.get().game.acting_player.activerole!='producetrade'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'produce'}, {name:'trade'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Choose a Planet to Produce Resources on':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'producetrade' || app.get().game.choices[0].name != 'produce'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['settled_&_conquered_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Producing a Resource':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'producetrade' || app.get().game.choices[0].name != 'produce'){\n                                app.phasefinishfunction();\n                            } else {\n                                ///app.set( {'game': { 'acting_player':{ 'activerole':'produce' } , ...app.get().game} } )    \n                                let game = app.get().game;\n                                game.acting_player.activerole='produce';\n                                app.set({'game':game});\n                                let prd = app.produce(game.subchoices,game.acting_player.boostingicons.produce);\n                                if (app.get().game.acting_player.activeaction='genetic_engineering'){\n                                    for (let i in prd){\n                                        if (prd[i] > 1){\n                                            players[j].influence.push(game.influence.pop());\n                                        }\n                                    }\n                                }\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Choose a Planet to Trade Resources from':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'producetrade' || app.get().game.choices[0].name != 'trade'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['settled_&_conquered_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Trading a Resource':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'producetrade' || app.get().game.choices[0].name != 'trade'){\n                                app.phasefinishfunction();\n                            } else {   \n                                let game = app.get().game;\n                                game.acting_player.activerole='trade';\n                                app.set({'game':game}); \n                                let prd = app.trade(game.subchoices,game.acting_player, game.acting_player.boostingicons.trade);\n                                if (app.get().game.acting_player.activeaction='diverse_markets'){\n                                    for (let i in prd){\n                                        if (prd[i] > 1){\n                                            app.get().game.acting_player.influence.push(app.get().game.influence.pop());\n                                        }\n                                    }\n                                }\n                                if (app.get().game.acting_player.activeaction='specialization'){\n                                    for ( let i in Array.from( prd[app.get().game.acting_player.specialization] ) ) {\n                                        app.get().game.acting_player.influence.push(app.get().game.influence.pop());\n                                    }\n                                }\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // research : 2\n                //      choose technologies from market\n                //      -> research\n                {\n                    'Choose a Technology to Research':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'research' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['research'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Researching your Technology':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'research' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            let game = app.get().game;\n                            if (game.choices[0].name!=\"Skip\"){\n                                //TODO check research card requirements\n                                //check for number of planets and type of planets\n                                let p = {'advanced':0,'metallic':0,'fertile':0};\n                                [...game.acting_player.settled_planets, ...game.acting_player.conquered_planets].map(\n                                    (el)=>{\n                                        p[el.type]++;\n                                    }\n                                );\n                                let condition = true;\n                                for (let i in game.choices[0].planet_requirements){\n                                    if (game.choices[0].planet_requirements[i] > p[i]){\n                                        condition = false;\n                                    }\n                                }\n                                if (condition && game.acting_player.boostingicons.research >= game.choices[0].research_cost){\n                                    if (game.choices[0].is_permanent){\n                                        app.play(game.research_deck, game.acting_player.permanents, '', game.choices[0].identifier);\n                                    } else {\n                                        app.play(game.research_deck, game.acting_player.limbo, 'discard', game.choices[0].identifier);\n                                    }\n                                }\n                            }\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // survey : 2\n                //      choose planet\n                //      -> survey\n                {\n                    'Choose a Planet from your Galaxy to Explore':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'survey' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            let game = app.get().game;\n                            //survey_role purchase, offer_to_boost explore_planet, present_as_choice, choose, catalog_planet, discard\n                            for (let i = 0; i < app.get().game.acting_player.boostingicons.survey; i++){\n                                app.explore_planet(game.acting_player); \n                            }\n                            app.set({'game':game});\n                            app.offer(\n                                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['options', app.get().game.options] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Surveying your Empire':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'survey' || app.get().game.choices[0].name=='Skip'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.catalog_planet(app.get().game.acting_player);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // warfare : 4\n                //      attack or collect\n                //          -> collect\n                //          -> choose planet\n                //              -> conquer\n                {\n                    'Choose between Collecting Starfighters or Conquering a Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'warfare' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'Conquer a Planet'}, {name:'Collect Starfighters'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Adding Starfighters to your Fleet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'warfare' || app.get().game.choices[0].name!='Collect Starfighters'){\n                            app.phasefinishfunction();\n                        } else {    \n                            for (let i = 0; i < app.get().game.acting_player.boostingicons.warfare; i++){\n                                app.warfare(app.get().game.acting_player);\n                            }\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Choose a Planet to Conquer':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'warfare' || app.get().game.choices[0].name!='Conquer a Planet'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Conquering your planet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'warfare' || app.get().game.choices[0].name!='Conquer a Planet'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.conquer(app.get().game.subchoices[0], app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Pass the device to the Next Player':\n                    ()=>{\n                        let game = app.get().game;\n                        game.displayinfo.selectionzone='';\n                        game.passp=true;\n                        app.set({'game':game});\n                    }\n                },\n                {\n                    'You passed Priority':\n                    ()=>{\n                        let game = app.get().game;\n                        //app.togglepasstoplayer();\n                        game.passp=false;\n                        app.set({'game':game});\n                        app.phasefinishfunction(true);\n                    }\n                },\n            ]\n        },\n        \n        // dissent : 2\n        //      choose between dissent or follow\n        //      -> dissent\n        //      -> follow\n        // boosting cards :2 \n        //      choose card(s) from hand to boost with\n        //      -> boost role\n        // action name : total subphases\n        // colonize : 5 (can conjoin to 4)\n        //     settle or colonize\n        //      -> choose planet\n        //         -> settle\n        //      -> choose planet\n        //         -> colonize for each symbol\n        // produce : 2\n        //      -> select an empty productionzone for each symbol\n        //          -> produce\n        // trade : 2\n        //      -> select an occupied productionzone for each symbol\n        //          -> trade\n        // research : 2\n        //      choose card from research pile\n        //      -> choose side (situational)\n        //          -> research\n        // survey : 1\n        //      -> explore for each symbol\n        //      choose planet\n        //      -> survey\n        // warfare : 4\n        //      attack or collect\n        //          -> collect fighter for each symbols\n        //          -> choose planet\n        //              -> conquer\n        {\n            'follow':\n            [\n                {\n                    'Choose between Fllowing or Dissent the Leading Role':\n                    ()=>{  \n                        app.offer(\n                            false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                            false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                            ['options', [{name:'dissent'}, {name:app.get().game.leadingplayer.activerole}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                            'choices' /* label for where the choice is stored | set with game[label]=*/,\n                            app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                        );\n                    }\n                },\n                {\n                    'Dissenting':\n                    ()=>{ \n                        let game = app.get().game;\n                        game.acting_player.activerole=game.choices[0].name;\n                        app.set({'game':game});\n                        if (app.get().game.acting_player.activerole!='dissent'){\n                            let {game:game,game:{choices:[card]}} = app.get();\n                            if (game.stacks.pilecount[card.name] >= 1){\n                                game.acting_player.boostingicons[card.name]++;\n                                let newcard = Object.assign({'identifier':app.generate_unique_identifier(), 'final_destination_label':'discard','selected':true},game.stacks.rolecards[game.stacks[card.name]]);\n                                game.acting_player.limbo.push(newcard);\n                                game.stacks.pilecount[card.name]--;\n                            } else if (card.type!='colonize'){\n                                game.acting_player.boostingicons[card.type]++;\n                            }\n                            app.set({'game':game});\n                            app.phasefinishfunction(true);\n                        } else {    \n                            app.draw(app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                }, //will auto pass to next phase if follow has been selected\n                {\n                    'Choose cards from your hand to Boost the effectiveness of your Role' :\n                    ()=>{\n                        if (app.get().game.acting_player.activerole=='dissent'){\n                            app.phasefinishfunction();\n                        } else {   \n                            app.offer(\n                                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['hand'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Boosting your Role' :\n                    ()=>{\n                        if (app.get().game.acting_player.activerole=='dissent'){\n                            app.phasefinishfunction();\n                        } else {  \n                            let { game:game, \n                                    game:{\n                                        acting_player:player,\n                                        acting_player:{\n                                            limbo:limbo,\n                                            hand:hand\n                                        },\n                                        choices:cards\n                                    }\n                                } = app.get();\n                            if (cards[0].name=='Skip'){\n                                app.phasefinishfunction();\n                            } else {\n                                for (let i in cards){\n                                    player.boostingicons[cards[i].type]++;\n                                    // limbo.push(\n                                    //     {'final_destination_label':'discard', \n                                    //     ...hand.filter(\n                                    //         (el)=>{return cards[i].identifier == el.identifier;}\n                                    //     )[0]\n                                    //     }\n                                    // );\n                                    // hand = hand.filter(\n                                    //     (el)=>{return cards[i].identifier != el.identifier}\n                                    // );\n                                }\n                                player.hand=hand;\n                                //TODO: tally up icons on planets\n                                //TODO: tally up icons on technologies\n                                app.set({'game':game});\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                    }\n                }, \n                \n                // #######################################################################################################################################################################################\n                // colonize : 5 (can conjoin to 4)\n                //     settle or colonize\n                //      -> choose planet\n                //         -> settle\n                //      -> choose planet\n                //         -> colonize\n                {\n                    'Choose between Settling or Colonizing a Planet':\n                        ()=>{   \n                            if (app.get().game.acting_player.activerole!='colonize'){\n                               app.phasefinishfunction();\n                            } else if ( game.acting_player.permanents.filter( (el)=>{return el.type=='bureaucracy'} ).length == 0){\n                                let game = app.get().game;\n                                game.choices=['colonize'];\n                                app.phasefinishfunction(true);\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'colonize'}, {name:'settle_colonies'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Choose an Unsettled Planet to Settle':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'colonize' || app.get().game.choices[0].name != 'settle_colonies'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Settling your Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'colonize' || app.get().game.choices[0].name != 'settle_colonies'){\n                                app.phasefinishfunction();\n                            } else {   \n                                app.settle_colonies(app.get().game.subchoices[0], app.get().game.acting_player);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                {\n                    'Choose an Unsettled Planet to Colonize':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'colonize' || app.get().game.choices[0].name != 'colonize'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Colonizing your Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'colonize' || app.get().game.choices[0].name != 'colonize'){\n                                app.phasefinishfunction();\n                            } else {   \n                                let j = 0; \n                                let planet = app.get().game.subchoices[j];\n                                for (let i = 0; i < app.get().game.acting_player.boostingicons.colonize; i++ ){\n                                    if (planet.hosted_colonies.length > 0 ) {\n                                        if(planet.hosted_colonies.reduce((acc, cur)=>{acc+cur.icons.colonize;}) >= planet.settle_cost && j < app.get().game.subchoices.length-1 ){\n                                            j++;\n                                            planet = app.get().game.subchoices[j];\n                                        }                                    }\n                                    app.colonize(planet, app.get().game.acting_player.limbo , app.get().game.acting_player.limbo.filter((el)=>{ return el.type == 'colonize'})[0]);\n                                }\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // producetrade : 5\n                //      produce or trade\n                //      -> select an empty productionzone\n                //          -> produce\n                //      -> select an occupied productionzone\n                //          -> trade\n                {\n                    'Choose a Planet to Produce Resources on':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'produce'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['settled_&_conquered_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Producing a Resource':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'produce'){\n                            app.phasefinishfunction();\n                        } else {\n                            ///app.set( {'game': { 'acting_player':{ 'activerole':'produce' } , ...app.get().game} } )    \n                            let game = app.get().game;\n                            game.acting_player.activerole='produce';\n                            app.set({'game':game});\n                            app.produce(game.subchoices,game.acting_player.boostingicons.produce);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Choose a Planet to Trade Resources from':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'trade'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['settled_&_conquered_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Trading a Resource':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'trade'){\n                                app.phasefinishfunction();\n                            } else {   \n                                let game = app.get().game;\n                                game.acting_player.activerole='trade';\n                                app.set({'game':game}); \n                                app.trade(game.subchoices,game.acting_player, game.acting_player.boostingicons.trade);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // research : 2\n                //      choose technologies from market\n                //      -> research\n                {\n                    'Choose a Technology to Research':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'research' ){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.offer(\n                                    true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['research'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Researching your Technology':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'survey' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            let game = app.get().game;\n                            if (game.choices[0].name!=\"Skip\"){\n                                //TODO check research card requirements\n                                //check for number of planets and type of planets\n                                let p = {'advanced':0,'metallic':0,'fertile':0};\n                                [...game.acting_player.settled_planets, ...game.acting_player.conquered_planets].map(\n                                    (el)=>{\n                                        p[el.type]++;\n                                    }\n                                );\n                                let condition = true;\n                                for (let i in game.choices[0].planet_requirements){\n                                    if (game.choices[0].planet_requirements[i] > p[i]){\n                                        condition = false;\n                                    }\n                                }\n                                if (condition && game.acting_player.boostingicons.research >= game.choices[0].research_cost){\n                                    app.play(game.research_deck, game.acting_player.limbo, 'discard', game.choices[0].identifier);\n                                }\n                            }\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                // #######################################################################################################################################################################################\n                // survey : 2\n                //      choose planet\n                //      -> survey\n                {\n                    'Choose a Planet from your Galaxy to Explore':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'survey' ){\n                            app.phasefinishfunction();\n                        } else {    \n                            let game = app.get().game;\n                            //survey_role purchase, offer_to_boost explore_planet, present_as_choice, choose, catalog_planet, discard\n                            for (let i = 0; i < game.acting_player.boostingicons.survey-1; i++){\n                                app.explore_planet(game.acting_player); \n                            }\n                            app.set({'game':game});\n                            app.offer(\n                                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['options'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Surveying your Empire':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'survey' || app.get().game.choices[0].name=='Skip'){\n                                app.phasefinishfunction();\n                            } else {    \n                                app.catalog_planet(app.get().game.acting_player);\n                                app.phasefinishfunction(true);\n                            }\n                        }\n                },\n                // #######################################################################################################################################################################################\n                // warfare : 4\n                //      attack or collect\n                //          -> collect\n                //          -> choose planet\n                //              -> conquer\n                {\n                    'Choose between Collecting Starfighters or Conquering a Planet':\n                        ()=>{        \n                            if (app.get().game.acting_player.activerole != 'warfare' ){\n                                app.phasefinishfunction();\n                            } else if ( app.get().game.acting_player.permanents.filter( (el)=>{return el.type=='bureaucracy'} ).length == 0){\n                                let game = app.get().game;\n                                game.choices=[{name:'Collect Starfighters'}];\n                                app.set({'game':game});\n                                app.phasefinishfunction(true);\n                            } else {    \n                                app.offer(\n                                    false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                    false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                    ['options', [{name:'Conquer a Planet'}, {name:'Collect Starfighters'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                    'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                    app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                                );\n                            }\n                        }\n                },\n                {\n                    'Adding Starfighters to your Fleet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'warfare' || app.get().game.choices[0].name!='Collect Starfighters'){\n                            app.phasefinishfunction();\n                        } else {    \n                            for (let i = 0; i < app.get().game.acting_player.boostingicons.warfare; i++){\n                                app.warfare(app.get().game.acting_player);\n                            }\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Choose a Planet to Conquer':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'warfare' || app.get().game.choices[0].name!='Conquer a Planet'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['unsettled_planets'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Conquering your planet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activerole != 'warfare' || app.get().game.choices[0].name!='Conquer a Planet'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.conquer(app.get().game.subchoices[0], app.get().game.acting_player);\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Pass the device to the Next Player':\n                    ()=>{\n                        let game = app.get().game;\n                        game.displayinfo.selectionzone='';\n                        game.passp=true;\n                        app.set({'game':game});\n                    }\n                },\n                {\n                    'You passed Priority':\n                    ()=>{\n                        let game = app.get().game;\n                        game.passp=false;\n                        app.set({'game':game});\n                        app.phasefinishfunction(true);\n                    }\n                },\n            ]\n        },\n\n        //discard : 2\n        //  select card(s) from hand\n        //  -> discard\n        {\n            'discard':\n            [\n                {\n                    'Would you like to Mobilize against a Planet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'mobilization'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['options', [{name:'mobilize'}, {name:'skip'}]] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'choices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Choose a Planet to Mobilize Against':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'mobilization' || app.get().game.choices[0].name != 'mobilize'){\n                            app.phasefinishfunction();\n                        } else {    \n                            app.offer(\n                                false /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                                false /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                                ['unsettled_planets']/* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                                'subchoices' /* label for where the choice is stored | set with game[label]=*/,\n                                app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                            );\n                        }\n                    }\n                },\n                {\n                    'Mobalizing against your Planet':\n                    ()=>{        \n                        if (app.get().game.acting_player.activeaction != 'mobilization'){\n                            app.phasefinishfunction();\n                        } else {   \n                            app.conquer(app.get().game.subchoices[0], app.get().game.acting_player); \n                            app.phasefinishfunction(true);\n                        }\n                    }\n                },\n                {\n                    'Choose any Cards you would like to Discard':\n                    ()=>{ \n                        app.offer(\n                            true /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,\n                            true /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, \n                            ['hand'] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|research|rolecards'}, sets choices=array if specified*/, \n                            'choices' /* label for where the choice is stored | set with game[label]=*/,\n                            app.phasefinishfunction /*callback that handles the choice or finishes the phase*/, \n                        );\n                    }\n                },\n                {\n                    'Discarding your Selected Cards':\n                    ()=>{ \n                        if(app.get().game.choices[0].name==\"Skip\"){\n                            app.phasefinishfunction();\n                        } else {\n                            let game = app.get().game;\n                            for (let i in game.choices){\n                                // obsolete after drag and dop additions game.acting_player.hand = game.acting_player.hand.filter((el)=>{return el.identifier != game.choices[i].identifier});\n                                game.acting_player.discard.push(game.choices[i]);\n                            }\n                            app.set({'game':game});\n                            app.phasefinishfunction(true);\n                        }\n                    }\n                }\n            ]\n        },\n        //cleanup : 1\n        //  -> cleanup\n        {\n            'cleanup':\n            [\n                {\n                    'Drawing up to your Hand Size':\n                    ()=>{ \n                        app.cleanup();\n                        let game = app.get().game;\n                        let handsize = game.acting_player.handsize;\n                        for (let index in game.acting_player.settled_planets){\n                            handsize+=game.acting_player.settled_planets[index].handsize_modifier;\n                        }\n                        for (let index in game.acting_player.conquered_planets){\n                            handsize+=game.acting_player.conquered_planets[index].handsize_modifier;\n                        }\n                        let l = game.acting_player.hand.length;\n                        if (l < handsize){\n                            app.draw(game.acting_player, handsize-l );\n                        }\n                        for (let i in game.players){\n                            game.players[i].boostingicons = {'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0};\n                        }\n                        if (app.get().game.started && app.checkforendgame() && (game.players.reduce((t,p)=>{return t+p.rounds},0))%game.number_of_players == 0){\n                            app.totalinfluence();\n                            game.nextphase = app.endgame;\n                        }\n                        app.set({'game':game});\n                        app.phasefinishfunction(true);\n                    }\n                },\n                {\n                    'Pass the device to the Next Player':\n                    ()=>{\n                        let game = app.get().game;\n                        game.displayinfo.selectionzone='';\n                        game.passp=false;\n                        game.passt=true;\n                        app.set({'game':game});\n                    }\n                },\n                {\n                    'You passed the Turn':\n                    ()=>{\n                        let game = app.get().game;\n                        //app.togglepasstoplayer();\n                        game.passt=false;\n                        app.set({'game':game});\n                        app.phasefinishfunction(true);\n                    }\n                },\n            ]\n        },\n    ],\n    'players':[],\n    'winner':false,\n    'stacks':{\n        'pilecount':{\n            'research':20,\n            'producetrade':16,\n            'colonize':20,\n            'warfare':16,\n            'survey':20\n        },\n        'survey':0,\n        'warfare':1,\n        'colonize':2,\n        'producetrade':3,\n        'research':4,\n        'rolecards':[\n            {\n                'type' : 'survey',\n                'selected':false,\n                'icons' : {'survey':1,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':0},\n                'name' : 'Survey',\n                'image' : null\n            },{\n                'type' : 'warfare',\n                'selected':false,\n                'icons' : {'survey':0,'warfare':1,'colonize':0,'produce':0,'trade':0,'research':0},\n                'name' : 'Warfare',\n                'image' : null\n            },{\n                'type' : 'colonize',\n                'selected':false,\n                'icons' : {'survey':0,'warfare':0,'colonize':1,'produce':0,'trade':0,'research':0},\n                'name' : 'Colonize',\n                'image' : null\n            },{\n                'type' : 'producetrade',\n                'selected':false,\n                'icons' : {'survey':0,'warfare':0,'colonize':0,'produce':1,'trade':1,'research':0},\n                'name' : 'Produce / Trade',\n                'image' : null,\n            },{\n                'type' : 'research',\n                'selected':false,\n                'icons' : {'survey':0,'warfare':0,'colonize':0,'produce':0,'trade':0,'research':1},\n                'name' : 'Research',\n                'image' : null,\n                'research_deck':[]\n            }\n        ],\n    },\n    \n};\n//let url = 'ws://temperate-isle.herokuapp.com:3030';\nlet url = location.origin.replace(/^http/, 'ws');//'ws://192.168.1.6:3030';\nlet lobby =\n{\n    screenname:'',\n    url:url,\n    sets: ['Base Game'],\n    number_of_players:[ 2, 3, 4],\n    existinggames:[],\n}\n \ngame.nonce=nonce;\nconst app = new App({\n\ttarget: document.body,\n\tdata: {\n        lobby: lobby,\n        game: game,\n        phases: game.gamephases,\n\t}\n});\nexport default app;"],"names":["app"],"mappings":"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"}